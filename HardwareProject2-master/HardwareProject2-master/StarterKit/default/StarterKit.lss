
StarterKit.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000026  00800100  0000458c  0000468c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000458c  00000000  00000000  00000100  2**8
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000008a5  00800126  00800126  000046b2  2**1
                  ALLOC
  3 .comment      00000011  00000000  00000000  000046b2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000046c4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000420  00000000  00000000  00004700  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003fcb  00000000  00000000  00004b20  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001139  00000000  00000000  00008aeb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00002cc5  00000000  00000000  00009c24  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000008fc  00000000  00000000  0000c8ec  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000f17  00000000  00000000  0000d1e8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00003552  00000000  00000000  0000e0ff  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000428  00000000  00000000  00011658  2**3
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 de 0d 	jmp	0x1bbc	; 0x1bbc <__ctors_end>
       4:	0c 94 57 0e 	jmp	0x1cae	; 0x1cae <__bad_interrupt>
       8:	0c 94 57 0e 	jmp	0x1cae	; 0x1cae <__bad_interrupt>
       c:	0c 94 57 0e 	jmp	0x1cae	; 0x1cae <__bad_interrupt>
      10:	0c 94 57 0e 	jmp	0x1cae	; 0x1cae <__bad_interrupt>
      14:	0c 94 57 0e 	jmp	0x1cae	; 0x1cae <__bad_interrupt>
      18:	0c 94 57 0e 	jmp	0x1cae	; 0x1cae <__bad_interrupt>
      1c:	0c 94 57 0e 	jmp	0x1cae	; 0x1cae <__bad_interrupt>
      20:	0c 94 57 0e 	jmp	0x1cae	; 0x1cae <__bad_interrupt>
      24:	0c 94 57 0e 	jmp	0x1cae	; 0x1cae <__bad_interrupt>
      28:	0c 94 57 0e 	jmp	0x1cae	; 0x1cae <__bad_interrupt>
      2c:	0c 94 57 0e 	jmp	0x1cae	; 0x1cae <__bad_interrupt>
      30:	0c 94 57 0e 	jmp	0x1cae	; 0x1cae <__bad_interrupt>
      34:	0c 94 b2 0e 	jmp	0x1d64	; 0x1d64 <__vector_13>
      38:	0c 94 f1 0e 	jmp	0x1de2	; 0x1de2 <__vector_14>
      3c:	0c 94 57 0e 	jmp	0x1cae	; 0x1cae <__bad_interrupt>
      40:	0c 94 57 0e 	jmp	0x1cae	; 0x1cae <__bad_interrupt>
      44:	0c 94 57 0e 	jmp	0x1cae	; 0x1cae <__bad_interrupt>
      48:	0c 94 57 0e 	jmp	0x1cae	; 0x1cae <__bad_interrupt>
      4c:	0c 94 57 0e 	jmp	0x1cae	; 0x1cae <__bad_interrupt>
      50:	0c 94 57 0e 	jmp	0x1cae	; 0x1cae <__bad_interrupt>
      54:	0c 94 57 0e 	jmp	0x1cae	; 0x1cae <__bad_interrupt>
      58:	0c 94 57 0e 	jmp	0x1cae	; 0x1cae <__bad_interrupt>
      5c:	0c 94 57 0e 	jmp	0x1cae	; 0x1cae <__bad_interrupt>
      60:	0c 94 57 0e 	jmp	0x1cae	; 0x1cae <__bad_interrupt>
      64:	0c 94 57 0e 	jmp	0x1cae	; 0x1cae <__bad_interrupt>
      68:	0c 94 57 0e 	jmp	0x1cae	; 0x1cae <__bad_interrupt>
      6c:	0c 94 57 0e 	jmp	0x1cae	; 0x1cae <__bad_interrupt>

00000070 <__trampolines_end>:
      70:	5a 55       	subi	r21, 0x5A	; 90
      72:	01 20       	and	r0, r1
      74:	01 01       	movw	r0, r2
      76:	00 38       	cpi	r16, 0x80	; 128
      78:	08 00       	.word	0x0008	; ????
	...

00000090 <io_table>:
      90:	81 00 45 00 5d ff 5e 10 27 ff 2a d2 2b 7d 21 0c     ..E.].^.'.*.+}!.
      a0:	22 fb 85 00 84 00 89 03 88 8d 81 09 6f 02 44 42     "...........o.DB
      b0:	47 00 45 01 b0 83 b3 00 b1 01 24 b9 25 57 8a 1d     G.E.......$.%W..
      c0:	8b 03                                               ..

000000c2 <patchCommands>:
      c2:	7e 11 81 11 89 11 8d 11 94 11 9c 11 a1 11 a6 11     ~...............
      d2:	a9 11 b9 11 bc 11 bf 11 fa 11 fd 11 00 12           ..............

000000e0 <fader>:
      e0:	00 40 88 91 d2 e4 ad b5 b6 be bf ff                 .@..........

000000ec <font>:
	...
     140:	00 00 ff 00 00 00 00 00 ff 00 00 00 00 00 ff 00     ................
     150:	00 00 00 00 ff 00 00 00 00 00 ff 00 00 00 00 00     ................
     160:	00 00 00 00 00 00 ff 00 00 00 00 00 00 00 00 00     ................
	...
     180:	00 00 00 ff 00 ff 00 00 00 ff 00 ff 00 00 00 ff     ................
     190:	00 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     1d4:	00 00 00 ff 00 ff 00 00 ff ff ff ff ff 00 00 ff     ................
     1e4:	00 ff 00 00 00 ff 00 ff 00 00 ff ff ff ff ff 00     ................
     1f4:	00 ff 00 ff 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     214:	ff 00 00 00 00 ff ff ff 00 00 ff 00 ff 00 ff 00     ................
     224:	ff 00 ff 00 00 00 00 ff ff ff 00 00 00 00 ff 00     ................
     234:	ff 00 ff 00 ff 00 ff 00 00 ff ff ff 00 00 00 00     ................
     244:	ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     260:	ff ff 00 00 ff 00 ff ff 00 00 ff 00 00 00 00 ff     ................
     270:	00 00 00 00 ff 00 00 00 00 ff 00 00 00 00 ff 00     ................
     280:	00 ff ff 00 ff 00 00 ff ff 00 00 00 00 00 00 00     ................
	...
     2a8:	00 ff 00 00 00 00 ff 00 ff 00 00 00 ff 00 ff 00     ................
     2b8:	00 00 00 ff 00 00 00 00 ff 00 ff 00 ff 00 ff 00     ................
     2c8:	00 ff 00 00 00 ff ff 00 ff 00 00 00 00 00 00 00     ................
	...
     2ec:	ff 00 00 00 00 00 ff 00 00 00 00 00 ff 00 00 00     ................
	...
     334:	00 ff 00 00 00 00 ff 00 00 00 00 00 ff 00 00 00     ................
     344:	00 ff 00 00 00 00 00 ff 00 00 00 00 00 ff 00 00     ................
     354:	00 00 00 00 ff 00 00 00 00 00 ff 00 00 00 00 00     ................
     364:	00 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     374:	00 00 00 00 00 00 00 ff 00 00 00 00 00 00 ff 00     ................
     384:	00 00 00 00 ff 00 00 00 00 00 00 ff 00 00 00 00     ................
     394:	00 ff 00 00 00 00 00 ff 00 00 00 00 ff 00 00 00     ................
     3a4:	00 00 ff 00 00 00 00 ff 00 00 00 00 00 00 00 00     ................
	...
     3c8:	00 00 ff 00 00 00 ff 00 ff 00 ff 00 00 ff ff ff     ................
     3d8:	00 00 00 00 ff 00 00 00 00 ff ff ff 00 00 ff 00     ................
     3e8:	ff 00 ff 00 00 00 ff 00 00 00 00 00 00 00 00 00     ................
	...
     418:	ff 00 00 00 00 00 ff 00 00 00 ff ff ff ff ff 00     ................
     428:	00 00 ff 00 00 00 00 00 ff 00 00 00 00 00 00 00     ................
	...
     474:	00 00 00 ff ff 00 00 00 00 ff ff 00 00 00 ff ff     ................
	...
     4b0:	00 00 ff ff ff ff ff 00 00 00 00 00 00 00 00 00     ................
	...
     504:	00 00 00 ff ff 00 00 00 00 ff ff 00 00 00 00 00     ................
	...
     534:	ff 00 00 00 00 ff 00 00 00 00 00 ff 00 00 00 00     ................
     544:	ff 00 00 00 00 ff 00 00 00 00 00 ff 00 00 00 00     ................
     554:	ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     578:	00 00 ff ff 00 00 00 ff 00 00 ff 00 00 ff 00 00     ................
     588:	ff 00 00 ff 00 00 ff 00 00 ff 00 00 ff 00 00 ff     ................
     598:	00 00 ff 00 00 00 ff ff 00 00 00 00 00 00 00 00     ................
	...
     5c0:	00 00 ff 00 00 00 00 ff ff 00 00 00 00 00 ff 00     ................
     5d0:	00 00 00 00 ff 00 00 00 00 00 ff 00 00 00 00 00     ................
     5e0:	ff 00 00 00 00 ff ff ff 00 00 00 00 00 00 00 00     ................
	...
     608:	00 ff ff ff 00 00 ff 00 00 00 ff 00 00 00 00 00     ................
     618:	ff 00 00 00 00 ff 00 00 00 00 ff 00 00 00 00 ff     ................
     628:	00 00 00 00 ff ff ff ff ff 00 00 00 00 00 00 00     ................
	...
     650:	ff ff ff ff ff 00 00 00 00 00 ff 00 00 00 00 ff     ................
     660:	00 00 00 00 ff ff 00 00 00 00 00 00 ff 00 ff 00     ................
     670:	00 00 ff 00 00 ff ff ff 00 00 00 00 00 00 00 00     ................
	...
     698:	00 00 00 ff 00 00 00 00 ff ff 00 00 00 ff 00 ff     ................
     6a8:	00 00 ff 00 00 ff 00 00 ff ff ff ff ff 00 00 00     ................
     6b8:	00 ff 00 00 00 00 00 ff 00 00 00 00 00 00 00 00     ................
	...
     6e0:	ff ff ff ff ff 00 ff 00 00 00 00 00 ff ff ff ff     ................
     6f0:	00 00 00 00 00 00 ff 00 00 00 00 00 ff 00 ff 00     ................
     700:	00 00 ff 00 00 ff ff ff 00 00 00 00 00 00 00 00     ................
	...
     728:	00 00 ff ff 00 00 00 ff 00 00 00 00 ff 00 00 00     ................
     738:	00 00 ff ff ff ff 00 00 ff 00 00 00 ff 00 ff 00     ................
     748:	00 00 ff 00 00 ff ff ff 00 00 00 00 00 00 00 00     ................
	...
     770:	ff ff ff ff ff 00 00 00 00 00 ff 00 00 00 00 ff     ................
     780:	00 00 00 00 00 ff 00 00 00 00 ff 00 00 00 00 00     ................
     790:	ff 00 00 00 00 00 ff 00 00 00 00 00 00 00 00 00     ................
	...
     7b8:	00 ff ff ff 00 00 ff 00 00 00 ff 00 ff 00 00 00     ................
     7c8:	ff 00 00 ff ff ff 00 00 ff 00 00 00 ff 00 ff 00     ................
     7d8:	00 00 ff 00 00 ff ff ff 00 00 00 00 00 00 00 00     ................
	...
     800:	00 ff ff ff 00 00 ff 00 00 00 ff 00 ff 00 00 00     ................
     810:	ff 00 00 ff ff ff ff 00 00 00 00 00 ff 00 00 00     ................
     820:	00 ff 00 00 00 ff ff 00 00 00 00 00 00 00 00 00     ................
	...
     854:	00 ff ff 00 00 00 00 ff ff 00 00 00 00 00 00 00     ................
     864:	00 00 00 ff ff 00 00 00 00 ff ff 00 00 00 00 00     ................
	...
     89c:	00 ff ff 00 00 00 00 ff ff 00 00 00 00 00 00 00     ................
     8ac:	00 00 00 ff ff 00 00 00 00 ff ff 00 00 00 ff ff     ................
	...
     8e0:	00 ff 00 00 00 00 ff 00 00 00 00 ff 00 00 00 00     ................
     8f0:	00 00 ff 00 00 00 00 00 00 ff 00 00 00 00 00 00     ................
	...
     92c:	ff ff ff ff ff 00 00 00 00 00 00 00 ff ff ff ff     ................
     93c:	ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     96c:	00 00 00 ff 00 00 00 00 00 00 ff 00 00 00 00 00     ................
     97c:	00 ff 00 00 00 00 ff 00 00 00 00 ff 00 00 00 00     ................
	...
     9b0:	00 ff ff ff 00 00 ff 00 00 00 ff 00 00 00 00 ff     ................
     9c0:	00 00 00 00 ff 00 00 00 00 00 ff 00 00 00 00 00     ................
     9d0:	00 00 00 00 00 00 ff 00 00 00 00 00 00 00 00 00     ................
	...
     9f8:	00 ff ff ff 00 00 ff 00 00 00 ff 00 ff 00 ff ff     ................
     a08:	ff 00 ff 00 ff 00 ff 00 ff 00 ff ff ff 00 ff 00     ................
     a18:	00 00 00 00 00 ff ff ff 00 00 00 00 00 00 00 00     ................
	...
     a40:	00 ff ff ff 00 00 ff 00 00 00 ff 00 ff 00 00 00     ................
     a50:	ff 00 ff ff ff ff ff 00 ff 00 00 00 ff 00 ff 00     ................
     a60:	00 00 ff 00 ff 00 00 00 ff 00 00 00 00 00 00 00     ................
	...
     a88:	ff ff ff ff 00 00 00 ff 00 00 ff 00 00 ff 00 00     ................
     a98:	ff 00 00 ff ff ff 00 00 00 ff 00 00 ff 00 00 ff     ................
     aa8:	00 00 ff 00 ff ff ff ff 00 00 00 00 00 00 00 00     ................
	...
     ad0:	00 ff ff ff 00 00 ff 00 00 00 ff 00 ff 00 00 00     ................
     ae0:	00 00 ff 00 00 00 00 00 ff 00 00 00 00 00 ff 00     ................
     af0:	00 00 ff 00 00 ff ff ff 00 00 00 00 00 00 00 00     ................
	...
     b18:	ff ff ff ff 00 00 00 ff 00 00 ff 00 00 ff 00 00     ................
     b28:	ff 00 00 ff 00 00 ff 00 00 ff 00 00 ff 00 00 ff     ................
     b38:	00 00 ff 00 ff ff ff ff 00 00 00 00 00 00 00 00     ................
	...
     b60:	ff ff ff ff ff 00 ff 00 00 00 00 00 ff 00 00 00     ................
     b70:	00 00 ff ff ff ff 00 00 ff 00 00 00 00 00 ff 00     ................
     b80:	00 00 00 00 ff ff ff ff ff 00 00 00 00 00 00 00     ................
	...
     ba8:	ff ff ff ff ff 00 ff 00 00 00 00 00 ff 00 00 00     ................
     bb8:	00 00 ff ff ff ff 00 00 ff 00 00 00 00 00 ff 00     ................
     bc8:	00 00 00 00 ff 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     bf0:	00 ff ff ff 00 00 ff 00 00 00 ff 00 ff 00 00 00     ................
     c00:	00 00 ff 00 00 00 00 00 ff 00 00 ff ff 00 ff 00     ................
     c10:	00 00 ff 00 00 ff ff ff 00 00 00 00 00 00 00 00     ................
	...
     c38:	ff 00 00 00 ff 00 ff 00 00 00 ff 00 ff 00 00 00     ................
     c48:	ff 00 ff ff ff ff ff 00 ff 00 00 00 ff 00 ff 00     ................
     c58:	00 00 ff 00 ff 00 00 00 ff 00 00 00 00 00 00 00     ................
	...
     c80:	00 ff ff ff 00 00 00 00 ff 00 00 00 00 00 ff 00     ................
     c90:	00 00 00 00 ff 00 00 00 00 00 ff 00 00 00 00 00     ................
     ca0:	ff 00 00 00 00 ff ff ff 00 00 00 00 00 00 00 00     ................
	...
     cc8:	00 00 ff ff ff 00 00 00 00 ff 00 00 00 00 00 ff     ................
     cd8:	00 00 00 00 00 ff 00 00 00 00 00 ff 00 00 ff 00     ................
     ce8:	00 ff 00 00 00 ff ff 00 00 00 00 00 00 00 00 00     ................
	...
     d10:	ff 00 00 00 ff 00 ff 00 00 ff 00 00 ff 00 ff 00     ................
     d20:	00 00 ff ff 00 00 00 00 ff 00 ff 00 00 00 ff 00     ................
     d30:	00 ff 00 00 ff 00 00 00 ff 00 00 00 00 00 00 00     ................
	...
     d58:	ff 00 00 00 00 00 ff 00 00 00 00 00 ff 00 00 00     ................
     d68:	00 00 ff 00 00 00 00 00 ff 00 00 00 00 00 ff 00     ................
     d78:	00 00 00 00 ff ff ff ff ff 00 00 00 00 00 00 00     ................
	...
     da0:	ff 00 00 00 ff 00 ff ff 00 ff ff 00 ff 00 ff 00     ................
     db0:	ff 00 ff 00 00 00 ff 00 ff 00 00 00 ff 00 ff 00     ................
     dc0:	00 00 ff 00 ff 00 00 00 ff 00 00 00 00 00 00 00     ................
	...
     de8:	ff 00 00 00 ff 00 ff 00 00 00 ff 00 ff ff 00 00     ................
     df8:	ff 00 ff 00 ff 00 ff 00 ff 00 00 ff ff 00 ff 00     ................
     e08:	00 00 ff 00 ff 00 00 00 ff 00 00 00 00 00 00 00     ................
	...
     e30:	00 ff ff ff 00 00 ff 00 00 00 ff 00 ff 00 00 00     ................
     e40:	ff 00 ff 00 00 00 ff 00 ff 00 00 00 ff 00 ff 00     ................
     e50:	00 00 ff 00 00 ff ff ff 00 00 00 00 00 00 00 00     ................
	...
     e78:	ff ff ff ff 00 00 ff 00 00 00 ff 00 ff 00 00 00     ................
     e88:	ff 00 ff ff ff ff 00 00 ff 00 00 00 00 00 ff 00     ................
     e98:	00 00 00 00 ff 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     ec0:	00 ff ff ff 00 00 ff 00 00 00 ff 00 ff 00 00 00     ................
     ed0:	ff 00 ff 00 00 00 ff 00 ff 00 ff 00 ff 00 ff 00     ................
     ee0:	00 ff 00 00 00 ff ff 00 ff 00 00 00 00 00 00 00     ................
	...
     f08:	ff ff ff ff 00 00 ff 00 00 00 ff 00 ff 00 00 00     ................
     f18:	ff 00 ff ff ff ff 00 00 ff 00 ff 00 00 00 ff 00     ................
     f28:	00 ff 00 00 ff 00 00 00 ff 00 00 00 00 00 00 00     ................
	...
     f50:	00 ff ff ff 00 00 ff 00 00 00 ff 00 ff 00 00 00     ................
     f60:	00 00 00 ff ff ff 00 00 00 00 00 00 ff 00 ff 00     ................
     f70:	00 00 ff 00 00 ff ff ff 00 00 00 00 00 00 00 00     ................
	...
     f98:	ff ff ff ff ff 00 00 00 ff 00 00 00 00 00 ff 00     ................
     fa8:	00 00 00 00 ff 00 00 00 00 00 ff 00 00 00 00 00     ................
     fb8:	ff 00 00 00 00 00 ff 00 00 00 00 00 00 00 00 00     ................
	...
     fe0:	ff 00 00 00 ff 00 ff 00 00 00 ff 00 ff 00 00 00     ................
     ff0:	ff 00 ff 00 00 00 ff 00 ff 00 00 00 ff 00 ff 00     ................
    1000:	00 00 ff 00 00 ff ff ff 00 00 00 00 00 00 00 00     ................
	...
    1028:	ff 00 00 00 ff 00 ff 00 00 00 ff 00 ff 00 00 00     ................
    1038:	ff 00 ff 00 00 00 ff 00 00 ff 00 ff 00 00 00 ff     ................
    1048:	00 ff 00 00 00 00 ff 00 00 00 00 00 00 00 00 00     ................
	...
    1070:	ff 00 00 00 ff 00 ff 00 00 00 ff 00 ff 00 00 00     ................
    1080:	ff 00 ff 00 00 00 ff 00 ff 00 ff 00 ff 00 ff 00     ................
    1090:	ff 00 ff 00 00 ff 00 ff 00 00 00 00 00 00 00 00     ................
	...
    10b8:	ff 00 00 00 ff 00 ff 00 00 00 ff 00 00 ff 00 ff     ................
    10c8:	00 00 00 00 ff 00 00 00 00 ff 00 ff 00 00 ff 00     ................
    10d8:	00 00 ff 00 ff 00 00 00 ff 00 00 00 00 00 00 00     ................
	...
    1100:	ff 00 00 00 ff 00 ff 00 00 00 ff 00 00 ff 00 ff     ................
    1110:	00 00 00 00 ff 00 00 00 00 00 ff 00 00 00 00 00     ................
    1120:	ff 00 00 00 00 00 ff 00 00 00 00 00 00 00 00 00     ................
	...
    1148:	ff ff ff ff ff 00 00 00 00 00 ff 00 00 00 00 ff     ................
    1158:	00 00 00 00 ff 00 00 00 00 ff 00 00 00 00 ff 00     ................
    1168:	00 00 00 00 ff ff ff ff ff 00 00 00 00 00 00 00     ................
	...
    1188:	00 00 00 ff ff ff 00 00 00 ff 00 00 00 00 00 ff     ................
    1198:	00 00 00 00 00 ff 00 00 00 00 00 ff 00 00 00 00     ................
    11a8:	00 ff 00 00 00 00 00 ff 00 00 00 00 00 ff 00 00     ................
    11b8:	00 00 00 ff ff ff 00 00 00 00 00 00 00 00 00 00     ................
	...
    11d8:	ff 00 00 00 00 00 00 ff 00 00 00 00 00 ff 00 00     ................
    11e8:	00 00 00 00 ff 00 00 00 00 00 00 ff 00 00 00 00     ................
    11f8:	00 ff 00 00 00 00 00 00 ff 00 00 00 00 00 00 00     ................
	...
    1218:	00 00 00 ff ff ff 00 00 00 00 00 ff 00 00 00 00     ................
    1228:	00 ff 00 00 00 00 00 ff 00 00 00 00 00 ff 00 00     ................
    1238:	00 00 00 ff 00 00 00 00 00 ff 00 00 00 00 00 ff     ................
    1248:	00 00 00 ff ff ff 00 00 00 00 00 00 00 00 00 00     ................
	...
    1264:	ff 00 00 00 00 ff 00 ff 00 00 ff 00 00 00 ff 00     ................
	...
    12e0:	ff ff ff ff ff 00 00 00 00 00 00 00 00 00 00 00     ................
    12f0:	00 00 00 ff 00 00 00 00 00 00 ff 00 00 00 00 00     ................
    1300:	00 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    134c:	00 ff ff ff 00 00 00 00 00 00 ff 00 00 ff ff ff     ................
    135c:	ff 00 ff 00 00 00 ff 00 00 ff ff ff ff 00 00 00     ................
	...
    1388:	ff 00 00 00 00 00 ff 00 00 00 00 00 ff ff ff ff     ................
    1398:	00 00 ff 00 00 00 ff 00 ff 00 00 00 ff 00 ff 00     ................
    13a8:	00 00 ff 00 ff ff ff ff 00 00 00 00 00 00 00 00     ................
	...
    13dc:	00 ff ff ff 00 00 ff 00 00 00 ff 00 ff 00 00 00     ................
    13ec:	00 00 ff 00 00 00 ff 00 00 ff ff ff 00 00 00 00     ................
	...
    141c:	ff 00 00 00 00 00 ff 00 00 ff ff ff ff 00 ff 00     ................
    142c:	00 00 ff 00 ff 00 00 00 ff 00 ff 00 00 00 ff 00     ................
    143c:	00 ff ff ff ff 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    146c:	00 ff ff ff 00 00 ff 00 00 00 ff 00 ff ff ff ff     ................
    147c:	00 00 ff 00 00 00 00 00 00 ff ff ff 00 00 00 00     ................
	...
    14a8:	00 00 ff ff 00 00 00 ff 00 00 ff 00 00 ff 00 00     ................
    14b8:	00 00 ff ff ff 00 00 00 00 ff 00 00 00 00 00 ff     ................
    14c8:	00 00 00 00 00 ff 00 00 00 00 00 00 00 00 00 00     ................
	...
    14fc:	00 ff ff ff 00 00 ff 00 00 00 ff 00 ff 00 00 00     ................
    150c:	ff 00 ff 00 00 00 ff 00 00 ff ff ff ff 00 00 00     ................
    151c:	00 00 ff 00 00 ff ff ff 00 00 00 00 00 00 00 00     ................
	...
    1538:	ff 00 00 00 00 00 ff 00 00 00 00 00 ff ff ff ff     ................
    1548:	00 00 ff 00 00 00 ff 00 ff 00 00 00 ff 00 ff 00     ................
    1558:	00 00 ff 00 ff 00 00 00 ff 00 00 00 00 00 00 00     ................
	...
    1580:	00 00 ff 00 00 00 00 00 00 00 00 00 00 ff ff 00     ................
    1590:	00 00 00 00 ff 00 00 00 00 00 ff 00 00 00 00 00     ................
    15a0:	ff 00 00 00 00 ff ff ff 00 00 00 00 00 00 00 00     ................
	...
    15cc:	ff 00 00 00 00 00 00 00 00 00 00 ff ff 00 00 00     ................
    15dc:	00 00 ff 00 00 00 00 00 ff 00 00 00 00 00 ff 00     ................
    15ec:	00 00 00 00 ff 00 00 ff 00 00 ff 00 00 00 ff ff     ................
	...
    1610:	ff 00 00 00 00 00 ff 00 00 00 00 00 ff 00 00 00     ................
    1620:	ff 00 ff 00 00 ff 00 00 ff ff ff 00 00 00 ff 00     ................
    1630:	00 ff 00 00 ff 00 00 00 ff 00 00 00 00 00 00 00     ................
	...
    1658:	00 ff ff 00 00 00 00 00 ff 00 00 00 00 00 ff 00     ................
    1668:	00 00 00 00 ff 00 00 00 00 00 ff 00 00 00 00 00     ................
    1678:	ff 00 00 00 00 ff ff ff 00 00 00 00 00 00 00 00     ................
	...
    16ac:	ff ff 00 ff 00 00 ff 00 ff 00 ff 00 ff 00 ff 00     ................
    16bc:	ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 00 00     ................
	...
    16f4:	ff 00 ff ff 00 00 ff ff 00 00 ff 00 ff 00 00 00     ................
    1704:	ff 00 ff 00 00 00 ff 00 ff 00 00 00 ff 00 00 00     ................
	...
    173c:	00 ff ff ff 00 00 ff 00 00 00 ff 00 ff 00 00 00     ................
    174c:	ff 00 ff 00 00 00 ff 00 00 ff ff ff 00 00 00 00     ................
	...
    1784:	ff ff ff ff 00 00 ff 00 00 00 ff 00 ff 00 00 00     ................
    1794:	ff 00 ff 00 00 00 ff 00 ff ff ff ff 00 00 ff 00     ................
    17a4:	00 00 00 00 ff 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    17cc:	00 ff ff ff ff 00 ff 00 00 00 ff 00 ff 00 00 00     ................
    17dc:	ff 00 ff 00 00 00 ff 00 00 ff ff ff ff 00 00 00     ................
    17ec:	00 00 ff 00 00 00 00 00 ff 00 00 00 00 00 00 00     ................
	...
    1814:	ff 00 ff ff 00 00 ff ff 00 00 ff 00 ff 00 00 00     ................
    1824:	00 00 ff 00 00 00 00 00 ff 00 00 00 00 00 00 00     ................
	...
    185c:	00 ff ff ff ff 00 ff 00 00 00 00 00 00 ff ff ff     ................
    186c:	00 00 00 00 00 00 ff 00 ff ff ff ff 00 00 00 00     ................
	...
    1898:	00 00 ff 00 00 00 00 00 ff 00 00 00 ff ff ff ff     ................
    18a8:	ff 00 00 00 ff 00 00 00 00 00 ff 00 00 00 00 00     ................
    18b8:	ff 00 00 00 00 00 00 ff ff 00 00 00 00 00 00 00     ................
	...
    18ec:	ff 00 00 00 ff 00 ff 00 00 00 ff 00 ff 00 00 00     ................
    18fc:	ff 00 ff 00 00 ff ff 00 00 ff ff 00 ff 00 00 00     ................
	...
    1934:	ff 00 00 00 ff 00 ff 00 00 00 ff 00 ff 00 00 00     ................
    1944:	ff 00 00 ff 00 ff 00 00 00 00 ff 00 00 00 00 00     ................
	...
    197c:	ff 00 00 00 ff 00 ff 00 00 00 ff 00 ff 00 ff 00     ................
    198c:	ff 00 ff 00 ff 00 ff 00 00 ff 00 ff 00 00 00 00     ................
	...
    19c4:	ff 00 00 00 ff 00 00 ff 00 ff 00 00 00 00 ff 00     ................
    19d4:	00 00 00 ff 00 ff 00 00 ff 00 00 00 ff 00 00 00     ................
	...
    1a0c:	ff 00 00 00 ff 00 ff 00 00 00 ff 00 ff 00 00 00     ................
    1a1c:	ff 00 00 ff 00 ff 00 00 00 00 ff 00 00 00 00 ff     ................
    1a2c:	00 00 00 00 ff 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    1a54:	ff ff ff ff ff 00 00 00 00 ff 00 00 00 00 ff 00     ................
    1a64:	00 00 00 ff 00 00 00 00 ff ff ff ff ff 00 00 00     ................
	...
    1a8c:	00 ff 00 00 00 00 ff 00 00 00 00 00 ff 00 00 00     ................
    1a9c:	00 00 ff 00 00 00 00 ff 00 00 00 00 00 00 ff 00     ................
    1aac:	00 00 00 00 ff 00 00 00 00 00 ff 00 00 00 00 00     ................
    1abc:	00 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    1ad4:	ff 00 00 00 00 00 ff 00 00 00 00 00 ff 00 00 00     ................
    1ae4:	00 00 ff 00 00 00 00 00 ff 00 00 00 00 00 ff 00     ................
    1af4:	00 00 00 00 ff 00 00 00 00 00 ff 00 00 00 00 00     ................
    1b04:	ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    1b14:	00 00 00 00 00 00 00 ff 00 00 00 00 00 00 ff 00     ................
    1b24:	00 00 00 00 ff 00 00 00 00 00 ff 00 00 00 00 00     ................
    1b34:	00 ff 00 00 00 00 ff 00 00 00 00 00 ff 00 00 00     ................
    1b44:	00 00 ff 00 00 00 00 ff 00 00 00 00 00 00 00 00     ................
	...
    1b74:	00 ff 00 00 ff 00 ff 00 ff 00 ff 00 ff 00 00 ff     ................
	...

00001ba4 <__c.2359>:
    1ba4:	53 63 6f 72 65 00                                   Score.

00001baa <__c.2361>:
    1baa:	48 45 41 4c 54 48 00                                HEALTH.

00001bb1 <__c.2363>:
    1bb1:	45 2e 48 50 00                                      E.HP.

00001bb6 <__c.2365>:
    1bb6:	4d 4f 4e 45 59 00                                   MONEY.

00001bbc <__ctors_end>:
    1bbc:	11 24       	eor	r1, r1
    1bbe:	1f be       	out	0x3f, r1	; 63
    1bc0:	cf ef       	ldi	r28, 0xFF	; 255
    1bc2:	d0 e1       	ldi	r29, 0x10	; 16
    1bc4:	de bf       	out	0x3e, r29	; 62
    1bc6:	cd bf       	out	0x3d, r28	; 61

00001bc8 <__do_copy_data>:
    1bc8:	11 e0       	ldi	r17, 0x01	; 1
    1bca:	a0 e0       	ldi	r26, 0x00	; 0
    1bcc:	b1 e0       	ldi	r27, 0x01	; 1
    1bce:	ec e8       	ldi	r30, 0x8C	; 140
    1bd0:	f5 e4       	ldi	r31, 0x45	; 69
    1bd2:	02 c0       	rjmp	.+4      	; 0x1bd8 <__do_copy_data+0x10>
    1bd4:	05 90       	lpm	r0, Z+
    1bd6:	0d 92       	st	X+, r0
    1bd8:	a6 32       	cpi	r26, 0x26	; 38
    1bda:	b1 07       	cpc	r27, r17
    1bdc:	d9 f7       	brne	.-10     	; 0x1bd4 <__do_copy_data+0xc>

00001bde <__do_clear_bss>:
    1bde:	29 e0       	ldi	r18, 0x09	; 9
    1be0:	a6 e2       	ldi	r26, 0x26	; 38
    1be2:	b1 e0       	ldi	r27, 0x01	; 1
    1be4:	01 c0       	rjmp	.+2      	; 0x1be8 <.do_clear_bss_start>

00001be6 <.do_clear_bss_loop>:
    1be6:	1d 92       	st	X+, r1

00001be8 <.do_clear_bss_start>:
    1be8:	ab 3c       	cpi	r26, 0xCB	; 203
    1bea:	b2 07       	cpc	r27, r18
    1bec:	e1 f7       	brne	.-8      	; 0x1be6 <.do_clear_bss_loop>

00001bee <wdt_init>:
	  if (j == count) {
		 WriteEeprom(i*EEPROM_BLOCK_SIZE,(u8)EEPROM_FREE_BLOCK);
		 WriteEeprom(i*EEPROM_BLOCK_SIZE+1,(u8)(EEPROM_FREE_BLOCK>>8));
	  }
   }
}
    1bee:	14 be       	out	0x34, r1	; 52
    1bf0:	0f b6       	in	r0, 0x3f	; 63
    1bf2:	f8 94       	cli
    1bf4:	a8 95       	wdr
    1bf6:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
    1bfa:	88 61       	ori	r24, 0x18	; 24
    1bfc:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
    1c00:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
    1c04:	0f be       	out	0x3f, r0	; 63

00001c06 <Initialize>:
    1c06:	f8 94       	cli
    1c08:	80 e9       	ldi	r24, 0x90	; 144
    1c0a:	90 e0       	ldi	r25, 0x00	; 0
    1c0c:	42 ec       	ldi	r20, 0xC2	; 194
    1c0e:	50 e0       	ldi	r21, 0x00	; 0
    1c10:	fc 01       	movw	r30, r24
    1c12:	25 91       	lpm	r18, Z+
    1c14:	34 91       	lpm	r19, Z
    1c16:	f9 01       	movw	r30, r18
    1c18:	ff 27       	eor	r31, r31
    1c1a:	30 83       	st	Z, r19
    1c1c:	02 96       	adiw	r24, 0x02	; 2
    1c1e:	48 17       	cp	r20, r24
    1c20:	59 07       	cpc	r21, r25
    1c22:	b1 f7       	brne	.-20     	; 0x1c10 <Initialize+0xa>
    1c24:	0e 94 67 11 	call	0x22ce	; 0x22ce <isEepromFormatted>
    1c28:	81 11       	cpse	r24, r1
    1c2a:	02 c0       	rjmp	.+4      	; 0x1c30 <Initialize+0x2a>
    1c2c:	0e 94 45 11 	call	0x228a	; 0x228a <FormatEeprom>
    1c30:	e3 e1       	ldi	r30, 0x13	; 19
    1c32:	f7 e0       	ldi	r31, 0x07	; 7
    1c34:	80 e8       	ldi	r24, 0x80	; 128
    1c36:	81 93       	st	Z+, r24
    1c38:	99 e0       	ldi	r25, 0x09	; 9
    1c3a:	ef 31       	cpi	r30, 0x1F	; 31
    1c3c:	f9 07       	cpc	r31, r25
    1c3e:	d9 f7       	brne	.-10     	; 0x1c36 <Initialize+0x30>
    1c40:	83 e1       	ldi	r24, 0x13	; 19
    1c42:	97 e0       	ldi	r25, 0x07	; 7
    1c44:	90 93 20 09 	sts	0x0920, r25	; 0x800920 <mix_pos+0x1>
    1c48:	80 93 1f 09 	sts	0x091F, r24	; 0x80091f <mix_pos>
    1c4c:	10 92 21 09 	sts	0x0921, r1	; 0x800921 <mix_bank>
    1c50:	81 e0       	ldi	r24, 0x01	; 1
    1c52:	80 93 38 09 	sts	0x0938, r24	; 0x800938 <tr4_barrel_lo>
    1c56:	80 93 39 09 	sts	0x0939, r24	; 0x800939 <tr4_barrel_hi>
    1c5a:	80 93 37 09 	sts	0x0937, r24	; 0x800937 <tr4_params>
    1c5e:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <mixer>
    1c62:	10 92 2a 09 	sts	0x092A, r1	; 0x80092a <tr2_vol>
    1c66:	10 92 30 09 	sts	0x0930, r1	; 0x800930 <tr3_vol>
    1c6a:	10 92 36 09 	sts	0x0936, r1	; 0x800936 <tr4_vol>
    1c6e:	10 92 fe 06 	sts	0x06FE, r1	; 0x8006fe <sync_phase>
    1c72:	10 92 00 07 	sts	0x0700, r1	; 0x800700 <sync_flags>
    1c76:	92 e1       	ldi	r25, 0x12	; 18
    1c78:	90 93 ff 06 	sts	0x06FF, r25	; 0x8006ff <sync_pulse>
    1c7c:	98 ed       	ldi	r25, 0xD8	; 216
    1c7e:	90 93 06 07 	sts	0x0706, r25	; 0x800706 <render_lines_count>
    1c82:	94 e1       	ldi	r25, 0x14	; 20
    1c84:	90 93 05 07 	sts	0x0705, r25	; 0x800705 <first_render_line>
    1c88:	10 92 0a 07 	sts	0x070A, r1	; 0x80070a <joypad1_status_hi+0x1>
    1c8c:	10 92 09 07 	sts	0x0709, r1	; 0x800709 <joypad1_status_hi>
    1c90:	10 92 0e 07 	sts	0x070E, r1	; 0x80070e <joypad2_status_hi+0x1>
    1c94:	10 92 0d 07 	sts	0x070D, r1	; 0x80070d <joypad2_status_hi>
    1c98:	80 93 23 09 	sts	0x0923, r24	; 0x800923 <sound_enabled>
    1c9c:	0e 94 81 1a 	call	0x3502	; 0x3502 <InitializeVideoMode>
    1ca0:	78 94       	sei
    1ca2:	0e 94 80 1a 	call	0x3500	; 0x3500 <DisplayLogo>
    1ca6:	0e 94 2b 1b 	call	0x3656	; 0x3656 <main>
    1caa:	0c 94 c4 22 	jmp	0x4588	; 0x4588 <_exit>

00001cae <__bad_interrupt>:
    1cae:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00001cb2 <sub_video_mode1>:
	brne .-4 ;~1 us
	nop
	sbiw r24,1
	brne WaitUs

	ret
    1cb2:	30 e0       	ldi	r19, 0x00	; 0
    1cb4:	3a 95       	dec	r19
    1cb6:	f1 f7       	brne	.-4      	; 0x1cb4 <sub_video_mode1+0x2>
    1cb8:	31 ec       	ldi	r19, 0xC1	; 193
    1cba:	3a 95       	dec	r19
    1cbc:	f1 f7       	brne	.-4      	; 0x1cba <sub_video_mode1+0x8>
    1cbe:	c6 e2       	ldi	r28, 0x26	; 38
    1cc0:	d1 e0       	ldi	r29, 0x01	; 1
    1cc2:	08 ed       	ldi	r16, 0xD8	; 216
    1cc4:	a0 2e       	mov	r10, r16
    1cc6:	66 27       	eor	r22, r22
    1cc8:	76 e0       	ldi	r23, 0x06	; 6

00001cca <next_tile_line>:
    1cca:	2d d1       	rcall	.+602    	; 0x1f26 <hsync_pulse>
    1ccc:	3b e2       	ldi	r19, 0x2B	; 43
    1cce:	3a 95       	dec	r19
    1cd0:	f1 f7       	brne	.-4      	; 0x1cce <next_tile_line+0x4>
    1cd2:	0e 94 91 0e 	call	0x1d22	; 0x1d22 <render_tile_line>
    1cd6:	31 e1       	ldi	r19, 0x11	; 17
    1cd8:	3a 95       	dec	r19
    1cda:	f1 f7       	brne	.-4      	; 0x1cd8 <next_tile_line+0xe>
    1cdc:	aa 94       	dec	r10
    1cde:	89 f0       	breq	.+34     	; 0x1d02 <frame_end>
    1ce0:	c8 95       	lpm
    1ce2:	63 95       	inc	r22
    1ce4:	6c 30       	cpi	r22, 0x0C	; 12
    1ce6:	29 f0       	breq	.+10     	; 0x1cf2 <next_tile_row>
    1ce8:	33 e0       	ldi	r19, 0x03	; 3
    1cea:	3a 95       	dec	r19
    1cec:	f1 f7       	brne	.-4      	; 0x1cea <next_tile_line+0x20>
    1cee:	00 00       	nop
    1cf0:	ec cf       	rjmp	.-40     	; 0x1cca <next_tile_line>

00001cf2 <next_tile_row>:
    1cf2:	66 27       	eor	r22, r22
    1cf4:	00 24       	eor	r0, r0
    1cf6:	30 e5       	ldi	r19, 0x50	; 80
    1cf8:	c3 0f       	add	r28, r19
    1cfa:	d0 1d       	adc	r29, r0
    1cfc:	c8 95       	lpm
    1cfe:	00 00       	nop
    1d00:	e4 cf       	rjmp	.-56     	; 0x1cca <next_tile_line>

00001d02 <frame_end>:
    1d02:	35 e0       	ldi	r19, 0x05	; 5
    1d04:	3a 95       	dec	r19
    1d06:	f1 f7       	brne	.-4      	; 0x1d04 <frame_end+0x2>
    1d08:	00 c0       	rjmp	.+0      	; 0x1d0a <frame_end+0x8>
    1d0a:	0d d1       	rcall	.+538    	; 0x1f26 <hsync_pulse>
    1d0c:	e0 91 00 07 	lds	r30, 0x0700	; 0x800700 <sync_flags>
    1d10:	42 e0       	ldi	r20, 0x02	; 2
    1d12:	e4 27       	eor	r30, r20
    1d14:	e1 60       	ori	r30, 0x01	; 1
    1d16:	e0 93 00 07 	sts	0x0700, r30	; 0x800700 <sync_flags>
    1d1a:	e2 e0       	ldi	r30, 0x02	; 2
    1d1c:	e0 93 36 00 	sts	0x0036, r30	; 0x800036 <__TEXT_REGION_LENGTH__+0x7e0036>
    1d20:	08 95       	ret

00001d22 <render_tile_line>:
    1d22:	de 01       	movw	r26, r28
    1d24:	4d 91       	ld	r20, X+
    1d26:	5d 91       	ld	r21, X+
    1d28:	67 9f       	mul	r22, r23
    1d2a:	c0 01       	movw	r24, r0
    1d2c:	48 0f       	add	r20, r24
    1d2e:	59 1f       	adc	r21, r25
    1d30:	fa 01       	movw	r30, r20
    1d32:	28 e2       	ldi	r18, 0x28	; 40

00001d34 <mode1_loop>:
    1d34:	05 91       	lpm	r16, Z+
    1d36:	08 b9       	out	0x08, r16	; 8
    1d38:	4d 91       	ld	r20, X+
    1d3a:	05 91       	lpm	r16, Z+
    1d3c:	08 b9       	out	0x08, r16	; 8
    1d3e:	5d 91       	ld	r21, X+
    1d40:	05 91       	lpm	r16, Z+
    1d42:	08 b9       	out	0x08, r16	; 8
    1d44:	00 c0       	rjmp	.+0      	; 0x1d46 <mode1_loop+0x12>
    1d46:	05 91       	lpm	r16, Z+
    1d48:	08 b9       	out	0x08, r16	; 8
    1d4a:	48 0f       	add	r20, r24
    1d4c:	59 1f       	adc	r21, r25
    1d4e:	05 91       	lpm	r16, Z+
    1d50:	08 b9       	out	0x08, r16	; 8
    1d52:	05 91       	lpm	r16, Z+
    1d54:	fa 01       	movw	r30, r20
    1d56:	2a 95       	dec	r18
    1d58:	08 b9       	out	0x08, r16	; 8
    1d5a:	61 f7       	brne	.-40     	; 0x1d34 <mode1_loop>
    1d5c:	c8 95       	lpm
    1d5e:	00 27       	eor	r16, r16
    1d60:	08 b9       	out	0x08, r16	; 8
    1d62:	08 95       	ret

00001d64 <__vector_13>:
    1d64:	0f 92       	push	r0
    1d66:	1f 92       	push	r1
    1d68:	ef 93       	push	r30
    1d6a:	ff 93       	push	r31
    1d6c:	ff b7       	in	r31, 0x3f	; 63
    1d6e:	e0 91 84 00 	lds	r30, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1d72:	ff 93       	push	r31
    1d74:	e2 fd       	sbrc	r30, 2
    1d76:	04 c0       	rjmp	.+8      	; 0x1d80 <__vector_13+0x1c>
    1d78:	e1 fd       	sbrc	r30, 1
    1d7a:	02 c0       	rjmp	.+4      	; 0x1d80 <__vector_13+0x1c>
    1d7c:	00 00       	nop
    1d7e:	00 c0       	rjmp	.+0      	; 0x1d80 <__vector_13+0x1c>
    1d80:	e0 ff       	sbrs	r30, 0
    1d82:	00 c0       	rjmp	.+0      	; 0x1d84 <__vector_13+0x20>
    1d84:	e0 91 ff 06 	lds	r30, 0x06FF	; 0x8006ff <sync_pulse>
    1d88:	ea 95       	dec	r30
    1d8a:	e0 93 ff 06 	sts	0x06FF, r30	; 0x8006ff <sync_pulse>
    1d8e:	f0 91 fe 06 	lds	r31, 0x06FE	; 0x8006fe <sync_phase>
    1d92:	f0 fd       	sbrc	r31, 0
    1d94:	51 c0       	rjmp	.+162    	; 0x1e38 <sync_hsync>
    1d96:	ec 30       	cpi	r30, 0x0C	; 12
    1d98:	98 f0       	brcs	.+38     	; 0x1dc0 <sync_eq>
    1d9a:	f3 e0       	ldi	r31, 0x03	; 3
    1d9c:	f0 93 89 00 	sts	0x0089, r31	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
    1da0:	fd e8       	ldi	r31, 0x8D	; 141
    1da2:	f0 93 88 00 	sts	0x0088, r31	; 0x800088 <__DATA_REGION_ORIGIN__+0x28>
    1da6:	e0 fb       	bst	r30, 0
    1da8:	28 98       	cbi	0x05, 0	; 5
    1daa:	26 f4       	brtc	.+8      	; 0x1db4 <sync_pre_eq_no_sound_update>
    1dac:	e1 e0       	ldi	r30, 0x01	; 1
    1dae:	0e 94 74 10 	call	0x20e8	; 0x20e8 <update_sound>
    1db2:	b2 c0       	rjmp	.+356    	; 0x1f18 <sync_end>

00001db4 <sync_pre_eq_no_sound_update>:
    1db4:	e5 e1       	ldi	r30, 0x15	; 21
    1db6:	ea 95       	dec	r30
    1db8:	f1 f7       	brne	.-4      	; 0x1db6 <sync_pre_eq_no_sound_update+0x2>
    1dba:	00 00       	nop
    1dbc:	28 9a       	sbi	0x05, 0	; 5
    1dbe:	ac c0       	rjmp	.+344    	; 0x1f18 <sync_end>

00001dc0 <sync_eq>:
    1dc0:	e6 30       	cpi	r30, 0x06	; 6
    1dc2:	08 f1       	brcs	.+66     	; 0x1e06 <sync_post_eq>
    1dc4:	00 c0       	rjmp	.+0      	; 0x1dc6 <sync_eq+0x6>
    1dc6:	00 c0       	rjmp	.+0      	; 0x1dc8 <sync_eq+0x8>
    1dc8:	28 98       	cbi	0x05, 0	; 5
    1dca:	e0 fb       	bst	r30, 0
    1dcc:	e4 e0       	ldi	r30, 0x04	; 4
    1dce:	16 f4       	brtc	.+4      	; 0x1dd4 <sync_eq_skip>
    1dd0:	0e 94 74 10 	call	0x20e8	; 0x20e8 <update_sound>

00001dd4 <sync_eq_skip>:
    1dd4:	e4 e0       	ldi	r30, 0x04	; 4
    1dd6:	e0 93 36 00 	sts	0x0036, r30	; 0x800036 <__TEXT_REGION_LENGTH__+0x7e0036>
    1dda:	e6 e0       	ldi	r30, 0x06	; 6
    1ddc:	e0 93 6f 00 	sts	0x006F, r30	; 0x80006f <__DATA_REGION_ORIGIN__+0xf>
    1de0:	9b c0       	rjmp	.+310    	; 0x1f18 <sync_end>

00001de2 <__vector_14>:
    1de2:	ef 93       	push	r30
    1de4:	e0 91 84 00 	lds	r30, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1de8:	e2 fd       	sbrc	r30, 2
    1dea:	04 c0       	rjmp	.+8      	; 0x1df4 <__vector_14+0x12>
    1dec:	e1 fd       	sbrc	r30, 1
    1dee:	02 c0       	rjmp	.+4      	; 0x1df4 <__vector_14+0x12>
    1df0:	00 00       	nop
    1df2:	00 c0       	rjmp	.+0      	; 0x1df4 <__vector_14+0x12>
    1df4:	e0 ff       	sbrs	r30, 0
    1df6:	00 c0       	rjmp	.+0      	; 0x1df8 <__vector_14+0x16>
    1df8:	e2 e0       	ldi	r30, 0x02	; 2
    1dfa:	00 00       	nop
    1dfc:	28 9a       	sbi	0x05, 0	; 5
    1dfe:	e0 93 6f 00 	sts	0x006F, r30	; 0x80006f <__DATA_REGION_ORIGIN__+0xf>
    1e02:	ef 91       	pop	r30
    1e04:	18 95       	reti

00001e06 <sync_post_eq>:
    1e06:	00 c0       	rjmp	.+0      	; 0x1e08 <sync_post_eq+0x2>
    1e08:	e0 fb       	bst	r30, 0
    1e0a:	28 98       	cbi	0x05, 0	; 5
    1e0c:	26 f4       	brtc	.+8      	; 0x1e16 <sync_post_eq_no_sound_update>
    1e0e:	e1 e0       	ldi	r30, 0x01	; 1
    1e10:	0e 94 74 10 	call	0x20e8	; 0x20e8 <update_sound>
    1e14:	05 c0       	rjmp	.+10     	; 0x1e20 <sync_pre_eq_cont>

00001e16 <sync_post_eq_no_sound_update>:
    1e16:	e5 e1       	ldi	r30, 0x15	; 21
    1e18:	ea 95       	dec	r30
    1e1a:	f1 f7       	brne	.-4      	; 0x1e18 <sync_post_eq_no_sound_update+0x2>
    1e1c:	00 00       	nop
    1e1e:	28 9a       	sbi	0x05, 0	; 5

00001e20 <sync_pre_eq_cont>:
    1e20:	e0 91 ff 06 	lds	r30, 0x06FF	; 0x8006ff <sync_pulse>
    1e24:	e0 30       	cpi	r30, 0x00	; 0
    1e26:	09 f0       	breq	.+2      	; 0x1e2a <sync_pre_eq_cont+0xa>
    1e28:	77 c0       	rjmp	.+238    	; 0x1f18 <sync_end>
    1e2a:	ed ef       	ldi	r30, 0xFD	; 253
    1e2c:	e0 93 ff 06 	sts	0x06FF, r30	; 0x8006ff <sync_pulse>
    1e30:	e1 e0       	ldi	r30, 0x01	; 1
    1e32:	e0 93 fe 06 	sts	0x06FE, r30	; 0x8006fe <sync_phase>
    1e36:	70 c0       	rjmp	.+224    	; 0x1f18 <sync_end>

00001e38 <sync_hsync>:
    1e38:	e7 e0       	ldi	r30, 0x07	; 7
    1e3a:	e0 93 89 00 	sts	0x0089, r30	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
    1e3e:	eb e1       	ldi	r30, 0x1B	; 27
    1e40:	e0 93 88 00 	sts	0x0088, r30	; 0x800088 <__DATA_REGION_ORIGIN__+0x28>
    1e44:	00 c0       	rjmp	.+0      	; 0x1e46 <sync_hsync+0xe>
    1e46:	28 98       	cbi	0x05, 0	; 5
    1e48:	e2 e0       	ldi	r30, 0x02	; 2
    1e4a:	00 c0       	rjmp	.+0      	; 0x1e4c <sync_hsync+0x14>
    1e4c:	0e 94 74 10 	call	0x20e8	; 0x20e8 <update_sound>
    1e50:	fd ef       	ldi	r31, 0xFD	; 253
    1e52:	00 90 05 07 	lds	r0, 0x0705	; 0x800705 <first_render_line>
    1e56:	f0 19       	sub	r31, r0
    1e58:	e0 91 ff 06 	lds	r30, 0x06FF	; 0x8006ff <sync_pulse>
    1e5c:	ef 17       	cp	r30, r31
    1e5e:	d8 f4       	brcc	.+54     	; 0x1e96 <no_render>
    1e60:	fd ef       	ldi	r31, 0xFD	; 253
    1e62:	00 90 05 07 	lds	r0, 0x0705	; 0x800705 <first_render_line>
    1e66:	f0 19       	sub	r31, r0
    1e68:	00 90 06 07 	lds	r0, 0x0706	; 0x800706 <render_lines_count>
    1e6c:	f0 19       	sub	r31, r0
    1e6e:	ef 17       	cp	r30, r31
    1e70:	90 f0       	brcs	.+36     	; 0x1e96 <no_render>
    1e72:	ed e1       	ldi	r30, 0x1D	; 29
    1e74:	ff 27       	eor	r31, r31

00001e76 <push_loop>:
    1e76:	00 80       	ld	r0, Z
    1e78:	0f 92       	push	r0
    1e7a:	ea 95       	dec	r30
    1e7c:	e1 f7       	brne	.-8      	; 0x1e76 <push_loop>
    1e7e:	0f e1       	ldi	r16, 0x1F	; 31
    1e80:	0a 95       	dec	r16
    1e82:	f1 f7       	brne	.-4      	; 0x1e80 <push_loop+0xa>
    1e84:	00 c0       	rjmp	.+0      	; 0x1e86 <push_loop+0x10>
    1e86:	0e 94 59 0e 	call	0x1cb2	; 0x1cb2 <sub_video_mode1>
    1e8a:	e1 e0       	ldi	r30, 0x01	; 1
    1e8c:	ff 27       	eor	r31, r31

00001e8e <pop_loop>:
    1e8e:	0f 90       	pop	r0
    1e90:	01 92       	st	Z+, r0
    1e92:	ee 31       	cpi	r30, 0x1E	; 30
    1e94:	e0 f3       	brcs	.-8      	; 0x1e8e <pop_loop>

00001e96 <no_render>:
    1e96:	e0 91 ff 06 	lds	r30, 0x06FF	; 0x8006ff <sync_pulse>
    1e9a:	e0 30       	cpi	r30, 0x00	; 0
    1e9c:	09 f0       	breq	.+2      	; 0x1ea0 <no_render+0xa>
    1e9e:	3c c0       	rjmp	.+120    	; 0x1f18 <sync_end>
    1ea0:	2f 93       	push	r18
    1ea2:	3f 93       	push	r19
    1ea4:	4f 93       	push	r20
    1ea6:	5f 93       	push	r21
    1ea8:	6f 93       	push	r22
    1eaa:	7f 93       	push	r23
    1eac:	8f 93       	push	r24
    1eae:	9f 93       	push	r25
    1eb0:	af 93       	push	r26
    1eb2:	bf 93       	push	r27
    1eb4:	78 94       	sei
    1eb6:	11 24       	eor	r1, r1
    1eb8:	ee 27       	eor	r30, r30
    1eba:	e0 93 fe 06 	sts	0x06FE, r30	; 0x8006fe <sync_phase>
    1ebe:	e2 e1       	ldi	r30, 0x12	; 18
    1ec0:	e0 93 ff 06 	sts	0x06FF, r30	; 0x8006ff <sync_pulse>
    1ec4:	80 91 0f 07 	lds	r24, 0x070F	; 0x80070f <vsync_counter>
    1ec8:	90 91 10 07 	lds	r25, 0x0710	; 0x800710 <vsync_counter+0x1>
    1ecc:	01 96       	adiw	r24, 0x01	; 1
    1ece:	80 93 0f 07 	sts	0x070F, r24	; 0x80070f <vsync_counter>
    1ed2:	90 93 10 07 	sts	0x0710, r25	; 0x800710 <vsync_counter+0x1>
    1ed6:	e0 91 01 07 	lds	r30, 0x0701	; 0x800701 <pre_vsync_user_callback>
    1eda:	f0 91 02 07 	lds	r31, 0x0702	; 0x800702 <pre_vsync_user_callback+0x1>
    1ede:	e1 15       	cp	r30, r1
    1ee0:	f1 05       	cpc	r31, r1
    1ee2:	09 f0       	breq	.+2      	; 0x1ee6 <no_render+0x50>
    1ee4:	09 95       	icall
    1ee6:	0e 94 35 11 	call	0x226a	; 0x226a <ReadControllers>
    1eea:	0e 94 82 1a 	call	0x3504	; 0x3504 <VideoModeVsync>
    1eee:	0e 94 9e 0f 	call	0x1f3c	; 0x1f3c <process_music>
    1ef2:	11 24       	eor	r1, r1
    1ef4:	e0 91 03 07 	lds	r30, 0x0703	; 0x800703 <post_vsync_user_callback>
    1ef8:	f0 91 04 07 	lds	r31, 0x0704	; 0x800704 <post_vsync_user_callback+0x1>
    1efc:	e1 15       	cp	r30, r1
    1efe:	f1 05       	cpc	r31, r1
    1f00:	09 f0       	breq	.+2      	; 0x1f04 <no_render+0x6e>
    1f02:	09 95       	icall
    1f04:	bf 91       	pop	r27
    1f06:	af 91       	pop	r26
    1f08:	9f 91       	pop	r25
    1f0a:	8f 91       	pop	r24
    1f0c:	7f 91       	pop	r23
    1f0e:	6f 91       	pop	r22
    1f10:	5f 91       	pop	r21
    1f12:	4f 91       	pop	r20
    1f14:	3f 91       	pop	r19
    1f16:	2f 91       	pop	r18

00001f18 <sync_end>:
    1f18:	ef 91       	pop	r30
    1f1a:	ef bf       	out	0x3f, r30	; 63
    1f1c:	ff 91       	pop	r31
    1f1e:	ef 91       	pop	r30
    1f20:	1f 90       	pop	r1
    1f22:	0f 90       	pop	r0
    1f24:	18 95       	reti

00001f26 <hsync_pulse>:
    1f26:	28 98       	cbi	0x05, 0	; 5
    1f28:	e2 e0       	ldi	r30, 0x02	; 2
    1f2a:	00 c0       	rjmp	.+0      	; 0x1f2c <hsync_pulse+0x6>
    1f2c:	0e 94 74 10 	call	0x20e8	; 0x20e8 <update_sound>
    1f30:	e0 91 ff 06 	lds	r30, 0x06FF	; 0x8006ff <sync_pulse>
    1f34:	ea 95       	dec	r30
    1f36:	e0 93 ff 06 	sts	0x06FF, r30	; 0x8006ff <sync_pulse>
    1f3a:	08 95       	ret

00001f3c <process_music>:
	andi r25,1
	lsl r24
	or r24,r25

	sts tr4_params,r24	
	ret
    1f3c:	e0 91 23 09 	lds	r30, 0x0923	; 0x800923 <sound_enabled>
    1f40:	e0 fd       	sbrc	r30, 0
    1f42:	0e 94 2a 12 	call	0x2454	; 0x2454 <ProcessMusic>
    1f46:	00 90 21 09 	lds	r0, 0x0921	; 0x800921 <mix_bank>
    1f4a:	00 20       	and	r0, r0
    1f4c:	19 f4       	brne	.+6      	; 0x1f54 <set_hi_bank>
    1f4e:	a3 e1       	ldi	r26, 0x13	; 19
    1f50:	b7 e0       	ldi	r27, 0x07	; 7
    1f52:	02 c0       	rjmp	.+4      	; 0x1f58 <end_set_bank>

00001f54 <set_hi_bank>:
    1f54:	a9 e1       	ldi	r26, 0x19	; 25
    1f56:	b8 e0       	ldi	r27, 0x08	; 8

00001f58 <end_set_bank>:
    1f58:	21 e0       	ldi	r18, 0x01	; 1
    1f5a:	02 26       	eor	r0, r18
    1f5c:	00 92 21 09 	sts	0x0921, r0	; 0x800921 <mix_bank>
    1f60:	22 e0       	ldi	r18, 0x02	; 2
    1f62:	20 93 22 09 	sts	0x0922, r18	; 0x800922 <mix_block>
    1f66:	e0 91 23 09 	lds	r30, 0x0923	; 0x800923 <sound_enabled>
    1f6a:	e0 ff       	sbrs	r30, 0
    1f6c:	08 95       	ret
    1f6e:	2f 92       	push	r2
    1f70:	3f 92       	push	r3
    1f72:	4f 92       	push	r4
    1f74:	5f 92       	push	r5
    1f76:	6f 92       	push	r6
    1f78:	7f 92       	push	r7
    1f7a:	8f 92       	push	r8
    1f7c:	9f 92       	push	r9
    1f7e:	af 92       	push	r10
    1f80:	bf 92       	push	r11
    1f82:	cf 92       	push	r12
    1f84:	df 92       	push	r13
    1f86:	ef 92       	push	r14
    1f88:	ff 92       	push	r15
    1f8a:	0f 93       	push	r16
    1f8c:	1f 93       	push	r17
    1f8e:	cf 93       	push	r28
    1f90:	df 93       	push	r29
    1f92:	50 91 36 09 	lds	r21, 0x0936	; 0x800936 <tr4_vol>
    1f96:	60 91 38 09 	lds	r22, 0x0938	; 0x800938 <tr4_barrel_lo>
    1f9a:	70 91 39 09 	lds	r23, 0x0939	; 0x800939 <tr4_barrel_hi>
    1f9e:	80 91 3a 09 	lds	r24, 0x093A	; 0x80093a <tr4_divider>
    1fa2:	20 90 25 09 	lds	r2, 0x0925	; 0x800925 <tr1_step_lo>
    1fa6:	30 90 26 09 	lds	r3, 0x0926	; 0x800926 <tr1_step_hi>
    1faa:	40 90 28 09 	lds	r4, 0x0928	; 0x800928 <tr1_pos_lo>
    1fae:	50 90 29 09 	lds	r5, 0x0929	; 0x800929 <tr1_pos_hi>
    1fb2:	60 90 27 09 	lds	r6, 0x0927	; 0x800927 <tr1_pos_frac>
    1fb6:	10 91 24 09 	lds	r17, 0x0924	; 0x800924 <mixer>
    1fba:	70 90 2b 09 	lds	r7, 0x092B	; 0x80092b <tr2_step_lo>
    1fbe:	80 90 2c 09 	lds	r8, 0x092C	; 0x80092c <tr2_step_hi>
    1fc2:	90 90 2d 09 	lds	r9, 0x092D	; 0x80092d <tr2_pos_frac>
    1fc6:	a0 90 2e 09 	lds	r10, 0x092E	; 0x80092e <tr2_pos_lo>
    1fca:	b0 90 2f 09 	lds	r11, 0x092F	; 0x80092f <tr2_pos_hi>
    1fce:	20 91 2a 09 	lds	r18, 0x092A	; 0x80092a <tr2_vol>
    1fd2:	c0 90 31 09 	lds	r12, 0x0931	; 0x800931 <tr3_step_lo>
    1fd6:	d0 90 32 09 	lds	r13, 0x0932	; 0x800932 <tr3_step_hi>
    1fda:	e0 90 34 09 	lds	r14, 0x0934	; 0x800934 <tr3_pos_lo>
    1fde:	f0 90 35 09 	lds	r15, 0x0935	; 0x800935 <tr3_pos_hi>
    1fe2:	00 91 33 09 	lds	r16, 0x0933	; 0x800933 <tr3_pos_frac>
    1fe6:	30 91 30 09 	lds	r19, 0x0930	; 0x800930 <tr3_vol>
    1fea:	9f ef       	ldi	r25, 0xFF	; 255

00001fec <mix_loop>:
    1fec:	62 0c       	add	r6, r2
    1fee:	43 1c       	adc	r4, r3
    1ff0:	f2 01       	movw	r30, r4
    1ff2:	44 91       	lpm	r20, Z
    1ff4:	41 03       	mulsu	r20, r17
    1ff6:	00 08       	sbc	r0, r0
    1ff8:	c1 2d       	mov	r28, r1
    1ffa:	d0 2d       	mov	r29, r0
    1ffc:	97 0c       	add	r9, r7
    1ffe:	a8 1c       	adc	r10, r8
    2000:	f5 01       	movw	r30, r10
    2002:	44 91       	lpm	r20, Z
    2004:	42 03       	mulsu	r20, r18
    2006:	00 08       	sbc	r0, r0
    2008:	c1 0d       	add	r28, r1
    200a:	d0 1d       	adc	r29, r0
    200c:	0c 0d       	add	r16, r12
    200e:	ed 1c       	adc	r14, r13
    2010:	f7 01       	movw	r30, r14
    2012:	44 91       	lpm	r20, Z
    2014:	43 03       	mulsu	r20, r19
    2016:	00 08       	sbc	r0, r0
    2018:	c1 0d       	add	r28, r1
    201a:	d0 1d       	adc	r29, r0
    201c:	8a 95       	dec	r24
    201e:	6a f4       	brpl	.+26     	; 0x203a <no_shift>
    2020:	40 91 37 09 	lds	r20, 0x0937	; 0x800937 <tr4_params>
    2024:	84 2f       	mov	r24, r20
    2026:	86 95       	lsr	r24
    2028:	06 2e       	mov	r0, r22
    202a:	06 94       	lsr	r0
    202c:	06 26       	eor	r0, r22
    202e:	00 fa       	bst	r0, 0
    2030:	76 95       	lsr	r23
    2032:	67 95       	ror	r22
    2034:	76 f9       	bld	r23, 6
    2036:	40 ff       	sbrs	r20, 0
    2038:	66 f9       	bld	r22, 6

0000203a <no_shift>:
    203a:	40 e8       	ldi	r20, 0x80	; 128
    203c:	60 fd       	sbrc	r22, 0
    203e:	4f e7       	ldi	r20, 0x7F	; 127
    2040:	45 03       	mulsu	r20, r21
    2042:	00 08       	sbc	r0, r0
    2044:	c1 0d       	add	r28, r1
    2046:	d0 1d       	adc	r29, r0
    2048:	00 24       	eor	r0, r0
    204a:	c0 38       	cpi	r28, 0x80	; 128
    204c:	d0 05       	cpc	r29, r0
    204e:	0c f0       	brlt	.+2      	; 0x2052 <no_shift+0x18>
    2050:	cf e7       	ldi	r28, 0x7F	; 127
    2052:	0a 94       	dec	r0
    2054:	c0 38       	cpi	r28, 0x80	; 128
    2056:	d0 05       	cpc	r29, r0
    2058:	0c f4       	brge	.+2      	; 0x205c <no_shift+0x22>
    205a:	c0 e8       	ldi	r28, 0x80	; 128
    205c:	c0 58       	subi	r28, 0x80	; 128
    205e:	cd 93       	st	X+, r28
    2060:	9a 95       	dec	r25
    2062:	09 f0       	breq	.+2      	; 0x2066 <no_shift+0x2c>
    2064:	c3 cf       	rjmp	.-122    	; 0x1fec <mix_loop>
    2066:	40 91 22 09 	lds	r20, 0x0922	; 0x800922 <mix_block>
    206a:	4a 95       	dec	r20
    206c:	40 93 22 09 	sts	0x0922, r20	; 0x800922 <mix_block>
    2070:	97 e0       	ldi	r25, 0x07	; 7
    2072:	09 f0       	breq	.+2      	; 0x2076 <no_shift+0x3c>
    2074:	bb cf       	rjmp	.-138    	; 0x1fec <mix_loop>
    2076:	60 92 27 09 	sts	0x0927, r6	; 0x800927 <tr1_pos_frac>
    207a:	40 92 28 09 	sts	0x0928, r4	; 0x800928 <tr1_pos_lo>
    207e:	90 92 2d 09 	sts	0x092D, r9	; 0x80092d <tr2_pos_frac>
    2082:	a0 92 2e 09 	sts	0x092E, r10	; 0x80092e <tr2_pos_lo>
    2086:	00 93 33 09 	sts	0x0933, r16	; 0x800933 <tr3_pos_frac>
    208a:	e0 92 34 09 	sts	0x0934, r14	; 0x800934 <tr3_pos_lo>
    208e:	60 93 38 09 	sts	0x0938, r22	; 0x800938 <tr4_barrel_lo>
    2092:	70 93 39 09 	sts	0x0939, r23	; 0x800939 <tr4_barrel_hi>
    2096:	80 93 3a 09 	sts	0x093A, r24	; 0x80093a <tr4_divider>
    209a:	df 91       	pop	r29
    209c:	cf 91       	pop	r28
    209e:	1f 91       	pop	r17
    20a0:	0f 91       	pop	r16
    20a2:	ff 90       	pop	r15
    20a4:	ef 90       	pop	r14
    20a6:	df 90       	pop	r13
    20a8:	cf 90       	pop	r12
    20aa:	bf 90       	pop	r11
    20ac:	af 90       	pop	r10
    20ae:	9f 90       	pop	r9
    20b0:	8f 90       	pop	r8
    20b2:	7f 90       	pop	r7
    20b4:	6f 90       	pop	r6
    20b6:	5f 90       	pop	r5
    20b8:	4f 90       	pop	r4
    20ba:	3f 90       	pop	r3
    20bc:	2f 90       	pop	r2
    20be:	08 95       	ret

000020c0 <update_sound_buffer_fast>:
    20c0:	e0 91 1f 09 	lds	r30, 0x091F	; 0x80091f <mix_pos>
    20c4:	f0 91 20 09 	lds	r31, 0x0920	; 0x800920 <mix_pos+0x1>
    20c8:	01 91       	ld	r16, Z+
    20ca:	00 00       	nop
    20cc:	00 93 b3 00 	sts	0x00B3, r16	; 0x8000b3 <__DATA_REGION_ORIGIN__+0x53>
    20d0:	09 e0       	ldi	r16, 0x09	; 9
    20d2:	ef 31       	cpi	r30, 0x1F	; 31
    20d4:	f0 07       	cpc	r31, r16
    20d6:	03 e1       	ldi	r16, 0x13	; 19
    20d8:	17 e0       	ldi	r17, 0x07	; 7
    20da:	08 f0       	brcs	.+2      	; 0x20de <update_sound_buffer_fast+0x1e>
    20dc:	f8 01       	movw	r30, r16
    20de:	e0 93 1f 09 	sts	0x091F, r30	; 0x80091f <mix_pos>
    20e2:	f0 93 20 09 	sts	0x0920, r31	; 0x800920 <mix_pos+0x1>
    20e6:	08 95       	ret

000020e8 <update_sound>:
    20e8:	0f 93       	push	r16
    20ea:	1f 93       	push	r17
    20ec:	2f 93       	push	r18
    20ee:	ef 93       	push	r30
    20f0:	e0 91 1f 09 	lds	r30, 0x091F	; 0x80091f <mix_pos>
    20f4:	f0 91 20 09 	lds	r31, 0x0920	; 0x800920 <mix_pos+0x1>
    20f8:	01 91       	ld	r16, Z+
    20fa:	00 93 b3 00 	sts	0x00B3, r16	; 0x8000b3 <__DATA_REGION_ORIGIN__+0x53>
    20fe:	09 e0       	ldi	r16, 0x09	; 9
    2100:	ef 31       	cpi	r30, 0x1F	; 31
    2102:	f0 07       	cpc	r31, r16
    2104:	03 e1       	ldi	r16, 0x13	; 19
    2106:	17 e0       	ldi	r17, 0x07	; 7
    2108:	08 f0       	brcs	.+2      	; 0x210c <update_sound+0x24>
    210a:	f8 01       	movw	r30, r16
    210c:	e0 93 1f 09 	sts	0x091F, r30	; 0x80091f <mix_pos>
    2110:	f0 93 20 09 	sts	0x0920, r31	; 0x800920 <mix_pos+0x1>
    2114:	e8 e0       	ldi	r30, 0x08	; 8
    2116:	ea 95       	dec	r30
    2118:	f1 f7       	brne	.-4      	; 0x2116 <update_sound+0x2e>
    211a:	ef 91       	pop	r30
    211c:	2f 91       	pop	r18
    211e:	1f 91       	pop	r17
    2120:	0f 91       	pop	r16
    2122:	e0 fd       	sbrc	r30, 0
    2124:	28 9a       	sbi	0x05, 0	; 5
    2126:	e0 ff       	sbrs	r30, 0
    2128:	01 c0       	rjmp	.+2      	; 0x212c <update_sound+0x44>
    212a:	08 95       	ret
    212c:	f4 e1       	ldi	r31, 0x14	; 20
    212e:	fa 95       	dec	r31
    2130:	f1 f7       	brne	.-4      	; 0x212e <update_sound+0x46>
    2132:	00 c0       	rjmp	.+0      	; 0x2134 <update_sound+0x4c>
    2134:	e1 fd       	sbrc	r30, 1
    2136:	28 9a       	sbi	0x05, 0	; 5
    2138:	e1 ff       	sbrs	r30, 1
    213a:	00 c0       	rjmp	.+0      	; 0x213c <update_sound+0x54>
    213c:	08 95       	ret

0000213e <ClearVram>:
    213e:	ea ee       	ldi	r30, 0xEA	; 234
    2140:	f2 e0       	ldi	r31, 0x02	; 2
    2142:	a6 e2       	ldi	r26, 0x26	; 38
    2144:	b1 e0       	ldi	r27, 0x01	; 1
    2146:	60 91 fa 06 	lds	r22, 0x06FA	; 0x8006fa <font_table_lo>
    214a:	70 91 fb 06 	lds	r23, 0x06FB	; 0x8006fb <font_table_hi>

0000214e <fill_vram_loop>:
    214e:	6d 93       	st	X+, r22
    2150:	7d 93       	st	X+, r23
    2152:	31 97       	sbiw	r30, 0x01	; 1
    2154:	e1 f7       	brne	.-8      	; 0x214e <fill_vram_loop>
    2156:	11 24       	eor	r1, r1
    2158:	08 95       	ret

0000215a <SetFont>:
    215a:	99 27       	eor	r25, r25
    215c:	55 27       	eor	r21, r21
    215e:	28 e2       	ldi	r18, 0x28	; 40
    2160:	22 0f       	add	r18, r18
    2162:	62 9f       	mul	r22, r18
    2164:	88 0f       	add	r24, r24
    2166:	08 0e       	add	r0, r24
    2168:	19 1e       	adc	r1, r25
    216a:	a6 e2       	ldi	r26, 0x26	; 38
    216c:	b1 e0       	ldi	r27, 0x01	; 1
    216e:	a0 0d       	add	r26, r0
    2170:	b1 1d       	adc	r27, r1
    2172:	60 91 fa 06 	lds	r22, 0x06FA	; 0x8006fa <font_table_lo>
    2176:	70 91 fb 06 	lds	r23, 0x06FB	; 0x8006fb <font_table_hi>
    217a:	28 e4       	ldi	r18, 0x48	; 72
    217c:	42 9f       	mul	r20, r18
    217e:	60 0d       	add	r22, r0
    2180:	71 1d       	adc	r23, r1
    2182:	6d 93       	st	X+, r22
    2184:	7c 93       	st	X, r23
    2186:	11 24       	eor	r1, r1
    2188:	08 95       	ret

0000218a <SetFontTable>:
    218a:	80 93 fa 06 	sts	0x06FA, r24	; 0x8006fa <font_table_lo>
    218e:	90 93 fb 06 	sts	0x06FB, r25	; 0x8006fb <font_table_hi>
    2192:	08 95       	ret

00002194 <GetVsyncFlag>:
    2194:	80 91 00 07 	lds	r24, 0x0700	; 0x800700 <sync_flags>
    2198:	81 70       	andi	r24, 0x01	; 1
    219a:	08 95       	ret

0000219c <ClearVsyncFlag>:
    219c:	20 91 00 07 	lds	r18, 0x0700	; 0x800700 <sync_flags>
    21a0:	2e 7f       	andi	r18, 0xFE	; 254
    21a2:	20 93 00 07 	sts	0x0700, r18	; 0x800700 <sync_flags>
    21a6:	08 95       	ret

000021a8 <ReadJoypad>:
    21a8:	88 23       	and	r24, r24
    21aa:	29 f4       	brne	.+10     	; 0x21b6 <rj_p2>
    21ac:	80 91 07 07 	lds	r24, 0x0707	; 0x800707 <joypad1_status_lo>
    21b0:	90 91 08 07 	lds	r25, 0x0708	; 0x800708 <joypad1_status_lo+0x1>
    21b4:	08 95       	ret

000021b6 <rj_p2>:
    21b6:	80 91 0b 07 	lds	r24, 0x070B	; 0x80070b <joypad2_status_lo>
    21ba:	90 91 0c 07 	lds	r25, 0x070C	; 0x80070c <joypad2_status_lo+0x1>
    21be:	08 95       	ret

000021c0 <SoftReset>:
    21c0:	e0 e6       	ldi	r30, 0x60	; 96
    21c2:	f0 e0       	ldi	r31, 0x00	; 0
    21c4:	80 81       	ld	r24, Z
    21c6:	83 fd       	sbrc	r24, 3
    21c8:	08 95       	ret
    21ca:	88 e1       	ldi	r24, 0x18	; 24
    21cc:	98 e0       	ldi	r25, 0x08	; 8
    21ce:	f8 94       	cli
    21d0:	80 83       	st	Z, r24
    21d2:	90 83       	st	Z, r25
    21d4:	78 94       	sei
    21d6:	ff cf       	rjmp	.-2      	; 0x21d6 <SoftReset+0x16>

000021d8 <WriteEeprom>:
;****************************

.section .text.WriteEeprom
WriteEeprom:
   ; Wait for completion of previous write
   sbic _SFR_IO_ADDR(EECR),EEPE
    21d8:	f9 99       	sbic	0x1f, 1	; 31
   rjmp WriteEeprom
    21da:	fe cf       	rjmp	.-4      	; 0x21d8 <WriteEeprom>
   ; Set up address (r25:r24) in address register
   out _SFR_IO_ADDR(EEARH), r25
    21dc:	92 bd       	out	0x22, r25	; 34
   out _SFR_IO_ADDR(EEARL), r24
    21de:	81 bd       	out	0x21, r24	; 33
   ; Write data (r22) to Data Register
   out _SFR_IO_ADDR(EEDR),r22
    21e0:	60 bd       	out	0x20, r22	; 32
   cli
    21e2:	f8 94       	cli
   ; Write logical one to EEMPE
   sbi _SFR_IO_ADDR(EECR),EEMPE
    21e4:	fa 9a       	sbi	0x1f, 2	; 31
   ; Start eeprom write by setting EEPE
   sbi _SFR_IO_ADDR(EECR),EEPE
    21e6:	f9 9a       	sbi	0x1f, 1	; 31
   sei
    21e8:	78 94       	sei
   ret
    21ea:	08 95       	ret

000021ec <ReadEeprom>:
; r24 - value read
;****************************
.section .text.ReadEeprom
ReadEeprom:
   ; Wait for completion of previous write
   sbic _SFR_IO_ADDR(EECR),EEPE
    21ec:	f9 99       	sbic	0x1f, 1	; 31
   rjmp ReadEeprom
    21ee:	fe cf       	rjmp	.-4      	; 0x21ec <ReadEeprom>
   ; Set up address (r25:r24) in address register
   out _SFR_IO_ADDR(EEARH), r25
    21f0:	92 bd       	out	0x22, r25	; 34
   out _SFR_IO_ADDR(EEARL), r24
    21f2:	81 bd       	out	0x21, r24	; 33
   ; Start eeprom read by writing EERE
   cli
    21f4:	f8 94       	cli
   sbi _SFR_IO_ADDR(EECR),EERE
    21f6:	f8 9a       	sbi	0x1f, 0	; 31
   ; Read data from Data Register
   in r24,_SFR_IO_ADDR(EEDR)
    21f8:	80 b5       	in	r24, 0x20	; 32
   sei
    21fa:	78 94       	sei
   ret
    21fc:	08 95       	ret

000021fe <ReadButtons>:
    21fe:	12 9a       	sbi	0x02, 2	; 2
    2200:	c8 95       	lpm
    2202:	c8 95       	lpm
    2204:	c8 95       	lpm
    2206:	c8 95       	lpm
    2208:	12 98       	cbi	0x02, 2	; 2
    220a:	40 e1       	ldi	r20, 0x10	; 16
    220c:	80 e0       	ldi	r24, 0x00	; 0
    220e:	90 e0       	ldi	r25, 0x00	; 0
    2210:	20 e0       	ldi	r18, 0x00	; 0
    2212:	30 e0       	ldi	r19, 0x00	; 0
    2214:	36 95       	lsr	r19
    2216:	27 95       	ror	r18
    2218:	96 95       	lsr	r25
    221a:	87 95       	ror	r24
    221c:	c8 95       	lpm
    221e:	c8 95       	lpm
    2220:	c8 95       	lpm
    2222:	c8 95       	lpm
    2224:	13 98       	cbi	0x02, 3	; 2
    2226:	00 9b       	sbis	0x00, 0	; 0
    2228:	30 68       	ori	r19, 0x80	; 128
    222a:	01 9b       	sbis	0x00, 1	; 0
    222c:	90 68       	ori	r25, 0x80	; 128
    222e:	13 9a       	sbi	0x02, 3	; 2
    2230:	c8 95       	lpm
    2232:	c8 95       	lpm
    2234:	c8 95       	lpm
    2236:	c8 95       	lpm
    2238:	41 50       	subi	r20, 0x01	; 1
    223a:	61 f7       	brne	.-40     	; 0x2214 <ReadButtons+0x16>
    223c:	30 93 08 07 	sts	0x0708, r19	; 0x800708 <joypad1_status_lo+0x1>
    2240:	20 93 07 07 	sts	0x0707, r18	; 0x800707 <joypad1_status_lo>
    2244:	90 93 0c 07 	sts	0x070C, r25	; 0x80070c <joypad2_status_lo+0x1>
    2248:	80 93 0b 07 	sts	0x070B, r24	; 0x80070b <joypad2_status_lo>
    224c:	80 91 07 07 	lds	r24, 0x0707	; 0x800707 <joypad1_status_lo>
    2250:	90 91 08 07 	lds	r25, 0x0708	; 0x800708 <joypad1_status_lo+0x1>
    2254:	0f 97       	sbiw	r24, 0x0f	; 15
    2256:	31 f0       	breq	.+12     	; 0x2264 <ReadButtons+0x66>
    2258:	80 91 0b 07 	lds	r24, 0x070B	; 0x80070b <joypad2_status_lo>
    225c:	90 91 0c 07 	lds	r25, 0x070C	; 0x80070c <joypad2_status_lo+0x1>
    2260:	0f 97       	sbiw	r24, 0x0f	; 15
    2262:	11 f4       	brne	.+4      	; 0x2268 <ReadButtons+0x6a>
    2264:	0c 94 e0 10 	jmp	0x21c0	; 0x21c0 <SoftReset>
    2268:	08 95       	ret

0000226a <ReadControllers>:
    226a:	10 92 59 09 	sts	0x0959, r1	; 0x800959 <joypadsConnectionStatus>
    226e:	00 99       	sbic	0x00, 0	; 0
    2270:	03 c0       	rjmp	.+6      	; 0x2278 <ReadControllers+0xe>
    2272:	81 e0       	ldi	r24, 0x01	; 1
    2274:	80 93 59 09 	sts	0x0959, r24	; 0x800959 <joypadsConnectionStatus>
    2278:	01 99       	sbic	0x00, 1	; 0
    227a:	05 c0       	rjmp	.+10     	; 0x2286 <ReadControllers+0x1c>
    227c:	80 91 59 09 	lds	r24, 0x0959	; 0x800959 <joypadsConnectionStatus>
    2280:	82 60       	ori	r24, 0x02	; 2
    2282:	80 93 59 09 	sts	0x0959, r24	; 0x800959 <joypadsConnectionStatus>
    2286:	0c 94 ff 10 	jmp	0x21fe	; 0x21fe <ReadButtons>

0000228a <FormatEeprom>:
    228a:	cf 93       	push	r28
    228c:	df 93       	push	r29
    228e:	c0 e0       	ldi	r28, 0x00	; 0
    2290:	d0 e0       	ldi	r29, 0x00	; 0
    2292:	fe 01       	movw	r30, r28
    2294:	e0 59       	subi	r30, 0x90	; 144
    2296:	ff 4f       	sbci	r31, 0xFF	; 255
    2298:	64 91       	lpm	r22, Z
    229a:	ce 01       	movw	r24, r28
    229c:	0e 94 ec 10 	call	0x21d8	; 0x21d8 <WriteEeprom>
    22a0:	21 96       	adiw	r28, 0x01	; 1
    22a2:	c0 32       	cpi	r28, 0x20	; 32
    22a4:	d1 05       	cpc	r29, r1
    22a6:	a9 f7       	brne	.-22     	; 0x2292 <FormatEeprom+0x8>
    22a8:	c0 e2       	ldi	r28, 0x20	; 32
    22aa:	d0 e0       	ldi	r29, 0x00	; 0
    22ac:	6f ef       	ldi	r22, 0xFF	; 255
    22ae:	ce 01       	movw	r24, r28
    22b0:	0e 94 ec 10 	call	0x21d8	; 0x21d8 <WriteEeprom>
    22b4:	6f ef       	ldi	r22, 0xFF	; 255
    22b6:	ce 01       	movw	r24, r28
    22b8:	01 96       	adiw	r24, 0x01	; 1
    22ba:	0e 94 ec 10 	call	0x21d8	; 0x21d8 <WriteEeprom>
    22be:	a0 96       	adiw	r28, 0x20	; 32
    22c0:	c1 15       	cp	r28, r1
    22c2:	88 e0       	ldi	r24, 0x08	; 8
    22c4:	d8 07       	cpc	r29, r24
    22c6:	91 f7       	brne	.-28     	; 0x22ac <FormatEeprom+0x22>
    22c8:	df 91       	pop	r29
    22ca:	cf 91       	pop	r28
    22cc:	08 95       	ret

000022ce <isEepromFormatted>:
	
//returns true if the EEPROM has been setup to work with the kernel.
bool isEepromFormatted(){
    22ce:	cf 93       	push	r28
	unsigned id;
	id=ReadEeprom(0)+(ReadEeprom(1)<<8);
    22d0:	80 e0       	ldi	r24, 0x00	; 0
    22d2:	90 e0       	ldi	r25, 0x00	; 0
    22d4:	0e 94 f6 10 	call	0x21ec	; 0x21ec <ReadEeprom>
    22d8:	c8 2f       	mov	r28, r24
    22da:	81 e0       	ldi	r24, 0x01	; 1
    22dc:	90 e0       	ldi	r25, 0x00	; 0
    22de:	0e 94 f6 10 	call	0x21ec	; 0x21ec <ReadEeprom>
	return (id==EEPROM_SIGNATURE);
    22e2:	28 2f       	mov	r18, r24
    22e4:	30 e0       	ldi	r19, 0x00	; 0
    22e6:	32 2f       	mov	r19, r18
    22e8:	22 27       	eor	r18, r18
    22ea:	2c 0f       	add	r18, r28
    22ec:	31 1d       	adc	r19, r1
    22ee:	81 e0       	ldi	r24, 0x01	; 1
    22f0:	2a 35       	cpi	r18, 0x5A	; 90
    22f2:	35 45       	sbci	r19, 0x55	; 85
    22f4:	09 f0       	breq	.+2      	; 0x22f8 <isEepromFormatted+0x2a>
    22f6:	80 e0       	ldi	r24, 0x00	; 0
}
    22f8:	cf 91       	pop	r28
    22fa:	08 95       	ret

000022fc <PatchCommand00>:
	Track* track=&tracks[channel];
	track->flags=TRACK_FLAGS_PRIORITY; //priority=1;
	track->patchCommandStreamPos = NULL;
	TriggerCommon(track,patch,volume,80);
	track->flags|=TRACK_FLAGS_PLAYING;
}
    22fc:	fc 01       	movw	r30, r24
    22fe:	67 87       	std	Z+15, r22	; 0x0f
    2300:	08 95       	ret

00002302 <PatchCommand01>:
    2302:	e4 e2       	ldi	r30, 0x24	; 36
    2304:	f9 e0       	ldi	r31, 0x09	; 9
    2306:	81 e0       	ldi	r24, 0x01	; 1
    2308:	91 e0       	ldi	r25, 0x01	; 1
    230a:	95 8b       	std	Z+21, r25	; 0x15
    230c:	84 8b       	std	Z+20, r24	; 0x14
    230e:	63 8b       	std	Z+19, r22	; 0x13
    2310:	08 95       	ret

00002312 <PatchCommand02>:
    2312:	fc 01       	movw	r30, r24
    2314:	82 81       	ldd	r24, Z+2	; 0x02
    2316:	0c 94 ce 14 	jmp	0x299c	; 0x299c <SetMixerWave>

0000231a <PatchCommand03>:
    231a:	fc 01       	movw	r30, r24
    231c:	91 81       	ldd	r25, Z+1	; 0x01
    231e:	69 0f       	add	r22, r25
    2320:	61 83       	std	Z+1, r22	; 0x01
    2322:	82 81       	ldd	r24, Z+2	; 0x02
    2324:	0c 94 b7 14 	jmp	0x296e	; 0x296e <SetMixerNote>

00002328 <PatchCommand04>:
    2328:	fc 01       	movw	r30, r24
    232a:	91 81       	ldd	r25, Z+1	; 0x01
    232c:	96 1b       	sub	r25, r22
    232e:	69 2f       	mov	r22, r25
    2330:	91 83       	std	Z+1, r25	; 0x01
    2332:	82 81       	ldd	r24, Z+2	; 0x02
    2334:	0c 94 b7 14 	jmp	0x296e	; 0x296e <SetMixerNote>

00002338 <PatchCommand05>:
    2338:	fc 01       	movw	r30, r24
    233a:	90 81       	ld	r25, Z
    233c:	9f 75       	andi	r25, 0x5F	; 95
    233e:	90 83       	st	Z, r25
    2340:	08 95       	ret

00002342 <PatchCommand06>:
    2342:	fc 01       	movw	r30, r24
    2344:	90 81       	ld	r25, Z
    2346:	90 64       	ori	r25, 0x40	; 64
    2348:	90 83       	st	Z, r25
    234a:	08 95       	ret

0000234c <PatchCommand07>:
    234c:	fc 01       	movw	r30, r24
    234e:	66 87       	std	Z+14, r22	; 0x0e
    2350:	08 95       	ret

00002352 <PatchCommand08>:
    2352:	1f 93       	push	r17
    2354:	cf 93       	push	r28
    2356:	df 93       	push	r29
    2358:	ec 01       	movw	r28, r24
    235a:	16 2f       	mov	r17, r22
    235c:	8a 81       	ldd	r24, Y+2	; 0x02
    235e:	0e 94 b7 14 	call	0x296e	; 0x296e <SetMixerNote>
    2362:	19 83       	std	Y+1, r17	; 0x01
    2364:	88 81       	ld	r24, Y
    2366:	87 7f       	andi	r24, 0xF7	; 247
    2368:	88 83       	st	Y, r24
    236a:	df 91       	pop	r29
    236c:	cf 91       	pop	r28
    236e:	1f 91       	pop	r17
    2370:	08 95       	ret

00002372 <PatchCommand09>:
    2372:	fc 01       	movw	r30, r24
    2374:	62 87       	std	Z+10, r22	; 0x0a
    2376:	08 95       	ret

00002378 <PatchCommand10>:
    2378:	fc 01       	movw	r30, r24
    237a:	63 87       	std	Z+11, r22	; 0x0b
    237c:	08 95       	ret

0000237e <PatchCommand11>:
    237e:	cf 93       	push	r28
    2380:	df 93       	push	r29
    2382:	ec 01       	movw	r28, r24
    2384:	26 2f       	mov	r18, r22
    2386:	89 81       	ldd	r24, Y+1	; 0x01
    2388:	90 e0       	ldi	r25, 0x00	; 0
    238a:	fc 01       	movw	r30, r24
    238c:	ee 0f       	add	r30, r30
    238e:	ff 1f       	adc	r31, r31
    2390:	ea 52       	subi	r30, 0x2A	; 42
    2392:	f6 4d       	sbci	r31, 0xD6	; 214
    2394:	45 91       	lpm	r20, Z+
    2396:	54 91       	lpm	r21, Z
    2398:	fc 01       	movw	r30, r24
    239a:	e6 0f       	add	r30, r22
    239c:	f1 1d       	adc	r31, r1
    239e:	67 fd       	sbrc	r22, 7
    23a0:	fa 95       	dec	r31
    23a2:	ee 0f       	add	r30, r30
    23a4:	ff 1f       	adc	r31, r31
    23a6:	ea 52       	subi	r30, 0x2A	; 42
    23a8:	f6 4d       	sbci	r31, 0xD6	; 214
    23aa:	85 91       	lpm	r24, Z+
    23ac:	94 91       	lpm	r25, Z
    23ae:	84 1b       	sub	r24, r20
    23b0:	95 0b       	sbc	r25, r21
    23b2:	68 85       	ldd	r22, Y+8	; 0x08
    23b4:	70 e0       	ldi	r23, 0x00	; 0
    23b6:	0e 94 97 20 	call	0x412e	; 0x412e <__divmodhi4>
    23ba:	61 15       	cp	r22, r1
    23bc:	71 05       	cpc	r23, r1
    23be:	11 f4       	brne	.+4      	; 0x23c4 <PatchCommand11+0x46>
    23c0:	61 e0       	ldi	r22, 0x01	; 1
    23c2:	70 e0       	ldi	r23, 0x00	; 0
    23c4:	ea 81       	ldd	r30, Y+2	; 0x02
    23c6:	86 e0       	ldi	r24, 0x06	; 6
    23c8:	e8 9f       	mul	r30, r24
    23ca:	f0 01       	movw	r30, r0
    23cc:	11 24       	eor	r1, r1
    23ce:	ec 5d       	subi	r30, 0xDC	; 220
    23d0:	f6 4f       	sbci	r31, 0xF6	; 246
    23d2:	81 81       	ldd	r24, Z+1	; 0x01
    23d4:	92 81       	ldd	r25, Z+2	; 0x02
    23d6:	86 0f       	add	r24, r22
    23d8:	97 1f       	adc	r25, r23
    23da:	92 83       	std	Z+2, r25	; 0x02
    23dc:	81 83       	std	Z+1, r24	; 0x01
    23de:	7e 83       	std	Y+6, r23	; 0x06
    23e0:	6d 83       	std	Y+5, r22	; 0x05
    23e2:	88 81       	ld	r24, Y
    23e4:	88 60       	ori	r24, 0x08	; 8
    23e6:	88 83       	st	Y, r24
    23e8:	89 81       	ldd	r24, Y+1	; 0x01
    23ea:	28 0f       	add	r18, r24
    23ec:	2f 83       	std	Y+7, r18	; 0x07
    23ee:	df 91       	pop	r29
    23f0:	cf 91       	pop	r28
    23f2:	08 95       	ret

000023f4 <PatchCommand12>:
    23f4:	fc 01       	movw	r30, r24
    23f6:	60 87       	std	Z+8, r22	; 0x08
    23f8:	08 95       	ret

000023fa <PatchCommand13>:
    23fa:	fc 01       	movw	r30, r24
    23fc:	64 83       	std	Z+4, r22	; 0x04
    23fe:	08 95       	ret

00002400 <PatchCommand14>:
    2400:	dc 01       	movw	r26, r24
    2402:	14 96       	adiw	r26, 0x04	; 4
    2404:	8c 91       	ld	r24, X
    2406:	14 97       	sbiw	r26, 0x04	; 4
    2408:	88 23       	and	r24, r24
    240a:	19 f1       	breq	.+70     	; 0x2452 <PatchCommand14+0x52>
    240c:	55 96       	adiw	r26, 0x15	; 21
    240e:	2d 91       	ld	r18, X+
    2410:	3c 91       	ld	r19, X
    2412:	56 97       	sbiw	r26, 0x16	; 22
    2414:	66 23       	and	r22, r22
    2416:	79 f0       	breq	.+30     	; 0x2436 <PatchCommand14+0x36>
    2418:	06 2e       	mov	r0, r22
    241a:	00 0c       	add	r0, r0
    241c:	77 0b       	sbc	r23, r23
    241e:	6f 5f       	subi	r22, 0xFF	; 255
    2420:	7f 4f       	sbci	r23, 0xFF	; 255
    2422:	ab 01       	movw	r20, r22
    2424:	44 0f       	add	r20, r20
    2426:	55 1f       	adc	r21, r21
    2428:	64 0f       	add	r22, r20
    242a:	75 1f       	adc	r23, r21
    242c:	26 1b       	sub	r18, r22
    242e:	37 0b       	sbc	r19, r23
    2430:	09 c0       	rjmp	.+18     	; 0x2444 <PatchCommand14+0x44>
    2432:	ef 3f       	cpi	r30, 0xFF	; 255
    2434:	39 f0       	breq	.+14     	; 0x2444 <PatchCommand14+0x44>
    2436:	23 50       	subi	r18, 0x03	; 3
    2438:	31 09       	sbc	r19, r1
    243a:	f9 01       	movw	r30, r18
    243c:	32 97       	sbiw	r30, 0x02	; 2
    243e:	e4 91       	lpm	r30, Z
    2440:	ed 30       	cpi	r30, 0x0D	; 13
    2442:	b9 f7       	brne	.-18     	; 0x2432 <PatchCommand14+0x32>
    2444:	56 96       	adiw	r26, 0x16	; 22
    2446:	3c 93       	st	X, r19
    2448:	2e 93       	st	-X, r18
    244a:	55 97       	sbiw	r26, 0x15	; 21
    244c:	81 50       	subi	r24, 0x01	; 1
    244e:	14 96       	adiw	r26, 0x04	; 4
    2450:	8c 93       	st	X, r24
    2452:	08 95       	ret

00002454 <ProcessMusic>:
    2454:	ef 92       	push	r14
    2456:	ff 92       	push	r15
    2458:	0f 93       	push	r16
    245a:	1f 93       	push	r17
    245c:	cf 93       	push	r28
    245e:	df 93       	push	r29
    2460:	cc e5       	ldi	r28, 0x5C	; 92
    2462:	d9 e0       	ldi	r29, 0x09	; 9
    2464:	04 e2       	ldi	r16, 0x24	; 36
    2466:	19 e0       	ldi	r17, 0x09	; 9
    2468:	98 01       	movw	r18, r16
    246a:	de 01       	movw	r26, r28
    246c:	1f 96       	adiw	r26, 0x0f	; 15
    246e:	8c 91       	ld	r24, X
    2470:	1f 97       	sbiw	r26, 0x0f	; 15
    2472:	88 23       	and	r24, r24
    2474:	a9 f0       	breq	.+42     	; 0x24a0 <ProcessMusic+0x4c>
    2476:	1e 96       	adiw	r26, 0x0e	; 14
    2478:	4c 91       	ld	r20, X
    247a:	1e 97       	sbiw	r26, 0x0e	; 14
    247c:	08 2e       	mov	r0, r24
    247e:	00 0c       	add	r0, r0
    2480:	99 0b       	sbc	r25, r25
    2482:	84 0f       	add	r24, r20
    2484:	91 1d       	adc	r25, r1
    2486:	8f 3f       	cpi	r24, 0xFF	; 255
    2488:	91 05       	cpc	r25, r1
    248a:	19 f0       	breq	.+6      	; 0x2492 <ProcessMusic+0x3e>
    248c:	14 f0       	brlt	.+4      	; 0x2492 <ProcessMusic+0x3e>
    248e:	8f ef       	ldi	r24, 0xFF	; 255
    2490:	90 e0       	ldi	r25, 0x00	; 0
    2492:	97 ff       	sbrs	r25, 7
    2494:	02 c0       	rjmp	.+4      	; 0x249a <ProcessMusic+0x46>
    2496:	80 e0       	ldi	r24, 0x00	; 0
    2498:	90 e0       	ldi	r25, 0x00	; 0
    249a:	1e 96       	adiw	r26, 0x0e	; 14
    249c:	8c 93       	st	X, r24
    249e:	1e 97       	sbiw	r26, 0x0e	; 14
    24a0:	6c 91       	ld	r22, X
    24a2:	63 ff       	sbrs	r22, 3
    24a4:	26 c0       	rjmp	.+76     	; 0x24f2 <ProcessMusic+0x9e>
    24a6:	15 96       	adiw	r26, 0x05	; 5
    24a8:	4d 91       	ld	r20, X+
    24aa:	5c 91       	ld	r21, X
    24ac:	16 97       	sbiw	r26, 0x06	; 6
    24ae:	f9 01       	movw	r30, r18
    24b0:	81 81       	ldd	r24, Z+1	; 0x01
    24b2:	92 81       	ldd	r25, Z+2	; 0x02
    24b4:	84 0f       	add	r24, r20
    24b6:	95 1f       	adc	r25, r21
    24b8:	92 83       	std	Z+2, r25	; 0x02
    24ba:	81 83       	std	Z+1, r24	; 0x01
    24bc:	17 96       	adiw	r26, 0x07	; 7
    24be:	ec 91       	ld	r30, X
    24c0:	17 97       	sbiw	r26, 0x07	; 7
    24c2:	f0 e0       	ldi	r31, 0x00	; 0
    24c4:	ee 0f       	add	r30, r30
    24c6:	ff 1f       	adc	r31, r31
    24c8:	ea 52       	subi	r30, 0x2A	; 42
    24ca:	f6 4d       	sbci	r31, 0xD6	; 214
    24cc:	e5 90       	lpm	r14, Z+
    24ce:	f4 90       	lpm	r15, Z
    24d0:	14 16       	cp	r1, r20
    24d2:	15 06       	cpc	r1, r21
    24d4:	24 f4       	brge	.+8      	; 0x24de <ProcessMusic+0x8a>
    24d6:	8e 15       	cp	r24, r14
    24d8:	9f 05       	cpc	r25, r15
    24da:	30 f4       	brcc	.+12     	; 0x24e8 <ProcessMusic+0x94>
    24dc:	0a c0       	rjmp	.+20     	; 0x24f2 <ProcessMusic+0x9e>
    24de:	45 2b       	or	r20, r21
    24e0:	41 f0       	breq	.+16     	; 0x24f2 <ProcessMusic+0x9e>
    24e2:	e8 16       	cp	r14, r24
    24e4:	f9 06       	cpc	r15, r25
    24e6:	28 f0       	brcs	.+10     	; 0x24f2 <ProcessMusic+0x9e>
    24e8:	f9 01       	movw	r30, r18
    24ea:	f2 82       	std	Z+2, r15	; 0x02
    24ec:	e1 82       	std	Z+1, r14	; 0x01
    24ee:	67 7f       	andi	r22, 0xF7	; 247
    24f0:	6c 93       	st	X, r22
    24f2:	57 96       	adiw	r26, 0x17	; 23
    24f4:	2a 5f       	subi	r18, 0xFA	; 250
    24f6:	3f 4f       	sbci	r19, 0xFF	; 255
    24f8:	f9 e0       	ldi	r31, 0x09	; 9
    24fa:	a8 3b       	cpi	r26, 0xB8	; 184
    24fc:	bf 07       	cpc	r27, r31
    24fe:	09 f0       	breq	.+2      	; 0x2502 <ProcessMusic+0xae>
    2500:	b5 cf       	rjmp	.-150    	; 0x246c <ProcessMusic+0x18>
    2502:	80 91 12 07 	lds	r24, 0x0712	; 0x800712 <playSong>
    2506:	88 23       	and	r24, r24
    2508:	09 f4       	brne	.+2      	; 0x250c <ProcessMusic+0xb8>
    250a:	cc c0       	rjmp	.+408    	; 0x26a4 <ProcessMusic+0x250>
    250c:	87 e1       	ldi	r24, 0x17	; 23
    250e:	f8 2e       	mov	r15, r24
    2510:	80 91 b8 09 	lds	r24, 0x09B8	; 0x8009b8 <currDeltaTime>
    2514:	90 91 b9 09 	lds	r25, 0x09B9	; 0x8009b9 <currDeltaTime+0x1>
    2518:	20 91 be 09 	lds	r18, 0x09BE	; 0x8009be <nextDeltaTime>
    251c:	30 91 bf 09 	lds	r19, 0x09BF	; 0x8009bf <nextDeltaTime+0x1>
    2520:	82 17       	cp	r24, r18
    2522:	93 07       	cpc	r25, r19
    2524:	09 f0       	breq	.+2      	; 0x2528 <ProcessMusic+0xd4>
    2526:	b9 c0       	rjmp	.+370    	; 0x269a <ProcessMusic+0x246>
    2528:	20 91 c1 09 	lds	r18, 0x09C1	; 0x8009c1 <songPos>
    252c:	30 91 c2 09 	lds	r19, 0x09C2	; 0x8009c2 <songPos+0x1>
    2530:	b9 01       	movw	r22, r18
    2532:	6f 5f       	subi	r22, 0xFF	; 255
    2534:	7f 4f       	sbci	r23, 0xFF	; 255
    2536:	70 93 c2 09 	sts	0x09C2, r23	; 0x8009c2 <songPos+0x1>
    253a:	60 93 c1 09 	sts	0x09C1, r22	; 0x8009c1 <songPos>
    253e:	f9 01       	movw	r30, r18
    2540:	44 91       	lpm	r20, Z
    2542:	4f 3f       	cpi	r20, 0xFF	; 255
    2544:	79 f5       	brne	.+94     	; 0x25a4 <ProcessMusic+0x150>
    2546:	a9 01       	movw	r20, r18
    2548:	4e 5f       	subi	r20, 0xFE	; 254
    254a:	5f 4f       	sbci	r21, 0xFF	; 255
    254c:	50 93 c2 09 	sts	0x09C2, r21	; 0x8009c2 <songPos+0x1>
    2550:	40 93 c1 09 	sts	0x09C1, r20	; 0x8009c1 <songPos>
    2554:	fb 01       	movw	r30, r22
    2556:	64 91       	lpm	r22, Z
    2558:	6f 32       	cpi	r22, 0x2F	; 47
    255a:	19 f4       	brne	.+6      	; 0x2562 <ProcessMusic+0x10e>
    255c:	10 92 12 07 	sts	0x0712, r1	; 0x800712 <playSong>
    2560:	9c c0       	rjmp	.+312    	; 0x269a <ProcessMusic+0x246>
    2562:	66 30       	cpi	r22, 0x06	; 6
    2564:	09 f0       	breq	.+2      	; 0x2568 <ProcessMusic+0x114>
    2566:	8c c0       	rjmp	.+280    	; 0x2680 <ProcessMusic+0x22c>
    2568:	fa 01       	movw	r30, r20
    256a:	44 91       	lpm	r20, Z
    256c:	c9 01       	movw	r24, r18
    256e:	04 96       	adiw	r24, 0x04	; 4
    2570:	90 93 c2 09 	sts	0x09C2, r25	; 0x8009c2 <songPos+0x1>
    2574:	80 93 c1 09 	sts	0x09C1, r24	; 0x8009c1 <songPos>
    2578:	f9 01       	movw	r30, r18
    257a:	33 96       	adiw	r30, 0x03	; 3
    257c:	e4 91       	lpm	r30, Z
    257e:	e3 35       	cpi	r30, 0x53	; 83
    2580:	29 f4       	brne	.+10     	; 0x258c <ProcessMusic+0x138>
    2582:	90 93 c4 09 	sts	0x09C4, r25	; 0x8009c4 <loopStart+0x1>
    2586:	80 93 c3 09 	sts	0x09C3, r24	; 0x8009c3 <loopStart>
    258a:	7a c0       	rjmp	.+244    	; 0x2680 <ProcessMusic+0x22c>
    258c:	e5 34       	cpi	r30, 0x45	; 69
    258e:	09 f0       	breq	.+2      	; 0x2592 <ProcessMusic+0x13e>
    2590:	77 c0       	rjmp	.+238    	; 0x2680 <ProcessMusic+0x22c>
    2592:	80 91 c3 09 	lds	r24, 0x09C3	; 0x8009c3 <loopStart>
    2596:	90 91 c4 09 	lds	r25, 0x09C4	; 0x8009c4 <loopStart+0x1>
    259a:	90 93 c2 09 	sts	0x09C2, r25	; 0x8009c2 <songPos+0x1>
    259e:	80 93 c1 09 	sts	0x09C1, r24	; 0x8009c1 <songPos>
    25a2:	6e c0       	rjmp	.+220    	; 0x2680 <ProcessMusic+0x22c>
    25a4:	47 fd       	sbrc	r20, 7
    25a6:	40 93 bc 09 	sts	0x09BC, r20	; 0x8009bc <lastStatus>
    25aa:	90 91 bc 09 	lds	r25, 0x09BC	; 0x8009bc <lastStatus>
    25ae:	89 2f       	mov	r24, r25
    25b0:	8f 70       	andi	r24, 0x0F	; 15
    25b2:	47 ff       	sbrs	r20, 7
    25b4:	08 c0       	rjmp	.+16     	; 0x25c6 <ProcessMusic+0x172>
    25b6:	2e 5f       	subi	r18, 0xFE	; 254
    25b8:	3f 4f       	sbci	r19, 0xFF	; 255
    25ba:	30 93 c2 09 	sts	0x09C2, r19	; 0x8009c2 <songPos+0x1>
    25be:	20 93 c1 09 	sts	0x09C1, r18	; 0x8009c1 <songPos>
    25c2:	fb 01       	movw	r30, r22
    25c4:	44 91       	lpm	r20, Z
    25c6:	90 7f       	andi	r25, 0xF0	; 240
    25c8:	90 3b       	cpi	r25, 0xB0	; 176
    25ca:	e1 f0       	breq	.+56     	; 0x2604 <ProcessMusic+0x1b0>
    25cc:	90 3c       	cpi	r25, 0xC0	; 192
    25ce:	09 f4       	brne	.+2      	; 0x25d2 <ProcessMusic+0x17e>
    25d0:	51 c0       	rjmp	.+162    	; 0x2674 <ProcessMusic+0x220>
    25d2:	90 39       	cpi	r25, 0x90	; 144
    25d4:	09 f0       	breq	.+2      	; 0x25d8 <ProcessMusic+0x184>
    25d6:	54 c0       	rjmp	.+168    	; 0x2680 <ProcessMusic+0x22c>
    25d8:	e0 91 c1 09 	lds	r30, 0x09C1	; 0x8009c1 <songPos>
    25dc:	f0 91 c2 09 	lds	r31, 0x09C2	; 0x8009c2 <songPos+0x1>
    25e0:	9f 01       	movw	r18, r30
    25e2:	2f 5f       	subi	r18, 0xFF	; 255
    25e4:	3f 4f       	sbci	r19, 0xFF	; 255
    25e6:	30 93 c2 09 	sts	0x09C2, r19	; 0x8009c2 <songPos+0x1>
    25ea:	20 93 c1 09 	sts	0x09C1, r18	; 0x8009c1 <songPos>
    25ee:	24 91       	lpm	r18, Z
    25f0:	22 0f       	add	r18, r18
    25f2:	f8 9e       	mul	r15, r24
    25f4:	f0 01       	movw	r30, r0
    25f6:	11 24       	eor	r1, r1
    25f8:	e4 5a       	subi	r30, 0xA4	; 164
    25fa:	f6 4f       	sbci	r31, 0xF6	; 246
    25fc:	60 89       	ldd	r22, Z+16	; 0x10
    25fe:	0e 94 77 14 	call	0x28ee	; 0x28ee <TriggerNote>
    2602:	3e c0       	rjmp	.+124    	; 0x2680 <ProcessMusic+0x22c>
    2604:	e0 91 c1 09 	lds	r30, 0x09C1	; 0x8009c1 <songPos>
    2608:	f0 91 c2 09 	lds	r31, 0x09C2	; 0x8009c2 <songPos+0x1>
    260c:	9f 01       	movw	r18, r30
    260e:	2f 5f       	subi	r18, 0xFF	; 255
    2610:	3f 4f       	sbci	r19, 0xFF	; 255
    2612:	30 93 c2 09 	sts	0x09C2, r19	; 0x8009c2 <songPos+0x1>
    2616:	20 93 c1 09 	sts	0x09C1, r18	; 0x8009c1 <songPos>
    261a:	e4 91       	lpm	r30, Z
    261c:	47 30       	cpi	r20, 0x07	; 7
    261e:	49 f4       	brne	.+18     	; 0x2632 <ProcessMusic+0x1de>
    2620:	f8 9e       	mul	r15, r24
    2622:	d0 01       	movw	r26, r0
    2624:	11 24       	eor	r1, r1
    2626:	a4 5a       	subi	r26, 0xA4	; 164
    2628:	b6 4f       	sbci	r27, 0xF6	; 246
    262a:	ee 0f       	add	r30, r30
    262c:	1c 96       	adiw	r26, 0x0c	; 12
    262e:	ec 93       	st	X, r30
    2630:	27 c0       	rjmp	.+78     	; 0x2680 <ProcessMusic+0x22c>
    2632:	4b 30       	cpi	r20, 0x0B	; 11
    2634:	49 f4       	brne	.+18     	; 0x2648 <ProcessMusic+0x1f4>
    2636:	f8 9e       	mul	r15, r24
    2638:	d0 01       	movw	r26, r0
    263a:	11 24       	eor	r1, r1
    263c:	a4 5a       	subi	r26, 0xA4	; 164
    263e:	b6 4f       	sbci	r27, 0xF6	; 246
    2640:	ee 0f       	add	r30, r30
    2642:	13 96       	adiw	r26, 0x03	; 3
    2644:	ec 93       	st	X, r30
    2646:	1c c0       	rjmp	.+56     	; 0x2680 <ProcessMusic+0x22c>
    2648:	4c 35       	cpi	r20, 0x5C	; 92
    264a:	49 f4       	brne	.+18     	; 0x265e <ProcessMusic+0x20a>
    264c:	f8 9e       	mul	r15, r24
    264e:	d0 01       	movw	r26, r0
    2650:	11 24       	eor	r1, r1
    2652:	a4 5a       	subi	r26, 0xA4	; 164
    2654:	b6 4f       	sbci	r27, 0xF6	; 246
    2656:	ee 0f       	add	r30, r30
    2658:	1a 96       	adiw	r26, 0x0a	; 10
    265a:	ec 93       	st	X, r30
    265c:	11 c0       	rjmp	.+34     	; 0x2680 <ProcessMusic+0x22c>
    265e:	44 36       	cpi	r20, 0x64	; 100
    2660:	79 f4       	brne	.+30     	; 0x2680 <ProcessMusic+0x22c>
    2662:	f8 9e       	mul	r15, r24
    2664:	d0 01       	movw	r26, r0
    2666:	11 24       	eor	r1, r1
    2668:	a4 5a       	subi	r26, 0xA4	; 164
    266a:	b6 4f       	sbci	r27, 0xF6	; 246
    266c:	ee 0f       	add	r30, r30
    266e:	1b 96       	adiw	r26, 0x0b	; 11
    2670:	ec 93       	st	X, r30
    2672:	06 c0       	rjmp	.+12     	; 0x2680 <ProcessMusic+0x22c>
    2674:	f8 9e       	mul	r15, r24
    2676:	f0 01       	movw	r30, r0
    2678:	11 24       	eor	r1, r1
    267a:	e4 5a       	subi	r30, 0xA4	; 164
    267c:	f6 4f       	sbci	r31, 0xF6	; 246
    267e:	40 8b       	std	Z+16, r20	; 0x10
    2680:	81 ec       	ldi	r24, 0xC1	; 193
    2682:	99 e0       	ldi	r25, 0x09	; 9
    2684:	0e 94 03 14 	call	0x2806	; 0x2806 <ReadVarLen>
    2688:	90 93 bf 09 	sts	0x09BF, r25	; 0x8009bf <nextDeltaTime+0x1>
    268c:	80 93 be 09 	sts	0x09BE, r24	; 0x8009be <nextDeltaTime>
    2690:	10 92 b9 09 	sts	0x09B9, r1	; 0x8009b9 <currDeltaTime+0x1>
    2694:	10 92 b8 09 	sts	0x09B8, r1	; 0x8009b8 <currDeltaTime>
    2698:	3b cf       	rjmp	.-394    	; 0x2510 <ProcessMusic+0xbc>
    269a:	01 96       	adiw	r24, 0x01	; 1
    269c:	90 93 b9 09 	sts	0x09B9, r25	; 0x8009b9 <currDeltaTime+0x1>
    26a0:	80 93 b8 09 	sts	0x09B8, r24	; 0x8009b8 <currDeltaTime>
    26a4:	ee 24       	eor	r14, r14
    26a6:	ea 94       	dec	r14
    26a8:	f1 2c       	mov	r15, r1
    26aa:	88 81       	ld	r24, Y
    26ac:	85 ff       	sbrs	r24, 5
    26ae:	37 c0       	rjmp	.+110    	; 0x271e <ProcessMusic+0x2ca>
    26b0:	2d 89       	ldd	r18, Y+21	; 0x15
    26b2:	3e 89       	ldd	r19, Y+22	; 0x16
    26b4:	23 2b       	or	r18, r19
    26b6:	09 f4       	brne	.+2      	; 0x26ba <ProcessMusic+0x266>
    26b8:	32 c0       	rjmp	.+100    	; 0x271e <ProcessMusic+0x2ca>
    26ba:	86 fd       	sbrc	r24, 6
    26bc:	30 c0       	rjmp	.+96     	; 0x271e <ProcessMusic+0x2ca>
    26be:	9b 89       	ldd	r25, Y+19	; 0x13
    26c0:	8a 89       	ldd	r24, Y+18	; 0x12
    26c2:	98 13       	cpse	r25, r24
    26c4:	2a c0       	rjmp	.+84     	; 0x271a <ProcessMusic+0x2c6>
    26c6:	ed 89       	ldd	r30, Y+21	; 0x15
    26c8:	fe 89       	ldd	r31, Y+22	; 0x16
    26ca:	bf 01       	movw	r22, r30
    26cc:	6f 5f       	subi	r22, 0xFF	; 255
    26ce:	7f 4f       	sbci	r23, 0xFF	; 255
    26d0:	7e 8b       	std	Y+22, r23	; 0x16
    26d2:	6d 8b       	std	Y+21, r22	; 0x15
    26d4:	84 91       	lpm	r24, Z
    26d6:	8f 3f       	cpi	r24, 0xFF	; 255
    26d8:	31 f4       	brne	.+12     	; 0x26e6 <ProcessMusic+0x292>
    26da:	88 81       	ld	r24, Y
    26dc:	8f 77       	andi	r24, 0x7F	; 127
    26de:	88 83       	st	Y, r24
    26e0:	1e 8a       	std	Y+22, r1	; 0x16
    26e2:	1d 8a       	std	Y+21, r1	; 0x15
    26e4:	1a c0       	rjmp	.+52     	; 0x271a <ProcessMusic+0x2c6>
    26e6:	32 96       	adiw	r30, 0x02	; 2
    26e8:	fe 8b       	std	Y+22, r31	; 0x16
    26ea:	ed 8b       	std	Y+21, r30	; 0x15
    26ec:	fb 01       	movw	r30, r22
    26ee:	64 91       	lpm	r22, Z
    26f0:	e8 2f       	mov	r30, r24
    26f2:	f0 e0       	ldi	r31, 0x00	; 0
    26f4:	ee 0f       	add	r30, r30
    26f6:	ff 1f       	adc	r31, r31
    26f8:	ee 53       	subi	r30, 0x3E	; 62
    26fa:	ff 4f       	sbci	r31, 0xFF	; 255
    26fc:	25 91       	lpm	r18, Z+
    26fe:	34 91       	lpm	r19, Z
    2700:	ce 01       	movw	r24, r28
    2702:	f9 01       	movw	r30, r18
    2704:	09 95       	icall
    2706:	ed 89       	ldd	r30, Y+21	; 0x15
    2708:	fe 89       	ldd	r31, Y+22	; 0x16
    270a:	cf 01       	movw	r24, r30
    270c:	01 96       	adiw	r24, 0x01	; 1
    270e:	9e 8b       	std	Y+22, r25	; 0x16
    2710:	8d 8b       	std	Y+21, r24	; 0x15
    2712:	e4 91       	lpm	r30, Z
    2714:	ea 8b       	std	Y+18, r30	; 0x12
    2716:	1b 8a       	std	Y+19, r1	; 0x13
    2718:	d2 cf       	rjmp	.-92     	; 0x26be <ProcessMusic+0x26a>
    271a:	9f 5f       	subi	r25, 0xFF	; 255
    271c:	9b 8b       	std	Y+19, r25	; 0x13
    271e:	98 81       	ld	r25, Y
    2720:	95 ff       	sbrs	r25, 5
    2722:	5e c0       	rjmp	.+188    	; 0x27e0 <ProcessMusic+0x38c>
    2724:	8c 89       	ldd	r24, Y+20	; 0x14
    2726:	8f 3f       	cpi	r24, 0xFF	; 255
    2728:	11 f0       	breq	.+4      	; 0x272e <ProcessMusic+0x2da>
    272a:	8f 5f       	subi	r24, 0xFF	; 255
    272c:	8c 8b       	std	Y+20, r24	; 0x14
    272e:	97 fd       	sbrc	r25, 7
    2730:	02 c0       	rjmp	.+4      	; 0x2736 <ProcessMusic+0x2e2>
    2732:	9c 85       	ldd	r25, Y+12	; 0x0c
    2734:	01 c0       	rjmp	.+2      	; 0x2738 <ProcessMusic+0x2e4>
    2736:	9f ef       	ldi	r25, 0xFF	; 255
    2738:	8d 85       	ldd	r24, Y+13	; 0x0d
    273a:	49 85       	ldd	r20, Y+9	; 0x09
    273c:	88 23       	and	r24, r24
    273e:	09 f4       	brne	.+2      	; 0x2742 <ProcessMusic+0x2ee>
    2740:	49 c0       	rjmp	.+146    	; 0x27d4 <ProcessMusic+0x380>
    2742:	6e 85       	ldd	r22, Y+14	; 0x0e
    2744:	66 23       	and	r22, r22
    2746:	09 f4       	brne	.+2      	; 0x274a <ProcessMusic+0x2f6>
    2748:	45 c0       	rjmp	.+138    	; 0x27d4 <ProcessMusic+0x380>
    274a:	99 23       	and	r25, r25
    274c:	09 f4       	brne	.+2      	; 0x2750 <ProcessMusic+0x2fc>
    274e:	42 c0       	rjmp	.+132    	; 0x27d4 <ProcessMusic+0x380>
    2750:	50 91 bd 09 	lds	r21, 0x09BD	; 0x8009bd <masterVolume>
    2754:	55 23       	and	r21, r21
    2756:	09 f4       	brne	.+2      	; 0x275a <ProcessMusic+0x306>
    2758:	3d c0       	rjmp	.+122    	; 0x27d4 <ProcessMusic+0x380>
    275a:	89 9f       	mul	r24, r25
    275c:	c0 01       	movw	r24, r0
    275e:	11 24       	eor	r1, r1
    2760:	93 95       	inc	r25
    2762:	89 2f       	mov	r24, r25
    2764:	99 27       	eor	r25, r25
    2766:	68 9f       	mul	r22, r24
    2768:	90 01       	movw	r18, r0
    276a:	69 9f       	mul	r22, r25
    276c:	30 0d       	add	r19, r0
    276e:	11 24       	eor	r1, r1
    2770:	33 95       	inc	r19
    2772:	23 2f       	mov	r18, r19
    2774:	33 27       	eor	r19, r19
    2776:	6b 81       	ldd	r22, Y+3	; 0x03
    2778:	62 9f       	mul	r22, r18
    277a:	c0 01       	movw	r24, r0
    277c:	63 9f       	mul	r22, r19
    277e:	90 0d       	add	r25, r0
    2780:	11 24       	eor	r1, r1
    2782:	93 95       	inc	r25
    2784:	89 2f       	mov	r24, r25
    2786:	99 27       	eor	r25, r25
    2788:	58 9f       	mul	r21, r24
    278a:	90 01       	movw	r18, r0
    278c:	59 9f       	mul	r21, r25
    278e:	30 0d       	add	r19, r0
    2790:	11 24       	eor	r1, r1
    2792:	33 95       	inc	r19
    2794:	23 2f       	mov	r18, r19
    2796:	33 27       	eor	r19, r19
    2798:	8a 85       	ldd	r24, Y+10	; 0x0a
    279a:	88 23       	and	r24, r24
    279c:	e9 f0       	breq	.+58     	; 0x27d8 <ProcessMusic+0x384>
    279e:	e4 2f       	mov	r30, r20
    27a0:	f0 e0       	ldi	r31, 0x00	; 0
    27a2:	e0 50       	subi	r30, 0x00	; 0
    27a4:	f5 4d       	sbci	r31, 0xD5	; 213
    27a6:	e4 91       	lpm	r30, Z
    27a8:	e0 58       	subi	r30, 0x80	; 128
    27aa:	8e 9f       	mul	r24, r30
    27ac:	f0 01       	movw	r30, r0
    27ae:	11 24       	eor	r1, r1
    27b0:	f3 95       	inc	r31
    27b2:	ef 2f       	mov	r30, r31
    27b4:	ff 27       	eor	r31, r31
    27b6:	b7 01       	movw	r22, r14
    27b8:	6e 1b       	sub	r22, r30
    27ba:	7f 0b       	sbc	r23, r31
    27bc:	62 9f       	mul	r22, r18
    27be:	c0 01       	movw	r24, r0
    27c0:	63 9f       	mul	r22, r19
    27c2:	90 0d       	add	r25, r0
    27c4:	72 9f       	mul	r23, r18
    27c6:	90 0d       	add	r25, r0
    27c8:	11 24       	eor	r1, r1
    27ca:	9c 01       	movw	r18, r24
    27cc:	33 95       	inc	r19
    27ce:	23 2f       	mov	r18, r19
    27d0:	33 27       	eor	r19, r19
    27d2:	02 c0       	rjmp	.+4      	; 0x27d8 <ProcessMusic+0x384>
    27d4:	20 e0       	ldi	r18, 0x00	; 0
    27d6:	30 e0       	ldi	r19, 0x00	; 0
    27d8:	8b 85       	ldd	r24, Y+11	; 0x0b
    27da:	48 0f       	add	r20, r24
    27dc:	49 87       	std	Y+9, r20	; 0x09
    27de:	02 c0       	rjmp	.+4      	; 0x27e4 <ProcessMusic+0x390>
    27e0:	20 e0       	ldi	r18, 0x00	; 0
    27e2:	30 e0       	ldi	r19, 0x00	; 0
    27e4:	f8 01       	movw	r30, r16
    27e6:	20 83       	st	Z, r18
    27e8:	67 96       	adiw	r28, 0x17	; 23
    27ea:	0a 5f       	subi	r16, 0xFA	; 250
    27ec:	1f 4f       	sbci	r17, 0xFF	; 255
    27ee:	f9 e0       	ldi	r31, 0x09	; 9
    27f0:	c8 3b       	cpi	r28, 0xB8	; 184
    27f2:	df 07       	cpc	r29, r31
    27f4:	09 f0       	breq	.+2      	; 0x27f8 <ProcessMusic+0x3a4>
    27f6:	59 cf       	rjmp	.-334    	; 0x26aa <ProcessMusic+0x256>
    27f8:	df 91       	pop	r29
    27fa:	cf 91       	pop	r28
    27fc:	1f 91       	pop	r17
    27fe:	0f 91       	pop	r16
    2800:	ff 90       	pop	r15
    2802:	ef 90       	pop	r14
    2804:	08 95       	ret

00002806 <ReadVarLen>:
    2806:	dc 01       	movw	r26, r24
    2808:	ed 91       	ld	r30, X+
    280a:	fc 91       	ld	r31, X
    280c:	11 97       	sbiw	r26, 0x01	; 1
    280e:	9f 01       	movw	r18, r30
    2810:	2f 5f       	subi	r18, 0xFF	; 255
    2812:	3f 4f       	sbci	r19, 0xFF	; 255
    2814:	11 96       	adiw	r26, 0x01	; 1
    2816:	3c 93       	st	X, r19
    2818:	2e 93       	st	-X, r18
    281a:	e4 91       	lpm	r30, Z
    281c:	e7 fd       	sbrc	r30, 7
    281e:	03 c0       	rjmp	.+6      	; 0x2826 <ReadVarLen+0x20>
    2820:	8e 2f       	mov	r24, r30
    2822:	90 e0       	ldi	r25, 0x00	; 0
    2824:	08 95       	ret
    2826:	ef 77       	andi	r30, 0x7F	; 127
    2828:	8e 2f       	mov	r24, r30
    282a:	90 e0       	ldi	r25, 0x00	; 0
    282c:	96 95       	lsr	r25
    282e:	98 2f       	mov	r25, r24
    2830:	88 27       	eor	r24, r24
    2832:	97 95       	ror	r25
    2834:	87 95       	ror	r24
    2836:	2f 5f       	subi	r18, 0xFF	; 255
    2838:	3f 4f       	sbci	r19, 0xFF	; 255
    283a:	f9 01       	movw	r30, r18
    283c:	31 97       	sbiw	r30, 0x01	; 1
    283e:	e4 91       	lpm	r30, Z
    2840:	4e 2f       	mov	r20, r30
    2842:	4f 77       	andi	r20, 0x7F	; 127
    2844:	84 0f       	add	r24, r20
    2846:	91 1d       	adc	r25, r1
    2848:	e7 fd       	sbrc	r30, 7
    284a:	f0 cf       	rjmp	.-32     	; 0x282c <ReadVarLen+0x26>
    284c:	2d 93       	st	X+, r18
    284e:	3c 93       	st	X, r19
    2850:	08 95       	ret

00002852 <TriggerCommon>:
    2852:	0f 93       	push	r16
    2854:	1f 93       	push	r17
    2856:	cf 93       	push	r28
    2858:	df 93       	push	r29
    285a:	ec 01       	movw	r28, r24
    285c:	16 2f       	mov	r17, r22
    285e:	88 81       	ld	r24, Y
    2860:	08 2f       	mov	r16, r24
    2862:	00 78       	andi	r16, 0x80	; 128
    2864:	1f 86       	std	Y+15, r1	; 0x0f
    2866:	9f ef       	ldi	r25, 0xFF	; 255
    2868:	9e 87       	std	Y+14, r25	; 0x0e
    286a:	4d 87       	std	Y+13, r20	; 0x0d
    286c:	1c 8a       	std	Y+20, r1	; 0x14
    286e:	87 7b       	andi	r24, 0xB7	; 183
    2870:	88 83       	st	Y, r24
    2872:	1a 86       	std	Y+10, r1	; 0x0a
    2874:	19 86       	std	Y+9, r1	; 0x09
    2876:	29 83       	std	Y+1, r18	; 0x01
    2878:	1c 82       	std	Y+4, r1	; 0x04
    287a:	9b 83       	std	Y+3, r25	; 0x03
    287c:	8a 81       	ldd	r24, Y+2	; 0x02
    287e:	83 30       	cpi	r24, 0x03	; 3
    2880:	69 f4       	brne	.+26     	; 0x289c <TriggerCommon+0x4a>
    2882:	01 11       	cpse	r16, r1
    2884:	01 c0       	rjmp	.+2      	; 0x2888 <TriggerCommon+0x36>
    2886:	12 2f       	mov	r17, r18
    2888:	81 e0       	ldi	r24, 0x01	; 1
    288a:	91 e0       	ldi	r25, 0x01	; 1
    288c:	90 93 39 09 	sts	0x0939, r25	; 0x800939 <tr4_barrel_hi>
    2890:	80 93 38 09 	sts	0x0938, r24	; 0x800938 <tr4_barrel_lo>
    2894:	81 e0       	ldi	r24, 0x01	; 1
    2896:	80 93 37 09 	sts	0x0937, r24	; 0x800937 <tr4_params>
    289a:	07 c0       	rjmp	.+14     	; 0x28aa <TriggerCommon+0x58>
    289c:	62 2f       	mov	r22, r18
    289e:	0e 94 b7 14 	call	0x296e	; 0x296e <SetMixerNote>
    28a2:	60 e0       	ldi	r22, 0x00	; 0
    28a4:	8a 81       	ldd	r24, Y+2	; 0x02
    28a6:	0e 94 ce 14 	call	0x299c	; 0x299c <SetMixerWave>
    28aa:	00 23       	and	r16, r16
    28ac:	11 f0       	breq	.+4      	; 0x28b2 <TriggerCommon+0x60>
    28ae:	19 8b       	std	Y+17, r17	; 0x11
    28b0:	01 c0       	rjmp	.+2      	; 0x28b4 <TriggerCommon+0x62>
    28b2:	18 8b       	std	Y+16, r17	; 0x10
    28b4:	e0 91 ba 09 	lds	r30, 0x09BA	; 0x8009ba <patchPointers>
    28b8:	f0 91 bb 09 	lds	r31, 0x09BB	; 0x8009bb <patchPointers+0x1>
    28bc:	89 e0       	ldi	r24, 0x09	; 9
    28be:	18 9f       	mul	r17, r24
    28c0:	e0 0d       	add	r30, r0
    28c2:	f1 1d       	adc	r31, r1
    28c4:	11 24       	eor	r1, r1
    28c6:	33 96       	adiw	r30, 0x03	; 3
    28c8:	85 91       	lpm	r24, Z+
    28ca:	94 91       	lpm	r25, Z
    28cc:	00 97       	sbiw	r24, 0x00	; 0
    28ce:	19 f4       	brne	.+6      	; 0x28d6 <TriggerCommon+0x84>
    28d0:	1e 8a       	std	Y+22, r1	; 0x16
    28d2:	1d 8a       	std	Y+21, r1	; 0x15
    28d4:	07 c0       	rjmp	.+14     	; 0x28e4 <TriggerCommon+0x92>
    28d6:	1b 8a       	std	Y+19, r1	; 0x13
    28d8:	fc 01       	movw	r30, r24
    28da:	24 91       	lpm	r18, Z
    28dc:	2a 8b       	std	Y+18, r18	; 0x12
    28de:	01 96       	adiw	r24, 0x01	; 1
    28e0:	9e 8b       	std	Y+22, r25	; 0x16
    28e2:	8d 8b       	std	Y+21, r24	; 0x15
    28e4:	df 91       	pop	r29
    28e6:	cf 91       	pop	r28
    28e8:	1f 91       	pop	r17
    28ea:	0f 91       	pop	r16
    28ec:	08 95       	ret

000028ee <TriggerNote>:


void TriggerNote(unsigned char channel,unsigned char patch,unsigned char note,unsigned char volume){
    28ee:	cf 93       	push	r28
    28f0:	df 93       	push	r29
	Track* track=&tracks[channel];

	//allow only other music notes 
	if((track->flags&TRACK_FLAGS_PLAYING)==0 || (track->flags&TRACK_FLAGS_PRIORITY)==0){
    28f2:	a8 2f       	mov	r26, r24
    28f4:	b0 e0       	ldi	r27, 0x00	; 0
    28f6:	97 e1       	ldi	r25, 0x17	; 23
    28f8:	89 9f       	mul	r24, r25
    28fa:	f0 01       	movw	r30, r0
    28fc:	11 24       	eor	r1, r1
    28fe:	e4 5a       	subi	r30, 0xA4	; 164
    2900:	f6 4f       	sbci	r31, 0xF6	; 246
    2902:	80 81       	ld	r24, Z
    2904:	85 ff       	sbrs	r24, 5
    2906:	02 c0       	rjmp	.+4      	; 0x290c <TriggerNote+0x1e>
    2908:	87 fd       	sbrc	r24, 7
    290a:	2e c0       	rjmp	.+92     	; 0x2968 <TriggerNote+0x7a>
			
		if(volume==0){ //note-off received
    290c:	21 11       	cpse	r18, r1
    290e:	18 c0       	rjmp	.+48     	; 0x2940 <TriggerNote+0x52>

			
			//cut note if there's no envelope & no note hold
			if(track->envelopeStep==0 && !(track->flags&TRACK_FLAGS_HOLD_ENV)){
    2910:	97 e1       	ldi	r25, 0x17	; 23
    2912:	9a 9f       	mul	r25, r26
    2914:	f0 01       	movw	r30, r0
    2916:	9b 9f       	mul	r25, r27
    2918:	f0 0d       	add	r31, r0
    291a:	11 24       	eor	r1, r1
    291c:	e4 5a       	subi	r30, 0xA4	; 164
    291e:	f6 4f       	sbci	r31, 0xF6	; 246
    2920:	97 85       	ldd	r25, Z+15	; 0x0f
    2922:	91 11       	cpse	r25, r1
    2924:	02 c0       	rjmp	.+4      	; 0x292a <TriggerNote+0x3c>
    2926:	86 ff       	sbrs	r24, 6
				track->noteVol=0;
    2928:	15 86       	std	Z+13, r1	; 0x0d
			}

			track->flags&=(~TRACK_FLAGS_HOLD_ENV);//patchEnvelopeHold=false;
    292a:	97 e1       	ldi	r25, 0x17	; 23
    292c:	9a 9f       	mul	r25, r26
    292e:	f0 01       	movw	r30, r0
    2930:	9b 9f       	mul	r25, r27
    2932:	f0 0d       	add	r31, r0
    2934:	11 24       	eor	r1, r1
    2936:	e4 5a       	subi	r30, 0xA4	; 164
    2938:	f6 4f       	sbci	r31, 0xF6	; 246
    293a:	8f 7b       	andi	r24, 0xBF	; 191
    293c:	80 83       	st	Z, r24
    293e:	14 c0       	rjmp	.+40     	; 0x2968 <TriggerNote+0x7a>
    2940:	82 2f       	mov	r24, r18
    2942:	24 2f       	mov	r18, r20
		}else{
		
			track->flags=0;//&=(~TRACK_FLAGS_PRIORITY);// priority=0;
    2944:	97 e1       	ldi	r25, 0x17	; 23
    2946:	9a 9f       	mul	r25, r26
    2948:	e0 01       	movw	r28, r0
    294a:	9b 9f       	mul	r25, r27
    294c:	d0 0d       	add	r29, r0
    294e:	11 24       	eor	r1, r1
    2950:	c4 5a       	subi	r28, 0xA4	; 164
    2952:	d6 4f       	sbci	r29, 0xF6	; 246
    2954:	18 82       	st	Y, r1
			track->patchCommandStreamPos = NULL;
    2956:	1e 8a       	std	Y+22, r1	; 0x16
    2958:	1d 8a       	std	Y+21, r1	; 0x15
			TriggerCommon(track,patch,volume,note);
    295a:	48 2f       	mov	r20, r24
    295c:	ce 01       	movw	r24, r28
    295e:	0e 94 29 14 	call	0x2852	; 0x2852 <TriggerCommon>
			track->flags|=TRACK_FLAGS_PLAYING;
    2962:	88 81       	ld	r24, Y
    2964:	80 62       	ori	r24, 0x20	; 32
    2966:	88 83       	st	Y, r24
		}

	}
}
    2968:	df 91       	pop	r29
    296a:	cf 91       	pop	r28
    296c:	08 95       	ret

0000296e <SetMixerNote>:
    296e:	99 27       	eor	r25, r25
    2970:	77 27       	eor	r23, r23
    2972:	83 30       	cpi	r24, 0x03	; 3
    2974:	08 f0       	brcs	.+2      	; 0x2978 <set_note_waves>
    2976:	08 95       	ret

00002978 <set_note_waves>:
    2978:	e6 ed       	ldi	r30, 0xD6	; 214
    297a:	f9 e2       	ldi	r31, 0x29	; 41
    297c:	66 0f       	add	r22, r22
    297e:	77 1f       	adc	r23, r23
    2980:	e6 0f       	add	r30, r22
    2982:	f7 1f       	adc	r31, r23
    2984:	a5 91       	lpm	r26, Z+
    2986:	b4 91       	lpm	r27, Z
    2988:	e4 e2       	ldi	r30, 0x24	; 36
    298a:	f9 e0       	ldi	r31, 0x09	; 9
    298c:	26 e0       	ldi	r18, 0x06	; 6
    298e:	28 9f       	mul	r18, r24
    2990:	e0 0d       	add	r30, r0
    2992:	f1 1d       	adc	r31, r1
    2994:	a1 83       	std	Z+1, r26	; 0x01
    2996:	b2 83       	std	Z+2, r27	; 0x02
    2998:	11 24       	eor	r1, r1
    299a:	08 95       	ret

0000299c <SetMixerWave>:
;         Noise channel: 0xfe=7 bit lfsr, 0xff=15 bit lfsr
;                 
;***********************
.section .text.SetMixerWave
SetMixerWave:
	clr r25
    299c:	99 27       	eor	r25, r25
	clr r23
    299e:	77 27       	eor	r23, r23

#if (INCLUDE_DEFAULT_WAVES != 0)
	ldi ZL,lo8(mixerStruct)
    29a0:	e4 e2       	ldi	r30, 0x24	; 36
	ldi ZH,hi8(mixerStruct)
    29a2:	f9 e0       	ldi	r31, 0x09	; 9
	ldi r18,CHANNEL_STRUCT_SIZE
    29a4:	26 e0       	ldi	r18, 0x06	; 6
	mul r18,r24	
    29a6:	28 9f       	mul	r18, r24
	add ZL,r0
    29a8:	e0 0d       	add	r30, r0
	adc ZH,r1
    29aa:	f1 1d       	adc	r31, r1
#endif

#if MIXER_CHAN4_TYPE == 0
	cpi r22,0xfe	;7bit lfsr
    29ac:	6e 3f       	cpi	r22, 0xFE	; 254
	brne smw1
    29ae:	31 f4       	brne	.+12     	; 0x29bc <smw1>
	lds r22,tr4_params
    29b0:	60 91 37 09 	lds	r22, 0x0937	; 0x800937 <tr4_params>
	andi r22,0xfe;
    29b4:	6e 7f       	andi	r22, 0xFE	; 254
	sts tr4_params,r22
    29b6:	60 93 37 09 	sts	0x0937, r22	; 0x800937 <tr4_params>
	rjmp esmw	
    29ba:	0b c0       	rjmp	.+22     	; 0x29d2 <esmw>

000029bc <smw1>:
smw1:
	cpi r22,0xff	;15bit lfsr
    29bc:	6f 3f       	cpi	r22, 0xFF	; 255
	brne smw2
    29be:	31 f4       	brne	.+12     	; 0x29cc <smw2>
	lds r22,tr4_params
    29c0:	60 91 37 09 	lds	r22, 0x0937	; 0x800937 <tr4_params>
	ori r22,0xfe;
    29c4:	6e 6f       	ori	r22, 0xFE	; 254
	sts tr4_params,r22	
    29c6:	60 93 37 09 	sts	0x0937, r22	; 0x800937 <tr4_params>
	rjmp esmw
    29ca:	03 c0       	rjmp	.+6      	; 0x29d2 <esmw>

000029cc <smw2>:
smw2:
#endif

#if (INCLUDE_DEFAULT_WAVES != 0)
	ldi r23,hi8(waves)
    29cc:	7b e2       	ldi	r23, 0x2B	; 43
	add r23,r22
    29ce:	76 0f       	add	r23, r22
	std Z+samplepos_hi,r23 ;store path No
    29d0:	75 83       	std	Z+5, r23	; 0x05

000029d2 <esmw>:
#endif

esmw:
	clr r1	
    29d2:	11 24       	eor	r1, r1
	ret
    29d4:	08 95       	ret

000029d6 <steptable>:
    29d6:	22 00       	.word	0x0022	; ????
    29d8:	24 00       	.word	0x0024	; ????
    29da:	26 00       	.word	0x0026	; ????
    29dc:	28 00       	.word	0x0028	; ????
    29de:	2b 00       	.word	0x002b	; ????
    29e0:	2d 00       	.word	0x002d	; ????
    29e2:	30 00       	.word	0x0030	; ????
    29e4:	33 00       	.word	0x0033	; ????
    29e6:	36 00       	.word	0x0036	; ????
    29e8:	39 00       	.word	0x0039	; ????
    29ea:	3d 00       	.word	0x003d	; ????
    29ec:	40 00       	.word	0x0040	; ????
    29ee:	44 00       	.word	0x0044	; ????
    29f0:	48 00       	.word	0x0048	; ????
    29f2:	4c 00       	.word	0x004c	; ????
    29f4:	51 00       	.word	0x0051	; ????
    29f6:	56 00       	.word	0x0056	; ????
    29f8:	5b 00       	.word	0x005b	; ????
    29fa:	60 00       	.word	0x0060	; ????
    29fc:	66 00       	.word	0x0066	; ????
    29fe:	6c 00       	.word	0x006c	; ????
    2a00:	73 00       	.word	0x0073	; ????
    2a02:	79 00       	.word	0x0079	; ????
    2a04:	81 00       	.word	0x0081	; ????
    2a06:	88 00       	.word	0x0088	; ????
    2a08:	90 00       	.word	0x0090	; ????
    2a0a:	99 00       	.word	0x0099	; ????
    2a0c:	a2 00       	.word	0x00a2	; ????
    2a0e:	ac 00       	.word	0x00ac	; ????
    2a10:	b6 00       	.word	0x00b6	; ????
    2a12:	c1 00       	.word	0x00c1	; ????
    2a14:	cc 00       	.word	0x00cc	; ????
    2a16:	d8 00       	.word	0x00d8	; ????
    2a18:	e5 00       	.word	0x00e5	; ????
    2a1a:	f3 00       	.word	0x00f3	; ????
    2a1c:	01 01       	movw	r0, r2
    2a1e:	10 01       	movw	r2, r0
    2a20:	21 01       	movw	r4, r2
    2a22:	32 01       	movw	r6, r4
    2a24:	44 01       	movw	r8, r8
    2a26:	57 01       	movw	r10, r14
    2a28:	6c 01       	movw	r12, r24
    2a2a:	81 01       	movw	r16, r2
    2a2c:	98 01       	movw	r18, r16
    2a2e:	b0 01       	movw	r22, r0
    2a30:	ca 01       	movw	r24, r20
    2a32:	e5 01       	movw	r28, r10
    2a34:	02 02       	muls	r16, r18
    2a36:	21 02       	muls	r18, r17
    2a38:	41 02       	muls	r20, r17
    2a3a:	64 02       	muls	r22, r20
    2a3c:	88 02       	muls	r24, r24
    2a3e:	ae 02       	muls	r26, r30
    2a40:	d7 02       	muls	r29, r23
    2a42:	03 03       	mulsu	r16, r19
    2a44:	30 03       	mulsu	r19, r16
    2a46:	61 03       	mulsu	r22, r17
    2a48:	94 03       	fmuls	r17, r20
    2a4a:	cb 03       	fmulsu	r20, r19
    2a4c:	05 04       	cpc	r0, r5
    2a4e:	42 04       	cpc	r4, r2
    2a50:	83 04       	cpc	r8, r3
    2a52:	c7 04       	cpc	r12, r7
    2a54:	10 05       	cpc	r17, r0
    2a56:	5d 05       	cpc	r21, r13
    2a58:	af 05       	cpc	r26, r15
    2a5a:	05 06       	cpc	r0, r21
    2a5c:	61 06       	cpc	r6, r17
    2a5e:	c2 06       	cpc	r12, r18
    2a60:	29 07       	cpc	r18, r25
    2a62:	96 07       	cpc	r25, r22
    2a64:	09 08       	sbc	r0, r9
    2a66:	83 08       	sbc	r8, r3
    2a68:	05 09       	sbc	r16, r5
    2a6a:	8e 09       	sbc	r24, r14
    2a6c:	20 0a       	sbc	r2, r16
    2a6e:	ba 0a       	sbc	r11, r26
    2a70:	5d 0b       	sbc	r21, r29
    2a72:	0a 0c       	add	r0, r10
    2a74:	c1 0c       	add	r12, r1
    2a76:	84 0d       	add	r24, r4
    2a78:	51 0e       	add	r5, r17
    2a7a:	2b 0f       	add	r18, r27
    2a7c:	12 10       	cpse	r1, r2
    2a7e:	07 11       	cpse	r16, r7
    2a80:	0a 12       	cpse	r0, r26
    2a82:	1d 13       	cpse	r17, r29
    2a84:	40 14       	cp	r4, r0
    2a86:	74 15       	cp	r23, r4
    2a88:	ba 16       	cp	r11, r26
    2a8a:	14 18       	sub	r1, r4
    2a8c:	83 19       	sub	r24, r3
    2a8e:	07 1b       	sub	r16, r23
    2a90:	a3 1c       	adc	r10, r3
    2a92:	57 1e       	adc	r5, r23
    2a94:	24 20       	and	r2, r4
    2a96:	0e 22       	and	r0, r30
    2a98:	14 24       	eor	r1, r4
    2a9a:	39 26       	eor	r3, r25
    2a9c:	7f 28       	or	r7, r15
    2a9e:	e8 2a       	or	r14, r24
    2aa0:	75 2d       	mov	r23, r5
    2aa2:	29 30       	cpi	r18, 0x09	; 9
    2aa4:	06 33       	cpi	r16, 0x36	; 54
    2aa6:	0f 36       	cpi	r16, 0x6F	; 111
    2aa8:	45 39       	cpi	r20, 0x95	; 149
    2aaa:	ad 3c       	cpi	r26, 0xCD	; 205
    2aac:	49 40       	sbci	r20, 0x09	; 9
    2aae:	1b 44       	sbci	r17, 0x4B	; 75
    2ab0:	28 48       	sbci	r18, 0x88	; 136
    2ab2:	73 4c       	sbci	r23, 0xC3	; 195
    2ab4:	fe 50       	subi	r31, 0x0E	; 14
    2ab6:	cf 55       	subi	r28, 0x5F	; 95
    2ab8:	ea 5a       	subi	r30, 0xAA	; 170
    2aba:	51 60       	ori	r21, 0x01	; 1
    2abc:	0c 66       	ori	r16, 0x6C	; 108
    2abe:	1d 6c       	ori	r17, 0xCD	; 205
    2ac0:	8b 72       	andi	r24, 0x2B	; 43
    2ac2:	5a 79       	andi	r21, 0x9A	; 154
    2ac4:	92 80       	ldd	r9, Z+2	; 0x02
    2ac6:	37 88       	ldd	r3, Z+23	; 0x17
    2ac8:	50 90 e5 98 	lds	r5, 0x98E5	; 0x8098e5 <__bss_end+0x8f1a>
    2acc:	fd a1       	ldd	r31, Y+37	; 0x25
    2ace:	9f ab       	std	Y+55, r25	; 0x37
    2ad0:	d3 b5       	in	r29, 0x23	; 35
    2ad2:	a3 c0       	rjmp	.+326    	; 0x2c1a <waves+0x11a>
	...

00002b00 <waves>:
    2b00:	00 03       	mulsu	r16, r16
    2b02:	06 09       	sbc	r16, r6
    2b04:	0c 10       	cpse	r0, r12
    2b06:	13 16       	cp	r1, r19
    2b08:	19 1c       	adc	r1, r9
    2b0a:	1f 22       	and	r1, r31
    2b0c:	25 28       	or	r2, r5
    2b0e:	2b 2e       	mov	r2, r27
    2b10:	31 33       	cpi	r19, 0x31	; 49
    2b12:	36 39       	cpi	r19, 0x96	; 150
    2b14:	3c 3f       	cpi	r19, 0xFC	; 252
    2b16:	41 44       	sbci	r20, 0x41	; 65
    2b18:	47 49       	sbci	r20, 0x97	; 151
    2b1a:	4c 4e       	sbci	r20, 0xEC	; 236
    2b1c:	51 53       	subi	r21, 0x31	; 49
    2b1e:	55 58       	subi	r21, 0x85	; 133
    2b20:	5a 5c       	subi	r21, 0xCA	; 202
    2b22:	5e 60       	ori	r21, 0x0E	; 14
    2b24:	62 64       	ori	r22, 0x42	; 66
    2b26:	66 68       	ori	r22, 0x86	; 134
    2b28:	6a 6b       	ori	r22, 0xBA	; 186
    2b2a:	6d 6f       	ori	r22, 0xFD	; 253
    2b2c:	70 71       	andi	r23, 0x10	; 16
    2b2e:	73 74       	andi	r23, 0x43	; 67
    2b30:	75 76       	andi	r23, 0x65	; 101
    2b32:	78 79       	andi	r23, 0x98	; 152
    2b34:	7a 7a       	andi	r23, 0xAA	; 170
    2b36:	7b 7c       	andi	r23, 0xCB	; 203
    2b38:	7d 7d       	andi	r23, 0xDD	; 221
    2b3a:	7e 7e       	andi	r23, 0xEE	; 238
    2b3c:	7e 7f       	andi	r23, 0xFE	; 254
    2b3e:	7f 7f       	andi	r23, 0xFF	; 255
    2b40:	7f 7f       	andi	r23, 0xFF	; 255
    2b42:	7f 7f       	andi	r23, 0xFF	; 255
    2b44:	7e 7e       	andi	r23, 0xEE	; 238
    2b46:	7e 7d       	andi	r23, 0xDE	; 222
    2b48:	7d 7c       	andi	r23, 0xCD	; 205
    2b4a:	7b 7a       	andi	r23, 0xAB	; 171
    2b4c:	7a 79       	andi	r23, 0x9A	; 154
    2b4e:	78 76       	andi	r23, 0x68	; 104
    2b50:	75 74       	andi	r23, 0x45	; 69
    2b52:	73 71       	andi	r23, 0x13	; 19
    2b54:	70 6f       	ori	r23, 0xF0	; 240
    2b56:	6d 6b       	ori	r22, 0xBD	; 189
    2b58:	6a 68       	ori	r22, 0x8A	; 138
    2b5a:	66 64       	ori	r22, 0x46	; 70
    2b5c:	62 60       	ori	r22, 0x02	; 2
    2b5e:	5e 5c       	subi	r21, 0xCE	; 206
    2b60:	5a 58       	subi	r21, 0x8A	; 138
    2b62:	55 53       	subi	r21, 0x35	; 53
    2b64:	51 4e       	sbci	r21, 0xE1	; 225
    2b66:	4c 49       	sbci	r20, 0x9C	; 156
    2b68:	47 44       	sbci	r20, 0x47	; 71
    2b6a:	41 3f       	cpi	r20, 0xF1	; 241
    2b6c:	3c 39       	cpi	r19, 0x9C	; 156
    2b6e:	36 33       	cpi	r19, 0x36	; 54
    2b70:	31 2e       	mov	r3, r17
    2b72:	2b 28       	or	r2, r11
    2b74:	25 22       	and	r2, r21
    2b76:	1f 1c       	adc	r1, r15
    2b78:	19 16       	cp	r1, r25
    2b7a:	13 10       	cpse	r1, r3
    2b7c:	0c 09       	sbc	r16, r12
    2b7e:	06 03       	mulsu	r16, r22
    2b80:	00 fd       	sbrc	r16, 0
    2b82:	fa f7       	brpl	.-2      	; 0x2b82 <waves+0x82>
    2b84:	f4 f0       	brlt	.+60     	; 0x2bc2 <waves+0xc2>
    2b86:	ed ea       	ldi	r30, 0xAD	; 173
    2b88:	e7 e4       	ldi	r30, 0x47	; 71
    2b8a:	e1 de       	rcall	.-574    	; 0x294e <TriggerNote+0x60>
    2b8c:	db d8       	rcall	.-3658   	; 0x1d44 <mode1_loop+0x10>
    2b8e:	d5 d2       	rcall	.+1450   	; 0x313a <waves+0x63a>
    2b90:	cf cd       	rjmp	.-1122   	; 0x2730 <ProcessMusic+0x2dc>
    2b92:	ca c7       	rjmp	.+3988   	; 0x3b28 <update+0x3f8>
    2b94:	c4 c1       	rjmp	.+904    	; 0x2f1e <waves+0x41e>
    2b96:	bf bc       	out	0x2f, r11	; 47
    2b98:	b9 b7       	in	r27, 0x39	; 57
    2b9a:	b4 b2       	in	r11, 0x14	; 20
    2b9c:	af ad       	ldd	r26, Y+63	; 0x3f
    2b9e:	ab a8       	ldd	r10, Y+51	; 0x33
    2ba0:	a6 a4       	ldd	r10, Z+46	; 0x2e
    2ba2:	a2 a0       	ldd	r10, Z+34	; 0x22
    2ba4:	9e 9c       	mul	r9, r14
    2ba6:	9a 98       	cbi	0x13, 2	; 19
    2ba8:	96 95       	lsr	r25
    2baa:	93 91       	.word	0x9193	; ????
    2bac:	90 8f       	std	Z+24, r25	; 0x18
    2bae:	8d 8c       	ldd	r8, Y+29	; 0x1d
    2bb0:	8b 8a       	std	Y+19, r8	; 0x13
    2bb2:	88 87       	std	Y+8, r24	; 0x08
    2bb4:	86 86       	std	Z+14, r8	; 0x0e
    2bb6:	85 84       	ldd	r8, Z+13	; 0x0d
    2bb8:	83 83       	std	Z+3, r24	; 0x03
    2bba:	82 82       	std	Z+2, r8	; 0x02
    2bbc:	82 81       	ldd	r24, Z+2	; 0x02
    2bbe:	81 81       	ldd	r24, Z+1	; 0x01
    2bc0:	81 81       	ldd	r24, Z+1	; 0x01
    2bc2:	81 81       	ldd	r24, Z+1	; 0x01
    2bc4:	82 82       	std	Z+2, r8	; 0x02
    2bc6:	82 83       	std	Z+2, r24	; 0x02
    2bc8:	83 84       	ldd	r8, Z+11	; 0x0b
    2bca:	85 86       	std	Z+13, r8	; 0x0d
    2bcc:	86 87       	std	Z+14, r24	; 0x0e
    2bce:	88 8a       	std	Y+16, r8	; 0x10
    2bd0:	8b 8c       	ldd	r8, Y+27	; 0x1b
    2bd2:	8d 8f       	std	Y+29, r24	; 0x1d
    2bd4:	90 91 93 95 	lds	r25, 0x9593	; 0x809593 <__bss_end+0x8bc8>
    2bd8:	96 98       	cbi	0x12, 6	; 18
    2bda:	9a 9c       	mul	r9, r10
    2bdc:	9e a0       	ldd	r9, Y+38	; 0x26
    2bde:	a2 a4       	ldd	r10, Z+42	; 0x2a
    2be0:	a6 a8       	ldd	r10, Z+54	; 0x36
    2be2:	ab ad       	ldd	r26, Y+59	; 0x3b
    2be4:	af b2       	in	r10, 0x1f	; 31
    2be6:	b4 b7       	in	r27, 0x34	; 52
    2be8:	b9 bc       	out	0x29, r11	; 41
    2bea:	bf c1       	rjmp	.+894    	; 0x2f6a <waves+0x46a>
    2bec:	c4 c7       	rjmp	.+3976   	; 0x3b76 <update+0x446>
    2bee:	ca cd       	rjmp	.-1132   	; 0x2784 <ProcessMusic+0x330>
    2bf0:	cf d2       	rcall	.+1438   	; 0x3190 <waves+0x690>
    2bf2:	d5 d8       	rcall	.-3670   	; 0x1d9e <__vector_13+0x3a>
    2bf4:	db de       	rcall	.-586    	; 0x29ac <SetMixerWave+0x10>
    2bf6:	e1 e4       	ldi	r30, 0x41	; 65
    2bf8:	e7 ea       	ldi	r30, 0xA7	; 167
    2bfa:	ed f0       	brhs	.+58     	; 0x2c36 <waves+0x136>
    2bfc:	f4 f7       	brge	.-4      	; 0x2bfa <waves+0xfa>
    2bfe:	fa fd       	.word	0xfdfa	; ????
    2c00:	80 81       	ld	r24, Z
    2c02:	82 83       	std	Z+2, r24	; 0x02
    2c04:	84 85       	ldd	r24, Z+12	; 0x0c
    2c06:	86 87       	std	Z+14, r24	; 0x0e
    2c08:	88 89       	ldd	r24, Y+16	; 0x10
    2c0a:	8a 8b       	std	Y+18, r24	; 0x12
    2c0c:	8c 8d       	ldd	r24, Y+28	; 0x1c
    2c0e:	8e 8f       	std	Y+30, r24	; 0x1e
    2c10:	90 91 92 93 	lds	r25, 0x9392	; 0x809392 <__bss_end+0x89c7>
    2c14:	94 95       	.word	0x9594	; ????
    2c16:	96 97       	sbiw	r26, 0x26	; 38
    2c18:	98 99       	sbic	0x13, 0	; 19
    2c1a:	9a 9b       	sbis	0x13, 2	; 19
    2c1c:	9c 9d       	mul	r25, r12
    2c1e:	9e 9f       	mul	r25, r30
    2c20:	a0 a1       	ldd	r26, Z+32	; 0x20
    2c22:	a2 a3       	std	Z+34, r26	; 0x22
    2c24:	a4 a5       	ldd	r26, Z+44	; 0x2c
    2c26:	a6 a7       	std	Z+46, r26	; 0x2e
    2c28:	a8 a9       	ldd	r26, Y+48	; 0x30
    2c2a:	aa ab       	std	Y+50, r26	; 0x32
    2c2c:	ac ad       	ldd	r26, Y+60	; 0x3c
    2c2e:	ae af       	std	Y+62, r26	; 0x3e
    2c30:	b0 b1       	in	r27, 0x00	; 0
    2c32:	b2 b3       	in	r27, 0x12	; 18
    2c34:	b4 b5       	in	r27, 0x24	; 36
    2c36:	b6 b7       	in	r27, 0x36	; 54
    2c38:	b8 b9       	out	0x08, r27	; 8
    2c3a:	ba bb       	out	0x1a, r27	; 26
    2c3c:	bc bd       	out	0x2c, r27	; 44
    2c3e:	be bf       	out	0x3e, r27	; 62
    2c40:	c0 c1       	rjmp	.+896    	; 0x2fc2 <waves+0x4c2>
    2c42:	c2 c3       	rjmp	.+1924   	; 0x33c8 <waves+0x8c8>
    2c44:	c4 c5       	rjmp	.+2952   	; 0x37ce <update+0x9e>
    2c46:	c6 c7       	rjmp	.+3980   	; 0x3bd4 <update+0x4a4>
    2c48:	c8 c9       	rjmp	.-3184   	; 0x1fda <end_set_bank+0x82>
    2c4a:	ca cb       	rjmp	.-2156   	; 0x23e0 <PatchCommand11+0x62>
    2c4c:	cc cd       	rjmp	.-1128   	; 0x27e6 <ProcessMusic+0x392>
    2c4e:	ce cf       	rjmp	.-100    	; 0x2bec <waves+0xec>
    2c50:	d0 d1       	rcall	.+928    	; 0x2ff2 <waves+0x4f2>
    2c52:	d2 d3       	rcall	.+1956   	; 0x33f8 <waves+0x8f8>
    2c54:	d4 d5       	rcall	.+2984   	; 0x37fe <update+0xce>
    2c56:	d6 d7       	rcall	.+4012   	; 0x3c04 <update+0x4d4>
    2c58:	d8 d9       	rcall	.-3152   	; 0x200a <mix_loop+0x1e>
    2c5a:	da db       	rcall	.-2124   	; 0x2410 <PatchCommand14+0x10>
    2c5c:	dc dd       	rcall	.-1096   	; 0x2816 <ReadVarLen+0x10>
    2c5e:	de df       	rcall	.-68     	; 0x2c1c <waves+0x11c>
    2c60:	e0 e1       	ldi	r30, 0x10	; 16
    2c62:	e2 e3       	ldi	r30, 0x32	; 50
    2c64:	e4 e5       	ldi	r30, 0x54	; 84
    2c66:	e6 e7       	ldi	r30, 0x76	; 118
    2c68:	e8 e9       	ldi	r30, 0x98	; 152
    2c6a:	ea eb       	ldi	r30, 0xBA	; 186
    2c6c:	ec ed       	ldi	r30, 0xDC	; 220
    2c6e:	ee ef       	ldi	r30, 0xFE	; 254
    2c70:	f0 f1       	brcs	.+124    	; 0x2cee <waves+0x1ee>
    2c72:	f2 f3       	brmi	.-4      	; 0x2c70 <waves+0x170>
    2c74:	f4 f5       	brge	.+124    	; 0x2cf2 <waves+0x1f2>
    2c76:	f6 f7       	brtc	.-4      	; 0x2c74 <waves+0x174>
    2c78:	f8 f9       	.word	0xf9f8	; ????
    2c7a:	fa fb       	.word	0xfbfa	; ????
    2c7c:	fc fd       	.word	0xfdfc	; ????
    2c7e:	fe ff       	.word	0xfffe	; ????
    2c80:	00 01       	movw	r0, r0
    2c82:	02 03       	mulsu	r16, r18
    2c84:	04 05       	cpc	r16, r4
    2c86:	06 07       	cpc	r16, r22
    2c88:	08 09       	sbc	r16, r8
    2c8a:	0a 0b       	sbc	r16, r26
    2c8c:	0c 0d       	add	r16, r12
    2c8e:	0e 0f       	add	r16, r30
    2c90:	10 11       	cpse	r17, r0
    2c92:	12 13       	cpse	r17, r18
    2c94:	14 15       	cp	r17, r4
    2c96:	16 17       	cp	r17, r22
    2c98:	18 19       	sub	r17, r8
    2c9a:	1a 1b       	sub	r17, r26
    2c9c:	1c 1d       	adc	r17, r12
    2c9e:	1e 1f       	adc	r17, r30
    2ca0:	20 21       	and	r18, r0
    2ca2:	22 23       	and	r18, r18
    2ca4:	24 25       	eor	r18, r4
    2ca6:	26 27       	eor	r18, r22
    2ca8:	28 29       	or	r18, r8
    2caa:	2a 2b       	or	r18, r26
    2cac:	2c 2d       	mov	r18, r12
    2cae:	2e 2f       	mov	r18, r30
    2cb0:	30 31       	cpi	r19, 0x10	; 16
    2cb2:	32 33       	cpi	r19, 0x32	; 50
    2cb4:	34 35       	cpi	r19, 0x54	; 84
    2cb6:	36 37       	cpi	r19, 0x76	; 118
    2cb8:	38 39       	cpi	r19, 0x98	; 152
    2cba:	3a 3b       	cpi	r19, 0xBA	; 186
    2cbc:	3c 3d       	cpi	r19, 0xDC	; 220
    2cbe:	3e 3f       	cpi	r19, 0xFE	; 254
    2cc0:	40 41       	sbci	r20, 0x10	; 16
    2cc2:	42 43       	sbci	r20, 0x32	; 50
    2cc4:	44 45       	sbci	r20, 0x54	; 84
    2cc6:	46 47       	sbci	r20, 0x76	; 118
    2cc8:	48 49       	sbci	r20, 0x98	; 152
    2cca:	4a 4b       	sbci	r20, 0xBA	; 186
    2ccc:	4c 4d       	sbci	r20, 0xDC	; 220
    2cce:	4e 4f       	sbci	r20, 0xFE	; 254
    2cd0:	50 51       	subi	r21, 0x10	; 16
    2cd2:	52 53       	subi	r21, 0x32	; 50
    2cd4:	54 55       	subi	r21, 0x54	; 84
    2cd6:	56 57       	subi	r21, 0x76	; 118
    2cd8:	58 59       	subi	r21, 0x98	; 152
    2cda:	5a 5b       	subi	r21, 0xBA	; 186
    2cdc:	5c 5d       	subi	r21, 0xDC	; 220
    2cde:	5e 5f       	subi	r21, 0xFE	; 254
    2ce0:	60 61       	ori	r22, 0x10	; 16
    2ce2:	62 63       	ori	r22, 0x32	; 50
    2ce4:	64 65       	ori	r22, 0x54	; 84
    2ce6:	66 67       	ori	r22, 0x76	; 118
    2ce8:	68 69       	ori	r22, 0x98	; 152
    2cea:	6a 6b       	ori	r22, 0xBA	; 186
    2cec:	6c 6d       	ori	r22, 0xDC	; 220
    2cee:	6e 6f       	ori	r22, 0xFE	; 254
    2cf0:	70 71       	andi	r23, 0x10	; 16
    2cf2:	72 73       	andi	r23, 0x32	; 50
    2cf4:	74 75       	andi	r23, 0x54	; 84
    2cf6:	76 77       	andi	r23, 0x76	; 118
    2cf8:	78 79       	andi	r23, 0x98	; 152
    2cfa:	7a 7b       	andi	r23, 0xBA	; 186
    2cfc:	7c 7d       	andi	r23, 0xDC	; 220
    2cfe:	7e 7f       	andi	r23, 0xFE	; 254
    2d00:	00 02       	muls	r16, r16
    2d02:	04 06       	cpc	r0, r20
    2d04:	08 0a       	sbc	r0, r24
    2d06:	0c 0e       	add	r0, r28
    2d08:	10 12       	cpse	r1, r16
    2d0a:	14 16       	cp	r1, r20
    2d0c:	18 1a       	sub	r1, r24
    2d0e:	1c 1e       	adc	r1, r28
    2d10:	20 22       	and	r2, r16
    2d12:	24 26       	eor	r2, r20
    2d14:	28 2a       	or	r2, r24
    2d16:	2c 2e       	mov	r2, r28
    2d18:	30 32       	cpi	r19, 0x20	; 32
    2d1a:	34 36       	cpi	r19, 0x64	; 100
    2d1c:	38 3a       	cpi	r19, 0xA8	; 168
    2d1e:	3c 3e       	cpi	r19, 0xEC	; 236
    2d20:	40 42       	sbci	r20, 0x20	; 32
    2d22:	44 46       	sbci	r20, 0x64	; 100
    2d24:	48 4a       	sbci	r20, 0xA8	; 168
    2d26:	4c 4e       	sbci	r20, 0xEC	; 236
    2d28:	50 52       	subi	r21, 0x20	; 32
    2d2a:	54 56       	subi	r21, 0x64	; 100
    2d2c:	58 5a       	subi	r21, 0xA8	; 168
    2d2e:	5c 5e       	subi	r21, 0xEC	; 236
    2d30:	60 62       	ori	r22, 0x20	; 32
    2d32:	64 66       	ori	r22, 0x64	; 100
    2d34:	68 6a       	ori	r22, 0xA8	; 168
    2d36:	6c 6e       	ori	r22, 0xEC	; 236
    2d38:	70 72       	andi	r23, 0x20	; 32
    2d3a:	74 76       	andi	r23, 0x64	; 100
    2d3c:	78 7a       	andi	r23, 0xA8	; 168
    2d3e:	7c 7e       	andi	r23, 0xEC	; 236
    2d40:	7f 7d       	andi	r23, 0xDF	; 223
    2d42:	7b 79       	andi	r23, 0x9B	; 155
    2d44:	77 75       	andi	r23, 0x57	; 87
    2d46:	73 71       	andi	r23, 0x13	; 19
    2d48:	6f 6d       	ori	r22, 0xDF	; 223
    2d4a:	6b 69       	ori	r22, 0x9B	; 155
    2d4c:	67 65       	ori	r22, 0x57	; 87
    2d4e:	63 61       	ori	r22, 0x13	; 19
    2d50:	5f 5d       	subi	r21, 0xDF	; 223
    2d52:	5b 59       	subi	r21, 0x9B	; 155
    2d54:	57 55       	subi	r21, 0x57	; 87
    2d56:	53 51       	subi	r21, 0x13	; 19
    2d58:	4f 4d       	sbci	r20, 0xDF	; 223
    2d5a:	4b 49       	sbci	r20, 0x9B	; 155
    2d5c:	47 45       	sbci	r20, 0x57	; 87
    2d5e:	43 41       	sbci	r20, 0x13	; 19
    2d60:	3f 3d       	cpi	r19, 0xDF	; 223
    2d62:	3b 39       	cpi	r19, 0x9B	; 155
    2d64:	37 35       	cpi	r19, 0x57	; 87
    2d66:	33 31       	cpi	r19, 0x13	; 19
    2d68:	2f 2d       	mov	r18, r15
    2d6a:	2b 29       	or	r18, r11
    2d6c:	27 25       	eor	r18, r7
    2d6e:	23 21       	and	r18, r3
    2d70:	1f 1d       	adc	r17, r15
    2d72:	1b 19       	sub	r17, r11
    2d74:	17 15       	cp	r17, r7
    2d76:	13 11       	cpse	r17, r3
    2d78:	0f 0d       	add	r16, r15
    2d7a:	0b 09       	sbc	r16, r11
    2d7c:	07 05       	cpc	r16, r7
    2d7e:	03 01       	movw	r0, r6
    2d80:	ff fd       	.word	0xfdff	; ????
    2d82:	fb f9       	.word	0xf9fb	; ????
    2d84:	f7 f5       	brid	.+124    	; 0x2e02 <waves+0x302>
    2d86:	f3 f1       	brvs	.+124    	; 0x2e04 <waves+0x304>
    2d88:	ef ed       	ldi	r30, 0xDF	; 223
    2d8a:	eb e9       	ldi	r30, 0x9B	; 155
    2d8c:	e7 e5       	ldi	r30, 0x57	; 87
    2d8e:	e3 e1       	ldi	r30, 0x13	; 19
    2d90:	df dd       	rcall	.-1090   	; 0x2950 <TriggerNote+0x62>
    2d92:	db d9       	rcall	.-3146   	; 0x214a <ClearVram+0xc>
    2d94:	d7 d5       	rcall	.+2990   	; 0x3944 <update+0x214>
    2d96:	d3 d1       	rcall	.+934    	; 0x313e <waves+0x63e>
    2d98:	cf cd       	rjmp	.-1122   	; 0x2938 <TriggerNote+0x4a>
    2d9a:	cb c9       	rjmp	.-3178   	; 0x2132 <update_sound+0x4a>
    2d9c:	c7 c5       	rjmp	.+2958   	; 0x392c <update+0x1fc>
    2d9e:	c3 c1       	rjmp	.+902    	; 0x3126 <waves+0x626>
    2da0:	bf bd       	out	0x2f, r27	; 47
    2da2:	bb b9       	out	0x0b, r27	; 11
    2da4:	b7 b5       	in	r27, 0x27	; 39
    2da6:	b3 b1       	in	r27, 0x03	; 3
    2da8:	af ad       	ldd	r26, Y+63	; 0x3f
    2daa:	ab a9       	ldd	r26, Y+51	; 0x33
    2dac:	a7 a5       	ldd	r26, Z+47	; 0x2f
    2dae:	a3 a1       	ldd	r26, Z+35	; 0x23
    2db0:	9f 9d       	mul	r25, r15
    2db2:	9b 99       	sbic	0x13, 3	; 19
    2db4:	97 95       	ror	r25
    2db6:	93 91       	.word	0x9193	; ????
    2db8:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2dba:	8b 89       	ldd	r24, Y+19	; 0x13
    2dbc:	87 85       	ldd	r24, Z+15	; 0x0f
    2dbe:	83 81       	ldd	r24, Z+3	; 0x03
    2dc0:	80 82       	st	Z, r8
    2dc2:	84 86       	std	Z+12, r8	; 0x0c
    2dc4:	88 8a       	std	Y+16, r8	; 0x10
    2dc6:	8c 8e       	std	Y+28, r8	; 0x1c
    2dc8:	90 92 94 96 	sts	0x9694, r9	; 0x809694 <__bss_end+0x8cc9>
    2dcc:	98 9a       	sbi	0x13, 0	; 19
    2dce:	9c 9e       	mul	r9, r28
    2dd0:	a0 a2       	std	Z+32, r10	; 0x20
    2dd2:	a4 a6       	std	Z+44, r10	; 0x2c
    2dd4:	a8 aa       	std	Y+48, r10	; 0x30
    2dd6:	ac ae       	std	Y+60, r10	; 0x3c
    2dd8:	b0 b2       	in	r11, 0x10	; 16
    2dda:	b4 b6       	in	r11, 0x34	; 52
    2ddc:	b8 ba       	out	0x18, r11	; 24
    2dde:	bc be       	out	0x3c, r11	; 60
    2de0:	c0 c2       	rjmp	.+1408   	; 0x3362 <waves+0x862>
    2de2:	c4 c6       	rjmp	.+3464   	; 0x3b6c <update+0x43c>
    2de4:	c8 ca       	rjmp	.-2672   	; 0x2376 <PatchCommand09+0x4>
    2de6:	cc ce       	rjmp	.-616    	; 0x2b80 <waves+0x80>
    2de8:	d0 d2       	rcall	.+1440   	; 0x338a <waves+0x88a>
    2dea:	d4 d6       	rcall	.+3496   	; 0x3b94 <update+0x464>
    2dec:	d8 da       	rcall	.-2640   	; 0x239e <PatchCommand11+0x20>
    2dee:	dc de       	rcall	.-584    	; 0x2ba8 <waves+0xa8>
    2df0:	e0 e2       	ldi	r30, 0x20	; 32
    2df2:	e4 e6       	ldi	r30, 0x64	; 100
    2df4:	e8 ea       	ldi	r30, 0xA8	; 168
    2df6:	ec ee       	ldi	r30, 0xEC	; 236
    2df8:	f0 f2       	brcs	.-68     	; 0x2db6 <waves+0x2b6>
    2dfa:	f4 f6       	brge	.-68     	; 0x2db8 <waves+0x2b8>
    2dfc:	f8 fa       	.word	0xfaf8	; ????
    2dfe:	fc fe       	.word	0xfefc	; ????
    2e00:	7f 7f       	andi	r23, 0xFF	; 255
    2e02:	7f 7f       	andi	r23, 0xFF	; 255
    2e04:	7f 7f       	andi	r23, 0xFF	; 255
    2e06:	7f 7f       	andi	r23, 0xFF	; 255
    2e08:	7f 7f       	andi	r23, 0xFF	; 255
    2e0a:	7f 7f       	andi	r23, 0xFF	; 255
    2e0c:	7f 7f       	andi	r23, 0xFF	; 255
    2e0e:	7f 7f       	andi	r23, 0xFF	; 255
    2e10:	7f 7f       	andi	r23, 0xFF	; 255
    2e12:	7f 7f       	andi	r23, 0xFF	; 255
    2e14:	7f 7f       	andi	r23, 0xFF	; 255
    2e16:	7f 7f       	andi	r23, 0xFF	; 255
    2e18:	7f 7f       	andi	r23, 0xFF	; 255
    2e1a:	7f 7f       	andi	r23, 0xFF	; 255
    2e1c:	7f 7f       	andi	r23, 0xFF	; 255
    2e1e:	7f 7f       	andi	r23, 0xFF	; 255
    2e20:	7f 7f       	andi	r23, 0xFF	; 255
    2e22:	7f 7f       	andi	r23, 0xFF	; 255
    2e24:	7f 7f       	andi	r23, 0xFF	; 255
    2e26:	7f 7f       	andi	r23, 0xFF	; 255
    2e28:	7f 7f       	andi	r23, 0xFF	; 255
    2e2a:	7f 7f       	andi	r23, 0xFF	; 255
    2e2c:	7f 7f       	andi	r23, 0xFF	; 255
    2e2e:	7f 7f       	andi	r23, 0xFF	; 255
    2e30:	7f 7f       	andi	r23, 0xFF	; 255
    2e32:	7f 7f       	andi	r23, 0xFF	; 255
    2e34:	7f 7f       	andi	r23, 0xFF	; 255
    2e36:	7f 7f       	andi	r23, 0xFF	; 255
    2e38:	7f 7f       	andi	r23, 0xFF	; 255
    2e3a:	7f 7f       	andi	r23, 0xFF	; 255
    2e3c:	7f 7f       	andi	r23, 0xFF	; 255
    2e3e:	7f 7f       	andi	r23, 0xFF	; 255
    2e40:	80 80       	ld	r8, Z
    2e42:	80 80       	ld	r8, Z
    2e44:	80 80       	ld	r8, Z
    2e46:	80 80       	ld	r8, Z
    2e48:	80 80       	ld	r8, Z
    2e4a:	80 80       	ld	r8, Z
    2e4c:	80 80       	ld	r8, Z
    2e4e:	80 80       	ld	r8, Z
    2e50:	80 80       	ld	r8, Z
    2e52:	80 80       	ld	r8, Z
    2e54:	80 80       	ld	r8, Z
    2e56:	80 80       	ld	r8, Z
    2e58:	80 80       	ld	r8, Z
    2e5a:	80 80       	ld	r8, Z
    2e5c:	80 80       	ld	r8, Z
    2e5e:	80 80       	ld	r8, Z
    2e60:	80 80       	ld	r8, Z
    2e62:	80 80       	ld	r8, Z
    2e64:	80 80       	ld	r8, Z
    2e66:	80 80       	ld	r8, Z
    2e68:	80 80       	ld	r8, Z
    2e6a:	80 80       	ld	r8, Z
    2e6c:	80 80       	ld	r8, Z
    2e6e:	80 80       	ld	r8, Z
    2e70:	80 80       	ld	r8, Z
    2e72:	80 80       	ld	r8, Z
    2e74:	80 80       	ld	r8, Z
    2e76:	80 80       	ld	r8, Z
    2e78:	80 80       	ld	r8, Z
    2e7a:	80 80       	ld	r8, Z
    2e7c:	80 80       	ld	r8, Z
    2e7e:	80 80       	ld	r8, Z
    2e80:	80 80       	ld	r8, Z
    2e82:	80 80       	ld	r8, Z
    2e84:	80 80       	ld	r8, Z
    2e86:	80 80       	ld	r8, Z
    2e88:	80 80       	ld	r8, Z
    2e8a:	80 80       	ld	r8, Z
    2e8c:	80 80       	ld	r8, Z
    2e8e:	80 80       	ld	r8, Z
    2e90:	80 80       	ld	r8, Z
    2e92:	80 80       	ld	r8, Z
    2e94:	80 80       	ld	r8, Z
    2e96:	80 80       	ld	r8, Z
    2e98:	80 80       	ld	r8, Z
    2e9a:	80 80       	ld	r8, Z
    2e9c:	80 80       	ld	r8, Z
    2e9e:	80 80       	ld	r8, Z
    2ea0:	80 80       	ld	r8, Z
    2ea2:	80 80       	ld	r8, Z
    2ea4:	80 80       	ld	r8, Z
    2ea6:	80 80       	ld	r8, Z
    2ea8:	80 80       	ld	r8, Z
    2eaa:	80 80       	ld	r8, Z
    2eac:	80 80       	ld	r8, Z
    2eae:	80 80       	ld	r8, Z
    2eb0:	80 80       	ld	r8, Z
    2eb2:	80 80       	ld	r8, Z
    2eb4:	80 80       	ld	r8, Z
    2eb6:	80 80       	ld	r8, Z
    2eb8:	80 80       	ld	r8, Z
    2eba:	80 80       	ld	r8, Z
    2ebc:	80 80       	ld	r8, Z
    2ebe:	80 80       	ld	r8, Z
    2ec0:	80 80       	ld	r8, Z
    2ec2:	80 80       	ld	r8, Z
    2ec4:	80 80       	ld	r8, Z
    2ec6:	80 80       	ld	r8, Z
    2ec8:	80 80       	ld	r8, Z
    2eca:	80 80       	ld	r8, Z
    2ecc:	80 80       	ld	r8, Z
    2ece:	80 80       	ld	r8, Z
    2ed0:	80 80       	ld	r8, Z
    2ed2:	80 80       	ld	r8, Z
    2ed4:	80 80       	ld	r8, Z
    2ed6:	80 80       	ld	r8, Z
    2ed8:	80 80       	ld	r8, Z
    2eda:	80 80       	ld	r8, Z
    2edc:	80 80       	ld	r8, Z
    2ede:	80 80       	ld	r8, Z
    2ee0:	80 80       	ld	r8, Z
    2ee2:	80 80       	ld	r8, Z
    2ee4:	80 80       	ld	r8, Z
    2ee6:	80 80       	ld	r8, Z
    2ee8:	80 80       	ld	r8, Z
    2eea:	80 80       	ld	r8, Z
    2eec:	80 80       	ld	r8, Z
    2eee:	80 80       	ld	r8, Z
    2ef0:	80 80       	ld	r8, Z
    2ef2:	80 80       	ld	r8, Z
    2ef4:	80 80       	ld	r8, Z
    2ef6:	80 80       	ld	r8, Z
    2ef8:	80 80       	ld	r8, Z
    2efa:	80 80       	ld	r8, Z
    2efc:	80 80       	ld	r8, Z
    2efe:	80 80       	ld	r8, Z
    2f00:	7f 7f       	andi	r23, 0xFF	; 255
    2f02:	7f 7f       	andi	r23, 0xFF	; 255
    2f04:	7f 7f       	andi	r23, 0xFF	; 255
    2f06:	7f 7f       	andi	r23, 0xFF	; 255
    2f08:	7f 7f       	andi	r23, 0xFF	; 255
    2f0a:	7f 7f       	andi	r23, 0xFF	; 255
    2f0c:	7f 7f       	andi	r23, 0xFF	; 255
    2f0e:	7f 7f       	andi	r23, 0xFF	; 255
    2f10:	7f 7f       	andi	r23, 0xFF	; 255
    2f12:	7f 7f       	andi	r23, 0xFF	; 255
    2f14:	7f 7f       	andi	r23, 0xFF	; 255
    2f16:	7f 7f       	andi	r23, 0xFF	; 255
    2f18:	7f 7f       	andi	r23, 0xFF	; 255
    2f1a:	7f 7f       	andi	r23, 0xFF	; 255
    2f1c:	7f 7f       	andi	r23, 0xFF	; 255
    2f1e:	7f 7f       	andi	r23, 0xFF	; 255
    2f20:	7f 7f       	andi	r23, 0xFF	; 255
    2f22:	7f 7f       	andi	r23, 0xFF	; 255
    2f24:	7f 7f       	andi	r23, 0xFF	; 255
    2f26:	7f 7f       	andi	r23, 0xFF	; 255
    2f28:	7f 7f       	andi	r23, 0xFF	; 255
    2f2a:	7f 7f       	andi	r23, 0xFF	; 255
    2f2c:	7f 7f       	andi	r23, 0xFF	; 255
    2f2e:	7f 7f       	andi	r23, 0xFF	; 255
    2f30:	7f 7f       	andi	r23, 0xFF	; 255
    2f32:	7f 7f       	andi	r23, 0xFF	; 255
    2f34:	7f 7f       	andi	r23, 0xFF	; 255
    2f36:	7f 7f       	andi	r23, 0xFF	; 255
    2f38:	7f 7f       	andi	r23, 0xFF	; 255
    2f3a:	7f 7f       	andi	r23, 0xFF	; 255
    2f3c:	7f 7f       	andi	r23, 0xFF	; 255
    2f3e:	7f 7f       	andi	r23, 0xFF	; 255
    2f40:	7f 7f       	andi	r23, 0xFF	; 255
    2f42:	7f 7f       	andi	r23, 0xFF	; 255
    2f44:	7f 7f       	andi	r23, 0xFF	; 255
    2f46:	7f 7f       	andi	r23, 0xFF	; 255
    2f48:	7f 7f       	andi	r23, 0xFF	; 255
    2f4a:	7f 7f       	andi	r23, 0xFF	; 255
    2f4c:	7f 7f       	andi	r23, 0xFF	; 255
    2f4e:	7f 7f       	andi	r23, 0xFF	; 255
    2f50:	7f 7f       	andi	r23, 0xFF	; 255
    2f52:	7f 7f       	andi	r23, 0xFF	; 255
    2f54:	7f 7f       	andi	r23, 0xFF	; 255
    2f56:	7f 7f       	andi	r23, 0xFF	; 255
    2f58:	7f 7f       	andi	r23, 0xFF	; 255
    2f5a:	7f 7f       	andi	r23, 0xFF	; 255
    2f5c:	7f 7f       	andi	r23, 0xFF	; 255
    2f5e:	7f 7f       	andi	r23, 0xFF	; 255
    2f60:	7f 7f       	andi	r23, 0xFF	; 255
    2f62:	7f 7f       	andi	r23, 0xFF	; 255
    2f64:	7f 7f       	andi	r23, 0xFF	; 255
    2f66:	7f 7f       	andi	r23, 0xFF	; 255
    2f68:	7f 7f       	andi	r23, 0xFF	; 255
    2f6a:	7f 7f       	andi	r23, 0xFF	; 255
    2f6c:	7f 7f       	andi	r23, 0xFF	; 255
    2f6e:	7f 7f       	andi	r23, 0xFF	; 255
    2f70:	7f 7f       	andi	r23, 0xFF	; 255
    2f72:	7f 7f       	andi	r23, 0xFF	; 255
    2f74:	7f 7f       	andi	r23, 0xFF	; 255
    2f76:	7f 7f       	andi	r23, 0xFF	; 255
    2f78:	7f 7f       	andi	r23, 0xFF	; 255
    2f7a:	7f 7f       	andi	r23, 0xFF	; 255
    2f7c:	7f 7f       	andi	r23, 0xFF	; 255
    2f7e:	7f 7f       	andi	r23, 0xFF	; 255
    2f80:	80 80       	ld	r8, Z
    2f82:	80 80       	ld	r8, Z
    2f84:	80 80       	ld	r8, Z
    2f86:	80 80       	ld	r8, Z
    2f88:	80 80       	ld	r8, Z
    2f8a:	80 80       	ld	r8, Z
    2f8c:	80 80       	ld	r8, Z
    2f8e:	80 80       	ld	r8, Z
    2f90:	80 80       	ld	r8, Z
    2f92:	80 80       	ld	r8, Z
    2f94:	80 80       	ld	r8, Z
    2f96:	80 80       	ld	r8, Z
    2f98:	80 80       	ld	r8, Z
    2f9a:	80 80       	ld	r8, Z
    2f9c:	80 80       	ld	r8, Z
    2f9e:	80 80       	ld	r8, Z
    2fa0:	80 80       	ld	r8, Z
    2fa2:	80 80       	ld	r8, Z
    2fa4:	80 80       	ld	r8, Z
    2fa6:	80 80       	ld	r8, Z
    2fa8:	80 80       	ld	r8, Z
    2faa:	80 80       	ld	r8, Z
    2fac:	80 80       	ld	r8, Z
    2fae:	80 80       	ld	r8, Z
    2fb0:	80 80       	ld	r8, Z
    2fb2:	80 80       	ld	r8, Z
    2fb4:	80 80       	ld	r8, Z
    2fb6:	80 80       	ld	r8, Z
    2fb8:	80 80       	ld	r8, Z
    2fba:	80 80       	ld	r8, Z
    2fbc:	80 80       	ld	r8, Z
    2fbe:	80 80       	ld	r8, Z
    2fc0:	80 80       	ld	r8, Z
    2fc2:	80 80       	ld	r8, Z
    2fc4:	80 80       	ld	r8, Z
    2fc6:	80 80       	ld	r8, Z
    2fc8:	80 80       	ld	r8, Z
    2fca:	80 80       	ld	r8, Z
    2fcc:	80 80       	ld	r8, Z
    2fce:	80 80       	ld	r8, Z
    2fd0:	80 80       	ld	r8, Z
    2fd2:	80 80       	ld	r8, Z
    2fd4:	80 80       	ld	r8, Z
    2fd6:	80 80       	ld	r8, Z
    2fd8:	80 80       	ld	r8, Z
    2fda:	80 80       	ld	r8, Z
    2fdc:	80 80       	ld	r8, Z
    2fde:	80 80       	ld	r8, Z
    2fe0:	80 80       	ld	r8, Z
    2fe2:	80 80       	ld	r8, Z
    2fe4:	80 80       	ld	r8, Z
    2fe6:	80 80       	ld	r8, Z
    2fe8:	80 80       	ld	r8, Z
    2fea:	80 80       	ld	r8, Z
    2fec:	80 80       	ld	r8, Z
    2fee:	80 80       	ld	r8, Z
    2ff0:	80 80       	ld	r8, Z
    2ff2:	80 80       	ld	r8, Z
    2ff4:	80 80       	ld	r8, Z
    2ff6:	80 80       	ld	r8, Z
    2ff8:	80 80       	ld	r8, Z
    2ffa:	80 80       	ld	r8, Z
    2ffc:	80 80       	ld	r8, Z
    2ffe:	80 80       	ld	r8, Z
    3000:	7f 7f       	andi	r23, 0xFF	; 255
    3002:	7f 7f       	andi	r23, 0xFF	; 255
    3004:	7f 7f       	andi	r23, 0xFF	; 255
    3006:	7f 7f       	andi	r23, 0xFF	; 255
    3008:	7f 7f       	andi	r23, 0xFF	; 255
    300a:	7f 7f       	andi	r23, 0xFF	; 255
    300c:	7f 7f       	andi	r23, 0xFF	; 255
    300e:	7f 7f       	andi	r23, 0xFF	; 255
    3010:	7f 7f       	andi	r23, 0xFF	; 255
    3012:	7f 7f       	andi	r23, 0xFF	; 255
    3014:	7f 7f       	andi	r23, 0xFF	; 255
    3016:	7f 7f       	andi	r23, 0xFF	; 255
    3018:	7f 7f       	andi	r23, 0xFF	; 255
    301a:	7f 7f       	andi	r23, 0xFF	; 255
    301c:	7f 7f       	andi	r23, 0xFF	; 255
    301e:	7f 7f       	andi	r23, 0xFF	; 255
    3020:	7f 7f       	andi	r23, 0xFF	; 255
    3022:	7f 7f       	andi	r23, 0xFF	; 255
    3024:	7f 7f       	andi	r23, 0xFF	; 255
    3026:	7f 7f       	andi	r23, 0xFF	; 255
    3028:	7f 7f       	andi	r23, 0xFF	; 255
    302a:	7f 7f       	andi	r23, 0xFF	; 255
    302c:	7f 7f       	andi	r23, 0xFF	; 255
    302e:	7f 7f       	andi	r23, 0xFF	; 255
    3030:	7f 7f       	andi	r23, 0xFF	; 255
    3032:	7f 7f       	andi	r23, 0xFF	; 255
    3034:	7f 7f       	andi	r23, 0xFF	; 255
    3036:	7f 7f       	andi	r23, 0xFF	; 255
    3038:	7f 7f       	andi	r23, 0xFF	; 255
    303a:	7f 7f       	andi	r23, 0xFF	; 255
    303c:	7f 7f       	andi	r23, 0xFF	; 255
    303e:	7f 7f       	andi	r23, 0xFF	; 255
    3040:	7f 7f       	andi	r23, 0xFF	; 255
    3042:	7f 7f       	andi	r23, 0xFF	; 255
    3044:	7f 7f       	andi	r23, 0xFF	; 255
    3046:	7f 7f       	andi	r23, 0xFF	; 255
    3048:	7f 7f       	andi	r23, 0xFF	; 255
    304a:	7f 7f       	andi	r23, 0xFF	; 255
    304c:	7f 7f       	andi	r23, 0xFF	; 255
    304e:	7f 7f       	andi	r23, 0xFF	; 255
    3050:	7f 7f       	andi	r23, 0xFF	; 255
    3052:	7f 7f       	andi	r23, 0xFF	; 255
    3054:	7f 7f       	andi	r23, 0xFF	; 255
    3056:	7f 7f       	andi	r23, 0xFF	; 255
    3058:	7f 7f       	andi	r23, 0xFF	; 255
    305a:	7f 7f       	andi	r23, 0xFF	; 255
    305c:	7f 7f       	andi	r23, 0xFF	; 255
    305e:	7f 7f       	andi	r23, 0xFF	; 255
    3060:	7f 7f       	andi	r23, 0xFF	; 255
    3062:	7f 7f       	andi	r23, 0xFF	; 255
    3064:	7f 7f       	andi	r23, 0xFF	; 255
    3066:	7f 7f       	andi	r23, 0xFF	; 255
    3068:	7f 7f       	andi	r23, 0xFF	; 255
    306a:	7f 7f       	andi	r23, 0xFF	; 255
    306c:	7f 7f       	andi	r23, 0xFF	; 255
    306e:	7f 7f       	andi	r23, 0xFF	; 255
    3070:	7f 7f       	andi	r23, 0xFF	; 255
    3072:	7f 7f       	andi	r23, 0xFF	; 255
    3074:	7f 7f       	andi	r23, 0xFF	; 255
    3076:	7f 7f       	andi	r23, 0xFF	; 255
    3078:	7f 7f       	andi	r23, 0xFF	; 255
    307a:	7f 7f       	andi	r23, 0xFF	; 255
    307c:	7f 7f       	andi	r23, 0xFF	; 255
    307e:	7f 7f       	andi	r23, 0xFF	; 255
    3080:	7f 7f       	andi	r23, 0xFF	; 255
    3082:	7f 7f       	andi	r23, 0xFF	; 255
    3084:	7f 7f       	andi	r23, 0xFF	; 255
    3086:	7f 7f       	andi	r23, 0xFF	; 255
    3088:	7f 7f       	andi	r23, 0xFF	; 255
    308a:	7f 7f       	andi	r23, 0xFF	; 255
    308c:	7f 7f       	andi	r23, 0xFF	; 255
    308e:	7f 7f       	andi	r23, 0xFF	; 255
    3090:	7f 7f       	andi	r23, 0xFF	; 255
    3092:	7f 7f       	andi	r23, 0xFF	; 255
    3094:	7f 7f       	andi	r23, 0xFF	; 255
    3096:	7f 7f       	andi	r23, 0xFF	; 255
    3098:	7f 7f       	andi	r23, 0xFF	; 255
    309a:	7f 7f       	andi	r23, 0xFF	; 255
    309c:	7f 7f       	andi	r23, 0xFF	; 255
    309e:	7f 7f       	andi	r23, 0xFF	; 255
    30a0:	7f 7f       	andi	r23, 0xFF	; 255
    30a2:	7f 7f       	andi	r23, 0xFF	; 255
    30a4:	7f 7f       	andi	r23, 0xFF	; 255
    30a6:	7f 7f       	andi	r23, 0xFF	; 255
    30a8:	7f 7f       	andi	r23, 0xFF	; 255
    30aa:	7f 7f       	andi	r23, 0xFF	; 255
    30ac:	7f 7f       	andi	r23, 0xFF	; 255
    30ae:	7f 7f       	andi	r23, 0xFF	; 255
    30b0:	7f 7f       	andi	r23, 0xFF	; 255
    30b2:	7f 7f       	andi	r23, 0xFF	; 255
    30b4:	7f 7f       	andi	r23, 0xFF	; 255
    30b6:	7f 7f       	andi	r23, 0xFF	; 255
    30b8:	7f 7f       	andi	r23, 0xFF	; 255
    30ba:	7f 7f       	andi	r23, 0xFF	; 255
    30bc:	7f 7f       	andi	r23, 0xFF	; 255
    30be:	7f 7f       	andi	r23, 0xFF	; 255
    30c0:	80 80       	ld	r8, Z
    30c2:	80 80       	ld	r8, Z
    30c4:	80 80       	ld	r8, Z
    30c6:	80 80       	ld	r8, Z
    30c8:	80 80       	ld	r8, Z
    30ca:	80 80       	ld	r8, Z
    30cc:	80 80       	ld	r8, Z
    30ce:	80 80       	ld	r8, Z
    30d0:	80 80       	ld	r8, Z
    30d2:	80 80       	ld	r8, Z
    30d4:	80 80       	ld	r8, Z
    30d6:	80 80       	ld	r8, Z
    30d8:	80 80       	ld	r8, Z
    30da:	80 80       	ld	r8, Z
    30dc:	80 80       	ld	r8, Z
    30de:	80 80       	ld	r8, Z
    30e0:	80 80       	ld	r8, Z
    30e2:	80 80       	ld	r8, Z
    30e4:	80 80       	ld	r8, Z
    30e6:	80 80       	ld	r8, Z
    30e8:	80 80       	ld	r8, Z
    30ea:	80 80       	ld	r8, Z
    30ec:	80 80       	ld	r8, Z
    30ee:	80 80       	ld	r8, Z
    30f0:	80 80       	ld	r8, Z
    30f2:	80 80       	ld	r8, Z
    30f4:	80 80       	ld	r8, Z
    30f6:	80 80       	ld	r8, Z
    30f8:	80 80       	ld	r8, Z
    30fa:	80 80       	ld	r8, Z
    30fc:	80 80       	ld	r8, Z
    30fe:	80 80       	ld	r8, Z
    3100:	03 09       	sbc	r16, r3
    3102:	13 1e       	adc	r1, r19
    3104:	28 31       	cpi	r18, 0x18	; 24
    3106:	3a 40       	sbci	r19, 0x0A	; 10
    3108:	46 4c       	sbci	r20, 0xC6	; 198
    310a:	50 54       	subi	r21, 0x40	; 64
    310c:	58 5b       	subi	r21, 0xB8	; 184
    310e:	5e 61       	ori	r21, 0x1E	; 30
    3110:	63 65       	ori	r22, 0x53	; 83
    3112:	67 69       	ori	r22, 0x97	; 151
    3114:	6b 6c       	ori	r22, 0xCB	; 203
    3116:	6e 6f       	ori	r22, 0xFE	; 254
    3118:	70 71       	andi	r23, 0x10	; 16
    311a:	72 73       	andi	r23, 0x32	; 50
    311c:	74 75       	andi	r23, 0x54	; 84
    311e:	76 77       	andi	r23, 0x76	; 118
    3120:	77 78       	andi	r23, 0x87	; 135
    3122:	79 79       	andi	r23, 0x99	; 153
    3124:	7a 7a       	andi	r23, 0xAA	; 170
    3126:	7b 7b       	andi	r23, 0xBB	; 187
    3128:	7c 7c       	andi	r23, 0xCC	; 204
    312a:	7c 7d       	andi	r23, 0xDC	; 220
    312c:	7d 7d       	andi	r23, 0xDD	; 221
    312e:	7e 7e       	andi	r23, 0xEE	; 238
    3130:	7e 7e       	andi	r23, 0xEE	; 238
    3132:	7f 7f       	andi	r23, 0xFF	; 255
    3134:	7f 7f       	andi	r23, 0xFF	; 255
    3136:	7f 7f       	andi	r23, 0xFF	; 255
    3138:	7f 7f       	andi	r23, 0xFF	; 255
    313a:	7f 7f       	andi	r23, 0xFF	; 255
    313c:	7f 7f       	andi	r23, 0xFF	; 255
    313e:	7f 7f       	andi	r23, 0xFF	; 255
    3140:	7f 7f       	andi	r23, 0xFF	; 255
    3142:	7f 7f       	andi	r23, 0xFF	; 255
    3144:	7f 7f       	andi	r23, 0xFF	; 255
    3146:	7f 7f       	andi	r23, 0xFF	; 255
    3148:	7f 7f       	andi	r23, 0xFF	; 255
    314a:	7f 7f       	andi	r23, 0xFF	; 255
    314c:	7f 7e       	andi	r23, 0xEF	; 239
    314e:	7e 7e       	andi	r23, 0xEE	; 238
    3150:	7e 7d       	andi	r23, 0xDE	; 222
    3152:	7d 7d       	andi	r23, 0xDD	; 221
    3154:	7c 7c       	andi	r23, 0xCC	; 204
    3156:	7c 7b       	andi	r23, 0xBC	; 188
    3158:	7b 7a       	andi	r23, 0xAB	; 171
    315a:	7a 79       	andi	r23, 0x9A	; 154
    315c:	79 78       	andi	r23, 0x89	; 137
    315e:	77 77       	andi	r23, 0x77	; 119
    3160:	76 75       	andi	r23, 0x56	; 86
    3162:	74 73       	andi	r23, 0x34	; 52
    3164:	72 71       	andi	r23, 0x12	; 18
    3166:	70 6f       	ori	r23, 0xF0	; 240
    3168:	6e 6c       	ori	r22, 0xCE	; 206
    316a:	6b 69       	ori	r22, 0x9B	; 155
    316c:	67 65       	ori	r22, 0x57	; 87
    316e:	63 61       	ori	r22, 0x13	; 19
    3170:	5e 5b       	subi	r21, 0xBE	; 190
    3172:	58 54       	subi	r21, 0x48	; 72
    3174:	50 4c       	sbci	r21, 0xC0	; 192
    3176:	46 40       	sbci	r20, 0x06	; 6
    3178:	3a 31       	cpi	r19, 0x1A	; 26
    317a:	28 1e       	adc	r2, r24
    317c:	13 09       	sbc	r17, r3
    317e:	03 00       	.word	0x0003	; ????
    3180:	c6 cc       	rjmp	.-1652   	; 0x2b0e <waves+0xe>
    3182:	d5 db       	rcall	.-2134   	; 0x292e <TriggerNote+0x40>
    3184:	df e3       	ldi	r29, 0x3F	; 63
    3186:	e5 e7       	ldi	r30, 0x75	; 117
    3188:	e9 ea       	ldi	r30, 0xA9	; 169
    318a:	eb ec       	ldi	r30, 0xCB	; 203
    318c:	ed ee       	ldi	r30, 0xED	; 237
    318e:	ef ef       	ldi	r30, 0xFF	; 255
    3190:	f0 f0       	brcs	.+60     	; 0x31ce <waves+0x6ce>
    3192:	f0 f1       	brcs	.+124    	; 0x3210 <waves+0x710>
    3194:	f1 f1       	breq	.+124    	; 0x3212 <waves+0x712>
    3196:	f1 f2       	breq	.-68     	; 0x3154 <waves+0x654>
    3198:	f2 f2       	brmi	.-68     	; 0x3156 <waves+0x656>
    319a:	f2 f2       	brmi	.-68     	; 0x3158 <waves+0x658>
    319c:	f2 f2       	brmi	.-68     	; 0x315a <waves+0x65a>
    319e:	f2 f3       	brmi	.-4      	; 0x319c <waves+0x69c>
    31a0:	f3 f3       	brvs	.-4      	; 0x319e <waves+0x69e>
    31a2:	f3 f3       	brvs	.-4      	; 0x31a0 <waves+0x6a0>
    31a4:	f3 f3       	brvs	.-4      	; 0x31a2 <waves+0x6a2>
    31a6:	f3 f3       	brvs	.-4      	; 0x31a4 <waves+0x6a4>
    31a8:	f3 f3       	brvs	.-4      	; 0x31a6 <waves+0x6a6>
    31aa:	f3 f3       	brvs	.-4      	; 0x31a8 <waves+0x6a8>
    31ac:	f3 f3       	brvs	.-4      	; 0x31aa <waves+0x6aa>
    31ae:	f3 f3       	brvs	.-4      	; 0x31ac <waves+0x6ac>
    31b0:	f3 f3       	brvs	.-4      	; 0x31ae <waves+0x6ae>
    31b2:	f3 f3       	brvs	.-4      	; 0x31b0 <waves+0x6b0>
    31b4:	f3 f3       	brvs	.-4      	; 0x31b2 <waves+0x6b2>
    31b6:	f3 f3       	brvs	.-4      	; 0x31b4 <waves+0x6b4>
    31b8:	f3 f3       	brvs	.-4      	; 0x31b6 <waves+0x6b6>
    31ba:	f3 f3       	brvs	.-4      	; 0x31b8 <waves+0x6b8>
    31bc:	f3 f3       	brvs	.-4      	; 0x31ba <waves+0x6ba>
    31be:	f3 f3       	brvs	.-4      	; 0x31bc <waves+0x6bc>
    31c0:	f3 f3       	brvs	.-4      	; 0x31be <waves+0x6be>
    31c2:	f3 f3       	brvs	.-4      	; 0x31c0 <waves+0x6c0>
    31c4:	f3 f3       	brvs	.-4      	; 0x31c2 <waves+0x6c2>
    31c6:	f3 f3       	brvs	.-4      	; 0x31c4 <waves+0x6c4>
    31c8:	f3 f3       	brvs	.-4      	; 0x31c6 <waves+0x6c6>
    31ca:	f3 f3       	brvs	.-4      	; 0x31c8 <waves+0x6c8>
    31cc:	f3 f3       	brvs	.-4      	; 0x31ca <waves+0x6ca>
    31ce:	f3 f3       	brvs	.-4      	; 0x31cc <waves+0x6cc>
    31d0:	f3 f3       	brvs	.-4      	; 0x31ce <waves+0x6ce>
    31d2:	f3 f3       	brvs	.-4      	; 0x31d0 <waves+0x6d0>
    31d4:	f3 f3       	brvs	.-4      	; 0x31d2 <waves+0x6d2>
    31d6:	f3 f3       	brvs	.-4      	; 0x31d4 <waves+0x6d4>
    31d8:	f3 f3       	brvs	.-4      	; 0x31d6 <waves+0x6d6>
    31da:	f3 f3       	brvs	.-4      	; 0x31d8 <waves+0x6d8>
    31dc:	f3 f3       	brvs	.-4      	; 0x31da <waves+0x6da>
    31de:	f3 f3       	brvs	.-4      	; 0x31dc <waves+0x6dc>
    31e0:	f2 f2       	brmi	.-68     	; 0x319e <waves+0x69e>
    31e2:	f2 f2       	brmi	.-68     	; 0x31a0 <waves+0x6a0>
    31e4:	f2 f2       	brmi	.-68     	; 0x31a2 <waves+0x6a2>
    31e6:	f2 f2       	brmi	.-68     	; 0x31a4 <waves+0x6a4>
    31e8:	f1 f1       	breq	.+124    	; 0x3266 <waves+0x766>
    31ea:	f1 f1       	breq	.+124    	; 0x3268 <waves+0x768>
    31ec:	f0 f0       	brcs	.+60     	; 0x322a <waves+0x72a>
    31ee:	f0 ef       	ldi	r31, 0xF0	; 240
    31f0:	ef ee       	ldi	r30, 0xEF	; 239
    31f2:	ed ec       	ldi	r30, 0xCD	; 205
    31f4:	eb ea       	ldi	r30, 0xAB	; 171
    31f6:	e9 e7       	ldi	r30, 0x79	; 121
    31f8:	e5 e3       	ldi	r30, 0x35	; 53
    31fa:	df db       	rcall	.-2114   	; 0x29ba <SetMixerWave+0x1e>
    31fc:	d5 cc       	rjmp	.-1622   	; 0x2ba8 <waves+0xa8>
    31fe:	c6 00       	.word	0x00c6	; ????
    3200:	00 28       	or	r0, r0
    3202:	3d 42       	sbci	r19, 0x2D	; 45
    3204:	30 2d       	mov	r19, r0
    3206:	2c 2b       	or	r18, r28
    3208:	2c 2d       	mov	r18, r12
    320a:	2e 2f       	mov	r18, r30
    320c:	30 32       	cpi	r19, 0x20	; 32
    320e:	33 35       	cpi	r19, 0x53	; 83
    3210:	37 39       	cpi	r19, 0x97	; 151
    3212:	3b 3d       	cpi	r19, 0xDB	; 219
    3214:	3f 41       	sbci	r19, 0x1F	; 31
    3216:	43 45       	sbci	r20, 0x53	; 83
    3218:	48 4a       	sbci	r20, 0xA8	; 168
    321a:	4c 4e       	sbci	r20, 0xEC	; 236
    321c:	50 53       	subi	r21, 0x30	; 48
    321e:	55 57       	subi	r21, 0x75	; 117
    3220:	59 5b       	subi	r21, 0xB9	; 185
    3222:	5d 5f       	subi	r21, 0xFD	; 253
    3224:	61 63       	ori	r22, 0x31	; 49
    3226:	65 67       	ori	r22, 0x75	; 117
    3228:	69 6b       	ori	r22, 0xB9	; 185
    322a:	6c 6e       	ori	r22, 0xEC	; 236
    322c:	70 71       	andi	r23, 0x10	; 16
    322e:	73 74       	andi	r23, 0x43	; 67
    3230:	75 77       	andi	r23, 0x75	; 117
    3232:	78 79       	andi	r23, 0x98	; 152
    3234:	7a 7b       	andi	r23, 0xBA	; 186
    3236:	7c 7d       	andi	r23, 0xDC	; 220
    3238:	7d 7e       	andi	r23, 0xED	; 237
    323a:	7e 7f       	andi	r23, 0xFE	; 254
    323c:	7f 7f       	andi	r23, 0xFF	; 255
    323e:	7f 7f       	andi	r23, 0xFF	; 255
    3240:	7f 7f       	andi	r23, 0xFF	; 255
    3242:	7f 7f       	andi	r23, 0xFF	; 255
    3244:	7f 7f       	andi	r23, 0xFF	; 255
    3246:	7e 7e       	andi	r23, 0xEE	; 238
    3248:	7d 7d       	andi	r23, 0xDD	; 221
    324a:	7c 7b       	andi	r23, 0xBC	; 188
    324c:	7a 79       	andi	r23, 0x9A	; 154
    324e:	78 77       	andi	r23, 0x78	; 120
    3250:	75 74       	andi	r23, 0x45	; 69
    3252:	73 71       	andi	r23, 0x13	; 19
    3254:	70 6e       	ori	r23, 0xE0	; 224
    3256:	6c 6b       	ori	r22, 0xBC	; 188
    3258:	69 67       	ori	r22, 0x79	; 121
    325a:	65 63       	ori	r22, 0x35	; 53
    325c:	61 5f       	subi	r22, 0xF1	; 241
    325e:	5d 5b       	subi	r21, 0xBD	; 189
    3260:	59 57       	subi	r21, 0x79	; 121
    3262:	55 53       	subi	r21, 0x35	; 53
    3264:	50 4e       	sbci	r21, 0xE0	; 224
    3266:	4c 4a       	sbci	r20, 0xAC	; 172
    3268:	48 45       	sbci	r20, 0x58	; 88
    326a:	43 41       	sbci	r20, 0x13	; 19
    326c:	3f 3d       	cpi	r19, 0xDF	; 223
    326e:	3b 39       	cpi	r19, 0x9B	; 155
    3270:	37 35       	cpi	r19, 0x57	; 87
    3272:	33 32       	cpi	r19, 0x23	; 35
    3274:	30 2f       	mov	r19, r16
    3276:	2e 2d       	mov	r18, r14
    3278:	2c 2b       	or	r18, r28
    327a:	2c 2d       	mov	r18, r12
    327c:	30 42       	sbci	r19, 0x20	; 32
    327e:	3d 28       	or	r3, r13
    3280:	00 e9       	ldi	r16, 0x90	; 144
    3282:	e5 fe       	sbrs	r14, 5
    3284:	d4 d7       	rcall	.+4008   	; 0x422e <__addsf3x+0x64>
    3286:	d7 d7       	rcall	.+4014   	; 0x4236 <__addsf3x+0x6c>
    3288:	d6 d4       	rcall	.+2476   	; 0x3c36 <update+0x506>
    328a:	d2 d0       	rcall	.+420    	; 0x3430 <waves+0x930>
    328c:	ce cc       	rjmp	.-1636   	; 0x2c2a <waves+0x12a>
    328e:	ca c8       	rjmp	.-3692   	; 0x2424 <PatchCommand14+0x24>
    3290:	c6 c3       	rjmp	.+1932   	; 0x3a1e <update+0x2ee>
    3292:	c1 bf       	out	0x31, r28	; 49
    3294:	bd ba       	out	0x1d, r11	; 29
    3296:	b8 b6       	in	r11, 0x38	; 56
    3298:	b4 b1       	in	r27, 0x04	; 4
    329a:	af ad       	ldd	r26, Y+63	; 0x3f
    329c:	ab a9       	ldd	r26, Y+51	; 0x33
    329e:	a7 a5       	ldd	r26, Z+47	; 0x2f
    32a0:	a3 a1       	ldd	r26, Z+35	; 0x23
    32a2:	9f 9e       	mul	r9, r31
    32a4:	9c 9a       	sbi	0x13, 4	; 19
    32a6:	99 97       	sbiw	r26, 0x29	; 41
    32a8:	95 94       	asr	r9
    32aa:	93 91       	.word	0x9193	; ????
    32ac:	90 8f       	std	Z+24, r25	; 0x18
    32ae:	8d 8c       	ldd	r8, Y+29	; 0x1d
    32b0:	8b 8a       	std	Y+19, r8	; 0x13
    32b2:	89 88       	ldd	r8, Y+17	; 0x11
    32b4:	88 87       	std	Y+8, r24	; 0x08
    32b6:	86 85       	ldd	r24, Z+14	; 0x0e
    32b8:	85 84       	ldd	r8, Z+13	; 0x0d
    32ba:	84 84       	ldd	r8, Z+12	; 0x0c
    32bc:	83 83       	std	Z+3, r24	; 0x03
    32be:	83 83       	std	Z+3, r24	; 0x03
    32c0:	83 83       	std	Z+3, r24	; 0x03
    32c2:	83 83       	std	Z+3, r24	; 0x03
    32c4:	83 84       	ldd	r8, Z+11	; 0x0b
    32c6:	84 84       	ldd	r8, Z+12	; 0x0c
    32c8:	85 85       	ldd	r24, Z+13	; 0x0d
    32ca:	86 87       	std	Z+14, r24	; 0x0e
    32cc:	88 88       	ldd	r8, Y+16	; 0x10
    32ce:	89 8a       	std	Y+17, r8	; 0x11
    32d0:	8b 8c       	ldd	r8, Y+27	; 0x1b
    32d2:	8d 8f       	std	Y+29, r24	; 0x1d
    32d4:	90 91 93 94 	lds	r25, 0x9493	; 0x809493 <__bss_end+0x8ac8>
    32d8:	95 97       	sbiw	r26, 0x25	; 37
    32da:	99 9a       	sbi	0x13, 1	; 19
    32dc:	9c 9e       	mul	r9, r28
    32de:	9f a1       	ldd	r25, Y+39	; 0x27
    32e0:	a3 a5       	ldd	r26, Z+43	; 0x2b
    32e2:	a7 a9       	ldd	r26, Z+55	; 0x37
    32e4:	ab ad       	ldd	r26, Y+59	; 0x3b
    32e6:	af b1       	in	r26, 0x0f	; 15
    32e8:	b4 b6       	in	r11, 0x34	; 52
    32ea:	b8 ba       	out	0x18, r11	; 24
    32ec:	bd bf       	out	0x3d, r27	; 61
    32ee:	c1 c3       	rjmp	.+1922   	; 0x3a72 <update+0x342>
    32f0:	c6 c8       	rjmp	.-3700   	; 0x247e <ProcessMusic+0x2a>
    32f2:	ca cc       	rjmp	.-1644   	; 0x2c88 <waves+0x188>
    32f4:	ce d0       	rcall	.+412    	; 0x3492 <waves+0x992>
    32f6:	d2 d4       	rcall	.+2468   	; 0x3c9c <draw+0x20>
    32f8:	d6 d7       	rcall	.+4012   	; 0x42a6 <__fixunssfsi+0x24>
    32fa:	d7 d7       	rcall	.+4014   	; 0x42aa <__fixunssfsi+0x28>
    32fc:	d4 fe       	sbrs	r13, 4
    32fe:	e5 e9       	ldi	r30, 0x95	; 149
    3300:	f9 f8       	.word	0xf8f9	; ????
    3302:	f9 f5       	brne	.+126    	; 0x3382 <waves+0x882>
    3304:	eb e1       	ldi	r30, 0x1B	; 27
    3306:	dd de       	rcall	.-582    	; 0x30c2 <waves+0x5c2>
    3308:	e0 e2       	ldi	r30, 0x20	; 32
    330a:	e4 e5       	ldi	r30, 0x54	; 84
    330c:	e6 e5       	ldi	r30, 0x56	; 86
    330e:	e4 e2       	ldi	r30, 0x24	; 36
    3310:	de d9       	rcall	.-3140   	; 0x26ce <ProcessMusic+0x27a>
    3312:	d2 ca       	rjmp	.-2652   	; 0x28b8 <TriggerCommon+0x66>
    3314:	c1 b7       	in	r28, 0x31	; 49
    3316:	ac a2       	std	Y+36, r10	; 0x24
    3318:	99 91       	ld	r25, Y+
    331a:	8a 86       	std	Y+10, r8	; 0x0a
    331c:	83 81       	ldd	r24, Z+3	; 0x03
    331e:	80 80       	ld	r8, Z
    3320:	81 82       	std	Z+1, r8	; 0x01
    3322:	83 85       	ldd	r24, Z+11	; 0x0b
    3324:	86 88       	ldd	r8, Z+22	; 0x16
    3326:	8a 8c       	ldd	r8, Y+26	; 0x1a
    3328:	8d 8f       	std	Y+29, r24	; 0x1d
    332a:	90 92 93 95 	sts	0x9593, r9	; 0x809593 <__bss_end+0x8bc8>
    332e:	96 97       	sbiw	r26, 0x26	; 38
    3330:	98 99       	sbic	0x13, 0	; 19
    3332:	9a 9b       	sbis	0x13, 2	; 19
    3334:	9b 9c       	mul	r9, r11
    3336:	9d 9d       	mul	r25, r13
    3338:	9d 9e       	mul	r9, r29
    333a:	9e 9e       	mul	r9, r30
    333c:	9f 9f       	mul	r25, r31
    333e:	9f 9f       	mul	r25, r31
    3340:	9f 9f       	mul	r25, r31
    3342:	9f 9e       	mul	r9, r31
    3344:	9e 9e       	mul	r9, r30
    3346:	9d 9d       	mul	r25, r13
    3348:	9d 9c       	mul	r9, r13
    334a:	9b 9b       	sbis	0x13, 3	; 19
    334c:	9a 99       	sbic	0x13, 2	; 19
    334e:	98 97       	sbiw	r26, 0x28	; 40
    3350:	96 95       	lsr	r25
    3352:	93 92       	.word	0x9293	; ????
    3354:	90 8f       	std	Z+24, r25	; 0x18
    3356:	8d 8c       	ldd	r8, Y+29	; 0x1d
    3358:	8a 88       	ldd	r8, Y+18	; 0x12
    335a:	86 85       	ldd	r24, Z+14	; 0x0e
    335c:	83 82       	std	Z+3, r8	; 0x03
    335e:	81 80       	ldd	r8, Z+1	; 0x01
    3360:	80 81       	ld	r24, Z
    3362:	83 86       	std	Z+11, r8	; 0x0b
    3364:	8a 91       	ld	r24, -Y
    3366:	99 a2       	std	Y+33, r9	; 0x21
    3368:	ac b7       	in	r26, 0x3c	; 60
    336a:	c1 ca       	rjmp	.-2686   	; 0x28ee <TriggerNote>
    336c:	d2 d9       	rcall	.-3164   	; 0x2712 <ProcessMusic+0x2be>
    336e:	de e2       	ldi	r29, 0x2E	; 46
    3370:	e4 e5       	ldi	r30, 0x54	; 84
    3372:	e6 e5       	ldi	r30, 0x56	; 86
    3374:	e4 e2       	ldi	r30, 0x24	; 36
    3376:	e0 de       	rcall	.-576    	; 0x3138 <waves+0x638>
    3378:	dd e1       	ldi	r29, 0x1D	; 29
    337a:	eb f5       	brvc	.+122    	; 0x33f6 <waves+0x8f6>
    337c:	f9 f8       	.word	0xf8f9	; ????
    337e:	f9 00       	.word	0x00f9	; ????
    3380:	07 08       	sbc	r0, r7
    3382:	07 0b       	sbc	r16, r23
    3384:	15 1f       	adc	r17, r21
    3386:	23 22       	and	r2, r19
    3388:	20 1e       	adc	r2, r16
    338a:	1c 1b       	sub	r17, r28
    338c:	1a 1b       	sub	r17, r26
    338e:	1c 1e       	adc	r1, r28
    3390:	22 27       	eor	r18, r18
    3392:	2e 36       	cpi	r18, 0x6E	; 110
    3394:	3f 49       	sbci	r19, 0x9F	; 159
    3396:	54 5e       	subi	r21, 0xE4	; 228
    3398:	67 6f       	ori	r22, 0xF7	; 247
    339a:	76 7a       	andi	r23, 0xA6	; 166
    339c:	7e 7f       	andi	r23, 0xFE	; 254
    339e:	7f 7f       	andi	r23, 0xFF	; 255
    33a0:	7f 7e       	andi	r23, 0xEF	; 239
    33a2:	7d 7b       	andi	r23, 0xBD	; 189
    33a4:	7a 78       	andi	r23, 0x8A	; 138
    33a6:	76 74       	andi	r23, 0x46	; 70
    33a8:	73 71       	andi	r23, 0x13	; 19
    33aa:	70 6e       	ori	r23, 0xE0	; 224
    33ac:	6d 6b       	ori	r22, 0xBD	; 189
    33ae:	6a 69       	ori	r22, 0x9A	; 154
    33b0:	68 67       	ori	r22, 0x78	; 120
    33b2:	66 65       	ori	r22, 0x56	; 86
    33b4:	65 64       	ori	r22, 0x45	; 69
    33b6:	64 63       	ori	r22, 0x34	; 52
    33b8:	63 62       	ori	r22, 0x23	; 35
    33ba:	62 62       	ori	r22, 0x22	; 34
    33bc:	61 61       	ori	r22, 0x11	; 17
    33be:	61 61       	ori	r22, 0x11	; 17
    33c0:	61 61       	ori	r22, 0x11	; 17
    33c2:	61 62       	ori	r22, 0x21	; 33
    33c4:	62 62       	ori	r22, 0x22	; 34
    33c6:	63 63       	ori	r22, 0x33	; 51
    33c8:	63 64       	ori	r22, 0x43	; 67
    33ca:	65 65       	ori	r22, 0x55	; 85
    33cc:	66 67       	ori	r22, 0x76	; 118
    33ce:	68 69       	ori	r22, 0x98	; 152
    33d0:	6a 6b       	ori	r22, 0xBA	; 186
    33d2:	6d 6e       	ori	r22, 0xED	; 237
    33d4:	70 71       	andi	r23, 0x10	; 16
    33d6:	73 74       	andi	r23, 0x43	; 67
    33d8:	76 78       	andi	r23, 0x86	; 134
    33da:	7a 7b       	andi	r23, 0xBA	; 186
    33dc:	7d 7e       	andi	r23, 0xED	; 237
    33de:	7f 7f       	andi	r23, 0xFF	; 255
    33e0:	7f 7f       	andi	r23, 0xFF	; 255
    33e2:	7e 7a       	andi	r23, 0xAE	; 174
    33e4:	76 6f       	ori	r23, 0xF6	; 246
    33e6:	67 5e       	subi	r22, 0xE7	; 231
    33e8:	54 49       	sbci	r21, 0x94	; 148
    33ea:	3f 36       	cpi	r19, 0x6F	; 111
    33ec:	2e 27       	eor	r18, r30
    33ee:	22 1e       	adc	r2, r18
    33f0:	1c 1b       	sub	r17, r28
    33f2:	1a 1b       	sub	r17, r26
    33f4:	1c 1e       	adc	r1, r28
    33f6:	20 22       	and	r2, r16
    33f8:	23 1f       	adc	r18, r19
    33fa:	15 0b       	sbc	r17, r21
    33fc:	07 08       	sbc	r0, r7
    33fe:	07 00       	.word	0x0007	; ????
    3400:	1f 31       	cpi	r17, 0x1F	; 31
    3402:	3d 44       	sbci	r19, 0x4D	; 77
    3404:	4e 53       	subi	r20, 0x3E	; 62
    3406:	54 56       	subi	r21, 0x64	; 100
    3408:	5a 5f       	subi	r21, 0xFA	; 250
    340a:	64 69       	ori	r22, 0x94	; 148
    340c:	6e 74       	andi	r22, 0x4E	; 78
    340e:	76 79       	andi	r23, 0x96	; 150
    3410:	7c 7f       	andi	r23, 0xFC	; 252
    3412:	7f 7f       	andi	r23, 0xFF	; 255
    3414:	7f 7f       	andi	r23, 0xFF	; 255
    3416:	7f 7f       	andi	r23, 0xFF	; 255
    3418:	7f 7f       	andi	r23, 0xFF	; 255
    341a:	7f 7f       	andi	r23, 0xFF	; 255
    341c:	7f 7f       	andi	r23, 0xFF	; 255
    341e:	7f 7f       	andi	r23, 0xFF	; 255
    3420:	7f 7f       	andi	r23, 0xFF	; 255
    3422:	7f 7f       	andi	r23, 0xFF	; 255
    3424:	7f 7f       	andi	r23, 0xFF	; 255
    3426:	7f 7f       	andi	r23, 0xFF	; 255
    3428:	7f 7f       	andi	r23, 0xFF	; 255
    342a:	7f 7f       	andi	r23, 0xFF	; 255
    342c:	7f 7f       	andi	r23, 0xFF	; 255
    342e:	7f 7f       	andi	r23, 0xFF	; 255
    3430:	7f 7f       	andi	r23, 0xFF	; 255
    3432:	7f 7f       	andi	r23, 0xFF	; 255
    3434:	7f 7f       	andi	r23, 0xFF	; 255
    3436:	7f 7f       	andi	r23, 0xFF	; 255
    3438:	7f 7f       	andi	r23, 0xFF	; 255
    343a:	7f 7f       	andi	r23, 0xFF	; 255
    343c:	7f 7f       	andi	r23, 0xFF	; 255
    343e:	7f 7f       	andi	r23, 0xFF	; 255
    3440:	7f 7f       	andi	r23, 0xFF	; 255
    3442:	7f 7f       	andi	r23, 0xFF	; 255
    3444:	7f 7f       	andi	r23, 0xFF	; 255
    3446:	7f 7f       	andi	r23, 0xFF	; 255
    3448:	7f 7f       	andi	r23, 0xFF	; 255
    344a:	7f 7f       	andi	r23, 0xFF	; 255
    344c:	7f 7f       	andi	r23, 0xFF	; 255
    344e:	7f 7f       	andi	r23, 0xFF	; 255
    3450:	7f 7f       	andi	r23, 0xFF	; 255
    3452:	7f 7f       	andi	r23, 0xFF	; 255
    3454:	7f 7f       	andi	r23, 0xFF	; 255
    3456:	7f 7f       	andi	r23, 0xFF	; 255
    3458:	7f 7f       	andi	r23, 0xFF	; 255
    345a:	7f 7f       	andi	r23, 0xFF	; 255
    345c:	7f 7f       	andi	r23, 0xFF	; 255
    345e:	7f 7f       	andi	r23, 0xFF	; 255
    3460:	7f 7f       	andi	r23, 0xFF	; 255
    3462:	7f 7f       	andi	r23, 0xFF	; 255
    3464:	7f 7f       	andi	r23, 0xFF	; 255
    3466:	7f 7f       	andi	r23, 0xFF	; 255
    3468:	7f 7f       	andi	r23, 0xFF	; 255
    346a:	7f 7f       	andi	r23, 0xFF	; 255
    346c:	7f 7f       	andi	r23, 0xFF	; 255
    346e:	7f 7f       	andi	r23, 0xFF	; 255
    3470:	7f 7f       	andi	r23, 0xFF	; 255
    3472:	7f 7f       	andi	r23, 0xFF	; 255
    3474:	7f 7f       	andi	r23, 0xFF	; 255
    3476:	7f 7f       	andi	r23, 0xFF	; 255
    3478:	7f 7f       	andi	r23, 0xFF	; 255
    347a:	7f 7c       	andi	r23, 0xCF	; 207
    347c:	78 71       	andi	r23, 0x18	; 24
    347e:	68 4c       	sbci	r22, 0xC8	; 200
    3480:	2c 1c       	adc	r2, r12
    3482:	12 0c       	add	r1, r2
    3484:	0a 0b       	sbc	r16, r26
    3486:	0a 05       	cpc	r16, r10
    3488:	fd f3       	brhs	.-2      	; 0x3488 <waves+0x988>
    348a:	e9 df       	rcall	.-46     	; 0x345e <waves+0x95e>
    348c:	d4 ca       	rjmp	.-2648   	; 0x2a36 <steptable+0x60>
    348e:	c0 b7       	in	r28, 0x30	; 48
    3490:	ae a6       	std	Y+46, r10	; 0x2e
    3492:	9e 97       	sbiw	r26, 0x2e	; 46
    3494:	91 8b       	std	Z+17, r25	; 0x11
    3496:	86 85       	ldd	r24, Z+14	; 0x0e
    3498:	82 80       	ldd	r8, Z+2	; 0x02
    349a:	80 80       	ld	r8, Z
    349c:	80 80       	ld	r8, Z
    349e:	80 80       	ld	r8, Z
    34a0:	80 80       	ld	r8, Z
    34a2:	80 80       	ld	r8, Z
    34a4:	80 80       	ld	r8, Z
    34a6:	80 80       	ld	r8, Z
    34a8:	80 80       	ld	r8, Z
    34aa:	80 80       	ld	r8, Z
    34ac:	80 80       	ld	r8, Z
    34ae:	80 80       	ld	r8, Z
    34b0:	80 80       	ld	r8, Z
    34b2:	80 80       	ld	r8, Z
    34b4:	80 80       	ld	r8, Z
    34b6:	80 80       	ld	r8, Z
    34b8:	80 80       	ld	r8, Z
    34ba:	80 80       	ld	r8, Z
    34bc:	80 80       	ld	r8, Z
    34be:	80 80       	ld	r8, Z
    34c0:	80 80       	ld	r8, Z
    34c2:	80 80       	ld	r8, Z
    34c4:	80 80       	ld	r8, Z
    34c6:	80 80       	ld	r8, Z
    34c8:	80 80       	ld	r8, Z
    34ca:	80 80       	ld	r8, Z
    34cc:	80 80       	ld	r8, Z
    34ce:	80 80       	ld	r8, Z
    34d0:	80 80       	ld	r8, Z
    34d2:	80 80       	ld	r8, Z
    34d4:	80 80       	ld	r8, Z
    34d6:	80 80       	ld	r8, Z
    34d8:	80 80       	ld	r8, Z
    34da:	80 80       	ld	r8, Z
    34dc:	80 80       	ld	r8, Z
    34de:	80 80       	ld	r8, Z
    34e0:	80 80       	ld	r8, Z
    34e2:	80 80       	ld	r8, Z
    34e4:	80 80       	ld	r8, Z
    34e6:	80 80       	ld	r8, Z
    34e8:	80 80       	ld	r8, Z
    34ea:	80 80       	ld	r8, Z
    34ec:	80 80       	ld	r8, Z
    34ee:	80 80       	ld	r8, Z
    34f0:	80 80       	ld	r8, Z
    34f2:	80 80       	ld	r8, Z
    34f4:	80 87       	std	Z+8, r24	; 0x08
    34f6:	91 9d       	mul	r25, r1
    34f8:	ac c4       	rjmp	.+2392   	; 0x3e52 <draw+0x1d6>
    34fa:	cb d4       	rcall	.+2454   	; 0x3e92 <draw+0x216>
    34fc:	dd f2       	brhs	.-74     	; 0x34b4 <waves+0x9b4>
    34fe:	fa fa       	.word	0xfafa	; ????

00003500 <DisplayLogo>:
    3500:	08 95       	ret

00003502 <InitializeVideoMode>:
		return;
	}
	
	fadeStep=FADER_STEPS;
	fadeDir=-1;
	doFade(speed,blocking);
    3502:	08 95       	ret

00003504 <VideoModeVsync>:
    3504:	0c 94 fa 1a 	jmp	0x35f4	; 0x35f4 <ProcessFading>

00003508 <PrintInt>:
    3508:	cf 92       	push	r12
    350a:	df 92       	push	r13
    350c:	ef 92       	push	r14
    350e:	ff 92       	push	r15
    3510:	0f 93       	push	r16
    3512:	1f 93       	push	r17
    3514:	cf 93       	push	r28
    3516:	df 93       	push	r29
    3518:	c8 2e       	mov	r12, r24
    351a:	d6 2f       	mov	r29, r22
    351c:	8a 01       	movw	r16, r20
    351e:	d2 2e       	mov	r13, r18
    3520:	c0 e0       	ldi	r28, 0x00	; 0
    3522:	8a e0       	ldi	r24, 0x0A	; 10
    3524:	e8 2e       	mov	r14, r24
    3526:	f1 2c       	mov	r15, r1
    3528:	2c 2d       	mov	r18, r12
    352a:	2c 1b       	sub	r18, r28
    352c:	01 15       	cp	r16, r1
    352e:	11 05       	cpc	r17, r1
    3530:	11 f4       	brne	.+4      	; 0x3536 <PrintInt+0x2e>
    3532:	c1 11       	cpse	r28, r1
    3534:	07 c0       	rjmp	.+14     	; 0x3544 <PrintInt+0x3c>
    3536:	c8 01       	movw	r24, r16
    3538:	b7 01       	movw	r22, r14
    353a:	0e 94 83 20 	call	0x4106	; 0x4106 <__udivmodhi4>
    353e:	40 e1       	ldi	r20, 0x10	; 16
    3540:	48 0f       	add	r20, r24
    3542:	05 c0       	rjmp	.+10     	; 0x354e <PrintInt+0x46>
    3544:	dd 20       	and	r13, r13
    3546:	11 f0       	breq	.+4      	; 0x354c <PrintInt+0x44>
    3548:	40 e1       	ldi	r20, 0x10	; 16
    354a:	01 c0       	rjmp	.+2      	; 0x354e <PrintInt+0x46>
    354c:	40 e0       	ldi	r20, 0x00	; 0
    354e:	6d 2f       	mov	r22, r29
    3550:	82 2f       	mov	r24, r18
    3552:	0e 94 ad 10 	call	0x215a	; 0x215a <SetFont>
    3556:	c8 01       	movw	r24, r16
    3558:	b7 01       	movw	r22, r14
    355a:	0e 94 83 20 	call	0x4106	; 0x4106 <__udivmodhi4>
    355e:	8b 01       	movw	r16, r22
    3560:	cf 5f       	subi	r28, 0xFF	; 255
    3562:	c5 30       	cpi	r28, 0x05	; 5
    3564:	09 f7       	brne	.-62     	; 0x3528 <PrintInt+0x20>
    3566:	df 91       	pop	r29
    3568:	cf 91       	pop	r28
    356a:	1f 91       	pop	r17
    356c:	0f 91       	pop	r16
    356e:	ff 90       	pop	r15
    3570:	ef 90       	pop	r14
    3572:	df 90       	pop	r13
    3574:	cf 90       	pop	r12
    3576:	08 95       	ret

00003578 <Print>:
    3578:	df 92       	push	r13
    357a:	ef 92       	push	r14
    357c:	ff 92       	push	r15
    357e:	0f 93       	push	r16
    3580:	1f 93       	push	r17
    3582:	cf 93       	push	r28
    3584:	df 93       	push	r29
    3586:	7c 01       	movw	r14, r24
    3588:	d6 2e       	mov	r13, r22
    358a:	8a 01       	movw	r16, r20
    358c:	ec 01       	movw	r28, r24
    358e:	fe 01       	movw	r30, r28
    3590:	ee 19       	sub	r30, r14
    3592:	ff 09       	sbc	r31, r15
    3594:	e0 0f       	add	r30, r16
    3596:	f1 1f       	adc	r31, r17
    3598:	e4 91       	lpm	r30, Z
    359a:	ee 23       	and	r30, r30
    359c:	49 f0       	breq	.+18     	; 0x35b0 <Print+0x38>
    359e:	ef 77       	andi	r30, 0x7F	; 127
    35a0:	40 ee       	ldi	r20, 0xE0	; 224
    35a2:	4e 0f       	add	r20, r30
    35a4:	6d 2d       	mov	r22, r13
    35a6:	8c 2f       	mov	r24, r28
    35a8:	0e 94 ad 10 	call	0x215a	; 0x215a <SetFont>
    35ac:	21 96       	adiw	r28, 0x01	; 1
    35ae:	ef cf       	rjmp	.-34     	; 0x358e <Print+0x16>
    35b0:	df 91       	pop	r29
    35b2:	cf 91       	pop	r28
    35b4:	1f 91       	pop	r17
    35b6:	0f 91       	pop	r16
    35b8:	ff 90       	pop	r15
    35ba:	ef 90       	pop	r14
    35bc:	df 90       	pop	r13
    35be:	08 95       	ret

000035c0 <PrintChar>:
    35c0:	40 52       	subi	r20, 0x20	; 32
    35c2:	0c 94 ad 10 	jmp	0x215a	; 0x215a <SetFont>

000035c6 <WaitVsync>:
    35c6:	0f 93       	push	r16
    35c8:	1f 93       	push	r17
    35ca:	cf 93       	push	r28
    35cc:	df 93       	push	r29
    35ce:	8c 01       	movw	r16, r24
    35d0:	c0 e0       	ldi	r28, 0x00	; 0
    35d2:	d0 e0       	ldi	r29, 0x00	; 0
    35d4:	c0 17       	cp	r28, r16
    35d6:	d1 07       	cpc	r29, r17
    35d8:	44 f4       	brge	.+16     	; 0x35ea <WaitVsync+0x24>
    35da:	0e 94 ca 10 	call	0x2194	; 0x2194 <GetVsyncFlag>
    35de:	88 23       	and	r24, r24
    35e0:	e1 f3       	breq	.-8      	; 0x35da <WaitVsync+0x14>
    35e2:	0e 94 ce 10 	call	0x219c	; 0x219c <ClearVsyncFlag>
    35e6:	21 96       	adiw	r28, 0x01	; 1
    35e8:	f5 cf       	rjmp	.-22     	; 0x35d4 <WaitVsync+0xe>
    35ea:	df 91       	pop	r29
    35ec:	cf 91       	pop	r28
    35ee:	1f 91       	pop	r17
    35f0:	0f 91       	pop	r16
    35f2:	08 95       	ret

000035f4 <ProcessFading>:
}


//called by the kernel at each field end
void ProcessFading(){
	if(fadeActive==true){
    35f4:	80 91 c8 09 	lds	r24, 0x09C8	; 0x8009c8 <fadeActive>
    35f8:	88 23       	and	r24, r24
    35fa:	01 f1       	breq	.+64     	; 0x363c <ProcessFading+0x48>
		if(currFadeFrame==0){
    35fc:	80 91 c9 09 	lds	r24, 0x09C9	; 0x8009c9 <currFadeFrame>
    3600:	81 11       	cpse	r24, r1
    3602:	19 c0       	rjmp	.+50     	; 0x3636 <ProcessFading+0x42>
			currFadeFrame=fadeSpeed;
    3604:	80 91 c6 09 	lds	r24, 0x09C6	; 0x8009c6 <fadeSpeed>
    3608:	80 93 c9 09 	sts	0x09C9, r24	; 0x8009c9 <currFadeFrame>
			DDRC = pgm_read_byte(&(fader[fadeStep-1]));
    360c:	e0 91 ca 09 	lds	r30, 0x09CA	; 0x8009ca <fadeStep>
    3610:	f0 e0       	ldi	r31, 0x00	; 0
    3612:	e1 52       	subi	r30, 0x21	; 33
    3614:	ff 4f       	sbci	r31, 0xFF	; 255
    3616:	e4 91       	lpm	r30, Z
    3618:	e7 b9       	out	0x07, r30	; 7
			fadeStep+=fadeDir;
    361a:	90 91 ca 09 	lds	r25, 0x09CA	; 0x8009ca <fadeStep>
    361e:	80 91 c7 09 	lds	r24, 0x09C7	; 0x8009c7 <fadeDir>
    3622:	89 0f       	add	r24, r25
    3624:	80 93 ca 09 	sts	0x09CA, r24	; 0x8009ca <fadeStep>
			if(fadeStep==0 || fadeStep==(FADER_STEPS+1)){
    3628:	88 23       	and	r24, r24
    362a:	11 f0       	breq	.+4      	; 0x3630 <ProcessFading+0x3c>
    362c:	8d 30       	cpi	r24, 0x0D	; 13
    362e:	31 f4       	brne	.+12     	; 0x363c <ProcessFading+0x48>
				fadeActive=false;
    3630:	10 92 c8 09 	sts	0x09C8, r1	; 0x8009c8 <fadeActive>
    3634:	08 95       	ret
			}
		}else{
			currFadeFrame--;
    3636:	81 50       	subi	r24, 0x01	; 1
    3638:	80 93 c9 09 	sts	0x09C9, r24	; 0x8009c9 <currFadeFrame>
    363c:	08 95       	ret

0000363e <getHealth>:
; Get Health
;****************************
.global getHealth
.section .text.getHealth
getHealth:
	ADD R24,R22
    363e:	86 0f       	add	r24, r22
	CLR	R25
    3640:	99 27       	eor	r25, r25
	RET
    3642:	08 95       	ret

00003644 <getScore>:
; Update the Score
;****************************
.global getScore
.section .text.getScore
getScore:
	ADD R24,R22
    3644:	86 0f       	add	r24, r22
	CLR	R25
    3646:	99 27       	eor	r25, r25
	RET
    3648:	08 95       	ret

0000364a <getHealthEnemy>:
; getHealth for enemy
;****************************
.global getHealthEnemy
.section .text.getHealthEnemy
getHealthEnemy:
	ADD R24, R22
    364a:	86 0f       	add	r24, r22
	CLR R25
    364c:	99 27       	eor	r25, r25
	RET
    364e:	08 95       	ret

00003650 <getMoney>:
; getMoney for Player
;****************************
.global getMoney
.section .text.getMoney
getMoney:
	ADD R24, R22
    3650:	86 0f       	add	r24, r22
	CLR R25
    3652:	99 27       	eor	r25, r25
    3654:	08 95       	ret

00003656 <main>:
}

int rnd(int max) {
	int result = rand() % max;
	return result;
}
    3656:	8c ee       	ldi	r24, 0xEC	; 236
    3658:	90 e0       	ldi	r25, 0x00	; 0
    365a:	0e 94 c5 10 	call	0x218a	; 0x218a <SetFontTable>
    365e:	0e 94 56 1b 	call	0x36ac	; 0x36ac <init>
    3662:	81 e0       	ldi	r24, 0x01	; 1
    3664:	90 e0       	ldi	r25, 0x00	; 0
    3666:	0e 94 e3 1a 	call	0x35c6	; 0x35c6 <WaitVsync>
    366a:	80 e0       	ldi	r24, 0x00	; 0
    366c:	0e 94 d4 10 	call	0x21a8	; 0x21a8 <ReadJoypad>
    3670:	90 93 52 09 	sts	0x0952, r25	; 0x800952 <buttonHeld+0x1>
    3674:	80 93 51 09 	sts	0x0951, r24	; 0x800951 <buttonHeld>
    3678:	20 91 57 09 	lds	r18, 0x0957	; 0x800957 <buttonPrevious>
    367c:	30 91 58 09 	lds	r19, 0x0958	; 0x800958 <buttonPrevious+0x1>
    3680:	a9 01       	movw	r20, r18
    3682:	40 95       	com	r20
    3684:	50 95       	com	r21
    3686:	48 23       	and	r20, r24
    3688:	59 23       	and	r21, r25
    368a:	50 93 54 09 	sts	0x0954, r21	; 0x800954 <buttonPressed+0x1>
    368e:	40 93 53 09 	sts	0x0953, r20	; 0x800953 <buttonPressed>
    3692:	80 95       	com	r24
    3694:	90 95       	com	r25
    3696:	82 23       	and	r24, r18
    3698:	93 23       	and	r25, r19
    369a:	90 93 56 09 	sts	0x0956, r25	; 0x800956 <buttonReleased+0x1>
    369e:	80 93 55 09 	sts	0x0955, r24	; 0x800955 <buttonReleased>
    36a2:	0e 94 98 1b 	call	0x3730	; 0x3730 <update>
    36a6:	0e 94 3e 1e 	call	0x3c7c	; 0x3c7c <draw>
    36aa:	db cf       	rjmp	.-74     	; 0x3662 <main+0xc>

000036ac <init>:

void init() {
    36ac:	0f 93       	push	r16
    36ae:	1f 93       	push	r17
    36b0:	cf 93       	push	r28
    36b2:	df 93       	push	r29
		draw();
	}
}

int rnd(int max) {
	int result = rand() % max;
    36b4:	0e 94 73 22 	call	0x44e6	; 0x44e6 <rand>
	return result;
}

void init() {
	heroX = rnd(SCREEN_TILES_H);
    36b8:	08 e2       	ldi	r16, 0x28	; 40
    36ba:	10 e0       	ldi	r17, 0x00	; 0
    36bc:	b8 01       	movw	r22, r16
    36be:	0e 94 97 20 	call	0x412e	; 0x412e <__divmodhi4>
    36c2:	90 93 3d 09 	sts	0x093D, r25	; 0x80093d <heroX+0x1>
    36c6:	80 93 3c 09 	sts	0x093C, r24	; 0x80093c <heroX>
		draw();
	}
}

int rnd(int max) {
	int result = rand() % max;
    36ca:	0e 94 73 22 	call	0x44e6	; 0x44e6 <rand>
	return result;
}

void init() {
	heroX = rnd(SCREEN_TILES_H);
	heroY = rnd(SCREEN_TILES_V);
    36ce:	c2 e1       	ldi	r28, 0x12	; 18
    36d0:	d0 e0       	ldi	r29, 0x00	; 0
    36d2:	be 01       	movw	r22, r28
    36d4:	0e 94 97 20 	call	0x412e	; 0x412e <__divmodhi4>
    36d8:	90 93 3f 09 	sts	0x093F, r25	; 0x80093f <heroY+0x1>
    36dc:	80 93 3e 09 	sts	0x093E, r24	; 0x80093e <heroY>
	enemyY = 0;
    36e0:	10 92 42 09 	sts	0x0942, r1	; 0x800942 <enemyY>
    36e4:	10 92 43 09 	sts	0x0943, r1	; 0x800943 <enemyY+0x1>
    36e8:	10 92 44 09 	sts	0x0944, r1	; 0x800944 <enemyY+0x2>
    36ec:	10 92 45 09 	sts	0x0945, r1	; 0x800945 <enemyY+0x3>
		draw();
	}
}

int rnd(int max) {
	int result = rand() % max;
    36f0:	0e 94 73 22 	call	0x44e6	; 0x44e6 <rand>
void init() {
	heroX = rnd(SCREEN_TILES_H);
	heroY = rnd(SCREEN_TILES_V);
	enemyY = 0;

	enemyX = rnd(SCREEN_TILES_V);
    36f4:	be 01       	movw	r22, r28
    36f6:	0e 94 97 20 	call	0x412e	; 0x412e <__divmodhi4>
    36fa:	90 93 41 09 	sts	0x0941, r25	; 0x800941 <enemyX+0x1>
    36fe:	80 93 40 09 	sts	0x0940, r24	; 0x800940 <enemyX>
		draw();
	}
}

int rnd(int max) {
	int result = rand() % max;
    3702:	0e 94 73 22 	call	0x44e6	; 0x44e6 <rand>
	heroX = rnd(SCREEN_TILES_H);
	heroY = rnd(SCREEN_TILES_V);
	enemyY = 0;

	enemyX = rnd(SCREEN_TILES_V);
	followerY = rnd(SCREEN_TILES_V);
    3706:	be 01       	movw	r22, r28
    3708:	0e 94 97 20 	call	0x412e	; 0x412e <__divmodhi4>
    370c:	90 93 4b 09 	sts	0x094B, r25	; 0x80094b <followerY+0x1>
    3710:	80 93 4a 09 	sts	0x094A, r24	; 0x80094a <followerY>
		draw();
	}
}

int rnd(int max) {
	int result = rand() % max;
    3714:	0e 94 73 22 	call	0x44e6	; 0x44e6 <rand>
	heroY = rnd(SCREEN_TILES_V);
	enemyY = 0;

	enemyX = rnd(SCREEN_TILES_V);
	followerY = rnd(SCREEN_TILES_V);
	followerX = rnd(SCREEN_TILES_H);
    3718:	b8 01       	movw	r22, r16
    371a:	0e 94 97 20 	call	0x412e	; 0x412e <__divmodhi4>
    371e:	90 93 49 09 	sts	0x0949, r25	; 0x800949 <followerX+0x1>
    3722:	80 93 48 09 	sts	0x0948, r24	; 0x800948 <followerX>
}
    3726:	df 91       	pop	r29
    3728:	cf 91       	pop	r28
    372a:	1f 91       	pop	r17
    372c:	0f 91       	pop	r16
    372e:	08 95       	ret

00003730 <update>:

void update() {
    3730:	af 92       	push	r10
    3732:	bf 92       	push	r11
    3734:	cf 92       	push	r12
    3736:	df 92       	push	r13
    3738:	ef 92       	push	r14
    373a:	ff 92       	push	r15
    373c:	0f 93       	push	r16
    373e:	1f 93       	push	r17
    3740:	cf 93       	push	r28
    3742:	df 93       	push	r29

	switch(buttonPressed){
    3744:	80 91 53 09 	lds	r24, 0x0953	; 0x800953 <buttonPressed>
    3748:	90 91 54 09 	lds	r25, 0x0954	; 0x800954 <buttonPressed+0x1>
    374c:	80 32       	cpi	r24, 0x20	; 32
    374e:	91 05       	cpc	r25, r1
    3750:	e9 f0       	breq	.+58     	; 0x378c <update+0x5c>
    3752:	4c f4       	brge	.+18     	; 0x3766 <update+0x36>
    3754:	82 30       	cpi	r24, 0x02	; 2
    3756:	91 05       	cpc	r25, r1
    3758:	81 f1       	breq	.+96     	; 0x37ba <update+0x8a>
    375a:	80 31       	cpi	r24, 0x10	; 16
    375c:	91 05       	cpc	r25, r1
    375e:	99 f0       	breq	.+38     	; 0x3786 <update+0x56>
    3760:	01 97       	sbiw	r24, 0x01	; 1
    3762:	89 f5       	brne	.+98     	; 0x37c6 <update+0x96>
    3764:	13 c0       	rjmp	.+38     	; 0x378c <update+0x5c>
    3766:	80 38       	cpi	r24, 0x80	; 128
    3768:	91 05       	cpc	r25, r1
    376a:	39 f1       	breq	.+78     	; 0x37ba <update+0x8a>
    376c:	24 f4       	brge	.+8      	; 0x3776 <update+0x46>
    376e:	80 34       	cpi	r24, 0x40	; 64
    3770:	91 05       	cpc	r25, r1
    3772:	f1 f0       	breq	.+60     	; 0x37b0 <update+0x80>
    3774:	28 c0       	rjmp	.+80     	; 0x37c6 <update+0x96>
    3776:	81 15       	cp	r24, r1
    3778:	21 e0       	ldi	r18, 0x01	; 1
    377a:	92 07       	cpc	r25, r18
    377c:	61 f0       	breq	.+24     	; 0x3796 <update+0x66>
    377e:	81 15       	cp	r24, r1
    3780:	92 40       	sbci	r25, 0x02	; 2
    3782:	b1 f0       	breq	.+44     	; 0x37b0 <update+0x80>
    3784:	20 c0       	rjmp	.+64     	; 0x37c6 <update+0x96>
		case BTN_UP:{
			MoveHero(0, -2);
    3786:	6e ef       	ldi	r22, 0xFE	; 254
    3788:	7f ef       	ldi	r23, 0xFF	; 255
    378a:	02 c0       	rjmp	.+4      	; 0x3790 <update+0x60>
			break;
		}
		case BTN_DOWN:{
			MoveHero(0, 2);
    378c:	62 e0       	ldi	r22, 0x02	; 2
    378e:	70 e0       	ldi	r23, 0x00	; 0
    3790:	80 e0       	ldi	r24, 0x00	; 0
    3792:	90 e0       	ldi	r25, 0x00	; 0
    3794:	16 c0       	rjmp	.+44     	; 0x37c2 <update+0x92>
			MoveHero(2, 0);
			break;
		}
		case BTN_A:{
			//MoveHero(0, -2);
			if(moneyValue >= 20)
    3796:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <moneyValue>
    379a:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <moneyValue+0x1>
    379e:	44 97       	sbiw	r24, 0x14	; 20
    37a0:	94 f0       	brlt	.+36     	; 0x37c6 <update+0x96>
			{
				heroWidth = 5;
    37a2:	85 e0       	ldi	r24, 0x05	; 5
    37a4:	90 e0       	ldi	r25, 0x00	; 0
    37a6:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
    37aa:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
    37ae:	0b c0       	rjmp	.+22     	; 0x37c6 <update+0x96>
			MoveHero(0, 2);
			//heroWidth = 5;
			break;
		}
		case BTN_X:{
			MoveHero(-2, 0);
    37b0:	60 e0       	ldi	r22, 0x00	; 0
    37b2:	70 e0       	ldi	r23, 0x00	; 0
    37b4:	8e ef       	ldi	r24, 0xFE	; 254
    37b6:	9f ef       	ldi	r25, 0xFF	; 255
    37b8:	04 c0       	rjmp	.+8      	; 0x37c2 <update+0x92>
			//heroWidth = 5;
			break;
		}
		case BTN_Y:{
			MoveHero(2, 0);
    37ba:	60 e0       	ldi	r22, 0x00	; 0
    37bc:	70 e0       	ldi	r23, 0x00	; 0
    37be:	82 e0       	ldi	r24, 0x02	; 2
    37c0:	90 e0       	ldi	r25, 0x00	; 0
    37c2:	0e 94 d3 1f 	call	0x3fa6	; 0x3fa6 <MoveHero>
		default:
			break;
	}


	buttonPrevious = buttonHeld;
    37c6:	80 91 51 09 	lds	r24, 0x0951	; 0x800951 <buttonHeld>
    37ca:	90 91 52 09 	lds	r25, 0x0952	; 0x800952 <buttonHeld+0x1>
    37ce:	90 93 58 09 	sts	0x0958, r25	; 0x800958 <buttonPrevious+0x1>
    37d2:	80 93 57 09 	sts	0x0957, r24	; 0x800957 <buttonPrevious>
	buttonPrevious = buttonHeld;

	followerThinkTime++;
    37d6:	20 91 4c 09 	lds	r18, 0x094C	; 0x80094c <followerThinkTime>
    37da:	30 91 4d 09 	lds	r19, 0x094D	; 0x80094d <followerThinkTime+0x1>
    37de:	2f 5f       	subi	r18, 0xFF	; 255
    37e0:	3f 4f       	sbci	r19, 0xFF	; 255
    37e2:	30 93 4d 09 	sts	0x094D, r19	; 0x80094d <followerThinkTime+0x1>
    37e6:	20 93 4c 09 	sts	0x094C, r18	; 0x80094c <followerThinkTime>
	if (followerThinkTime > followerThinkInterval) {
    37ea:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <followerThinkInterval>
    37ee:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <followerThinkInterval+0x1>
    37f2:	82 17       	cp	r24, r18
    37f4:	93 07       	cpc	r25, r19
    37f6:	0c f0       	brlt	.+2      	; 0x37fa <update+0xca>
    37f8:	40 c0       	rjmp	.+128    	; 0x387a <update+0x14a>
		if (followerX < heroX)
    37fa:	20 91 48 09 	lds	r18, 0x0948	; 0x800948 <followerX>
    37fe:	30 91 49 09 	lds	r19, 0x0949	; 0x800949 <followerX+0x1>
    3802:	40 91 3c 09 	lds	r20, 0x093C	; 0x80093c <heroX>
    3806:	50 91 3d 09 	lds	r21, 0x093D	; 0x80093d <heroX+0x1>
    380a:	24 17       	cp	r18, r20
    380c:	35 07       	cpc	r19, r21
    380e:	34 f4       	brge	.+12     	; 0x381c <update+0xec>
			followerX++;
    3810:	2f 5f       	subi	r18, 0xFF	; 255
    3812:	3f 4f       	sbci	r19, 0xFF	; 255
    3814:	30 93 49 09 	sts	0x0949, r19	; 0x800949 <followerX+0x1>
    3818:	20 93 48 09 	sts	0x0948, r18	; 0x800948 <followerX>
		if (followerX > heroX)
    381c:	20 91 48 09 	lds	r18, 0x0948	; 0x800948 <followerX>
    3820:	30 91 49 09 	lds	r19, 0x0949	; 0x800949 <followerX+0x1>
    3824:	42 17       	cp	r20, r18
    3826:	53 07       	cpc	r21, r19
    3828:	34 f4       	brge	.+12     	; 0x3836 <update+0x106>
			followerX--;
    382a:	21 50       	subi	r18, 0x01	; 1
    382c:	31 09       	sbc	r19, r1
    382e:	30 93 49 09 	sts	0x0949, r19	; 0x800949 <followerX+0x1>
    3832:	20 93 48 09 	sts	0x0948, r18	; 0x800948 <followerX>
		if (followerY < heroY)
    3836:	20 91 4a 09 	lds	r18, 0x094A	; 0x80094a <followerY>
    383a:	30 91 4b 09 	lds	r19, 0x094B	; 0x80094b <followerY+0x1>
    383e:	40 91 3e 09 	lds	r20, 0x093E	; 0x80093e <heroY>
    3842:	50 91 3f 09 	lds	r21, 0x093F	; 0x80093f <heroY+0x1>
    3846:	24 17       	cp	r18, r20
    3848:	35 07       	cpc	r19, r21
    384a:	34 f4       	brge	.+12     	; 0x3858 <update+0x128>
			followerY++;
    384c:	2f 5f       	subi	r18, 0xFF	; 255
    384e:	3f 4f       	sbci	r19, 0xFF	; 255
    3850:	30 93 4b 09 	sts	0x094B, r19	; 0x80094b <followerY+0x1>
    3854:	20 93 4a 09 	sts	0x094A, r18	; 0x80094a <followerY>
		if (followerY > heroY)
    3858:	20 91 4a 09 	lds	r18, 0x094A	; 0x80094a <followerY>
    385c:	30 91 4b 09 	lds	r19, 0x094B	; 0x80094b <followerY+0x1>
    3860:	42 17       	cp	r20, r18
    3862:	53 07       	cpc	r21, r19
    3864:	34 f4       	brge	.+12     	; 0x3872 <update+0x142>
			followerY--;
    3866:	21 50       	subi	r18, 0x01	; 1
    3868:	31 09       	sbc	r19, r1
    386a:	30 93 4b 09 	sts	0x094B, r19	; 0x80094b <followerY+0x1>
    386e:	20 93 4a 09 	sts	0x094A, r18	; 0x80094a <followerY>
		followerThinkTime = 0;
    3872:	10 92 4d 09 	sts	0x094D, r1	; 0x80094d <followerThinkTime+0x1>
    3876:	10 92 4c 09 	sts	0x094C, r1	; 0x80094c <followerThinkTime>
	}
	if (score > 5 && followerThinkInterval > 0) {
    387a:	20 91 4e 09 	lds	r18, 0x094E	; 0x80094e <score>
    387e:	30 91 4f 09 	lds	r19, 0x094F	; 0x80094f <score+0x1>
    3882:	26 30       	cpi	r18, 0x06	; 6
    3884:	31 05       	cpc	r19, r1
    3886:	2c f0       	brlt	.+10     	; 0x3892 <update+0x162>
    3888:	18 16       	cp	r1, r24
    388a:	19 06       	cpc	r1, r25
    388c:	6c f4       	brge	.+26     	; 0x38a8 <update+0x178>
		followerThinkInterval--;
    388e:	01 97       	sbiw	r24, 0x01	; 1
    3890:	07 c0       	rjmp	.+14     	; 0x38a0 <update+0x170>
	}

	if (score == 0 && followerThinkInterval <= 0){
    3892:	23 2b       	or	r18, r19
    3894:	49 f4       	brne	.+18     	; 0x38a8 <update+0x178>
    3896:	18 16       	cp	r1, r24
    3898:	19 06       	cpc	r1, r25
    389a:	34 f0       	brlt	.+12     	; 0x38a8 <update+0x178>
		followerThinkInterval = FOLLOWER_TIME_INTERVAL;
    389c:	8c e2       	ldi	r24, 0x2C	; 44
    389e:	91 e0       	ldi	r25, 0x01	; 1
    38a0:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <followerThinkInterval+0x1>
    38a4:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <followerThinkInterval>
	
		
	

	//write code to move the enemy down screen
	enemyY+= 0.15;
    38a8:	2a e9       	ldi	r18, 0x9A	; 154
    38aa:	39 e9       	ldi	r19, 0x99	; 153
    38ac:	49 e1       	ldi	r20, 0x19	; 25
    38ae:	5e e3       	ldi	r21, 0x3E	; 62
    38b0:	60 91 42 09 	lds	r22, 0x0942	; 0x800942 <enemyY>
    38b4:	70 91 43 09 	lds	r23, 0x0943	; 0x800943 <enemyY+0x1>
    38b8:	80 91 44 09 	lds	r24, 0x0944	; 0x800944 <enemyY+0x2>
    38bc:	90 91 45 09 	lds	r25, 0x0945	; 0x800945 <enemyY+0x3>
    38c0:	0e 94 ce 20 	call	0x419c	; 0x419c <__addsf3>
    38c4:	6b 01       	movw	r12, r22
    38c6:	7c 01       	movw	r14, r24
    38c8:	60 93 42 09 	sts	0x0942, r22	; 0x800942 <enemyY>
    38cc:	70 93 43 09 	sts	0x0943, r23	; 0x800943 <enemyY+0x1>
    38d0:	80 93 44 09 	sts	0x0944, r24	; 0x800944 <enemyY+0x2>
    38d4:	90 93 45 09 	sts	0x0945, r25	; 0x800945 <enemyY+0x3>
	//wallY++;
	
	// check if the enemy has reached the bottom of the screen
	if (enemyY >= SCREEN_TILES_V - enemyHeight) 
    38d8:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <enemyHeight>
    38dc:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <enemyHeight+0x1>
    38e0:	62 e1       	ldi	r22, 0x12	; 18
    38e2:	70 e0       	ldi	r23, 0x00	; 0
    38e4:	68 1b       	sub	r22, r24
    38e6:	79 0b       	sbc	r23, r25
    38e8:	07 2e       	mov	r0, r23
    38ea:	00 0c       	add	r0, r0
    38ec:	88 0b       	sbc	r24, r24
    38ee:	99 0b       	sbc	r25, r25
    38f0:	0e 94 72 21 	call	0x42e4	; 0x42e4 <__floatsisf>
    38f4:	9b 01       	movw	r18, r22
    38f6:	ac 01       	movw	r20, r24
    38f8:	c7 01       	movw	r24, r14
    38fa:	b6 01       	movw	r22, r12
    38fc:	0e 94 fe 21 	call	0x43fc	; 0x43fc <__gesf2>
    3900:	87 fd       	sbrc	r24, 7
    3902:	19 c0       	rjmp	.+50     	; 0x3936 <update+0x206>
	{
		// reset enemy here..
		// to top of screen and a random y
		enemyX = rnd(SCREEN_TILES_H - enemyWidth);
    3904:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <enemyWidth>
    3908:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <enemyWidth+0x1>
    390c:	c8 e2       	ldi	r28, 0x28	; 40
    390e:	d0 e0       	ldi	r29, 0x00	; 0
    3910:	c8 1b       	sub	r28, r24
    3912:	d9 0b       	sbc	r29, r25
		draw();
	}
}

int rnd(int max) {
	int result = rand() % max;
    3914:	0e 94 73 22 	call	0x44e6	; 0x44e6 <rand>
	// check if the enemy has reached the bottom of the screen
	if (enemyY >= SCREEN_TILES_V - enemyHeight) 
	{
		// reset enemy here..
		// to top of screen and a random y
		enemyX = rnd(SCREEN_TILES_H - enemyWidth);
    3918:	be 01       	movw	r22, r28
    391a:	0e 94 97 20 	call	0x412e	; 0x412e <__divmodhi4>
    391e:	90 93 41 09 	sts	0x0941, r25	; 0x800941 <enemyX+0x1>
    3922:	80 93 40 09 	sts	0x0940, r24	; 0x800940 <enemyX>
		enemyY = 0;
    3926:	10 92 42 09 	sts	0x0942, r1	; 0x800942 <enemyY>
    392a:	10 92 43 09 	sts	0x0943, r1	; 0x800943 <enemyY+0x1>
    392e:	10 92 44 09 	sts	0x0944, r1	; 0x800944 <enemyY+0x2>
    3932:	10 92 45 09 	sts	0x0945, r1	; 0x800945 <enemyY+0x3>
	}
	if(wallY >= SCREEN_TILES_V - wallWidth)
    3936:	20 91 0c 01 	lds	r18, 0x010C	; 0x80010c <wallWidth>
    393a:	30 91 0d 01 	lds	r19, 0x010D	; 0x80010d <wallWidth+0x1>
    393e:	82 e1       	ldi	r24, 0x12	; 18
    3940:	90 e0       	ldi	r25, 0x00	; 0
    3942:	82 1b       	sub	r24, r18
    3944:	93 0b       	sbc	r25, r19
    3946:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <wallY>
    394a:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <wallY+0x1>
    394e:	28 17       	cp	r18, r24
    3950:	39 07       	cpc	r19, r25
    3952:	ac f0       	brlt	.+42     	; 0x397e <update+0x24e>
	{
		wallX = rnd(SCREEN_TILES_H - enemyWidth);
    3954:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <enemyWidth>
    3958:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <enemyWidth+0x1>
    395c:	c8 e2       	ldi	r28, 0x28	; 40
    395e:	d0 e0       	ldi	r29, 0x00	; 0
    3960:	c8 1b       	sub	r28, r24
    3962:	d9 0b       	sbc	r29, r25
		draw();
	}
}

int rnd(int max) {
	int result = rand() % max;
    3964:	0e 94 73 22 	call	0x44e6	; 0x44e6 <rand>
		enemyX = rnd(SCREEN_TILES_H - enemyWidth);
		enemyY = 0;
	}
	if(wallY >= SCREEN_TILES_V - wallWidth)
	{
		wallX = rnd(SCREEN_TILES_H - enemyWidth);
    3968:	be 01       	movw	r22, r28
    396a:	0e 94 97 20 	call	0x412e	; 0x412e <__divmodhi4>
    396e:	90 93 47 09 	sts	0x0947, r25	; 0x800947 <wallX+0x1>
    3972:	80 93 46 09 	sts	0x0946, r24	; 0x800946 <wallX>
		wallY = 0;
    3976:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <wallY+0x1>
    397a:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <wallY>
	}
	if (checkCollision(heroX, heroY, heroWidth, heroHeight, enemyX, enemyY,
    397e:	a0 90 06 01 	lds	r10, 0x0106	; 0x800106 <enemyHeight>
    3982:	b0 90 07 01 	lds	r11, 0x0107	; 0x800107 <enemyHeight+0x1>
    3986:	c0 90 04 01 	lds	r12, 0x0104	; 0x800104 <enemyWidth>
    398a:	d0 90 05 01 	lds	r13, 0x0105	; 0x800105 <enemyWidth+0x1>
    398e:	60 91 42 09 	lds	r22, 0x0942	; 0x800942 <enemyY>
    3992:	70 91 43 09 	lds	r23, 0x0943	; 0x800943 <enemyY+0x1>
    3996:	80 91 44 09 	lds	r24, 0x0944	; 0x800944 <enemyY+0x2>
    399a:	90 91 45 09 	lds	r25, 0x0945	; 0x800945 <enemyY+0x3>
    399e:	0e 94 3a 21 	call	0x4274	; 0x4274 <__fixsfsi>
    39a2:	00 91 40 09 	lds	r16, 0x0940	; 0x800940 <enemyX>
    39a6:	10 91 41 09 	lds	r17, 0x0941	; 0x800941 <enemyX+0x1>
    39aa:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <heroHeight>
    39ae:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <heroHeight+0x1>
    39b2:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__data_start>
    39b6:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__data_start+0x1>
    39ba:	e0 91 3e 09 	lds	r30, 0x093E	; 0x80093e <heroY>
    39be:	f0 91 3f 09 	lds	r31, 0x093F	; 0x80093f <heroY+0x1>
    39c2:	7b 01       	movw	r14, r22
    39c4:	bf 01       	movw	r22, r30
    39c6:	80 91 3c 09 	lds	r24, 0x093C	; 0x80093c <heroX>
    39ca:	90 91 3d 09 	lds	r25, 0x093D	; 0x80093d <heroX+0x1>
    39ce:	0e 94 ac 1f 	call	0x3f58	; 0x3f58 <checkCollision>
    39d2:	88 23       	and	r24, r24
    39d4:	81 f1       	breq	.+96     	; 0x3a36 <update+0x306>
			enemyWidth, enemyHeight) == true) {
		// write code to add score and reset enemy
		score = getScore(score, -1);
    39d6:	6f ef       	ldi	r22, 0xFF	; 255
    39d8:	7f ef       	ldi	r23, 0xFF	; 255
    39da:	80 91 4e 09 	lds	r24, 0x094E	; 0x80094e <score>
    39de:	90 91 4f 09 	lds	r25, 0x094F	; 0x80094f <score+0x1>
    39e2:	0e 94 22 1b 	call	0x3644	; 0x3644 <getScore>
		//health = getHealth(health, -1);
		if(score <= 0 || score >= 254)
    39e6:	9c 01       	movw	r18, r24
    39e8:	21 50       	subi	r18, 0x01	; 1
    39ea:	31 09       	sbc	r19, r1
    39ec:	2d 3f       	cpi	r18, 0xFD	; 253
    39ee:	31 05       	cpc	r19, r1
    39f0:	28 f4       	brcc	.+10     	; 0x39fc <update+0x2cc>
		wallY = 0;
	}
	if (checkCollision(heroX, heroY, heroWidth, heroHeight, enemyX, enemyY,
			enemyWidth, enemyHeight) == true) {
		// write code to add score and reset enemy
		score = getScore(score, -1);
    39f2:	90 93 4f 09 	sts	0x094F, r25	; 0x80094f <score+0x1>
    39f6:	80 93 4e 09 	sts	0x094E, r24	; 0x80094e <score>
    39fa:	04 c0       	rjmp	.+8      	; 0x3a04 <update+0x2d4>
		//health = getHealth(health, -1);
		if(score <= 0 || score >= 254)
		{
			score = 0;
    39fc:	10 92 4f 09 	sts	0x094F, r1	; 0x80094f <score+0x1>
    3a00:	10 92 4e 09 	sts	0x094E, r1	; 0x80094e <score>
		}
		enemyX = rnd(SCREEN_TILES_H - enemyWidth);
    3a04:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <enemyWidth>
    3a08:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <enemyWidth+0x1>
    3a0c:	c8 e2       	ldi	r28, 0x28	; 40
    3a0e:	d0 e0       	ldi	r29, 0x00	; 0
    3a10:	c8 1b       	sub	r28, r24
    3a12:	d9 0b       	sbc	r29, r25
		draw();
	}
}

int rnd(int max) {
	int result = rand() % max;
    3a14:	0e 94 73 22 	call	0x44e6	; 0x44e6 <rand>
		//health = getHealth(health, -1);
		if(score <= 0 || score >= 254)
		{
			score = 0;
		}
		enemyX = rnd(SCREEN_TILES_H - enemyWidth);
    3a18:	be 01       	movw	r22, r28
    3a1a:	0e 94 97 20 	call	0x412e	; 0x412e <__divmodhi4>
    3a1e:	90 93 41 09 	sts	0x0941, r25	; 0x800941 <enemyX+0x1>
    3a22:	80 93 40 09 	sts	0x0940, r24	; 0x800940 <enemyX>
		enemyY = 0;
    3a26:	10 92 42 09 	sts	0x0942, r1	; 0x800942 <enemyY>
    3a2a:	10 92 43 09 	sts	0x0943, r1	; 0x800943 <enemyY+0x1>
    3a2e:	10 92 44 09 	sts	0x0944, r1	; 0x800944 <enemyY+0x2>
    3a32:	10 92 45 09 	sts	0x0945, r1	; 0x800945 <enemyY+0x3>
	}

	if (checkCollision(heroX, heroY, heroWidth, heroHeight, followerX,
    3a36:	a0 90 18 01 	lds	r10, 0x0118	; 0x800118 <followerHeight>
    3a3a:	b0 90 19 01 	lds	r11, 0x0119	; 0x800119 <followerHeight+0x1>
    3a3e:	c0 90 16 01 	lds	r12, 0x0116	; 0x800116 <followerWidth>
    3a42:	d0 90 17 01 	lds	r13, 0x0117	; 0x800117 <followerWidth+0x1>
    3a46:	e0 90 4a 09 	lds	r14, 0x094A	; 0x80094a <followerY>
    3a4a:	f0 90 4b 09 	lds	r15, 0x094B	; 0x80094b <followerY+0x1>
    3a4e:	00 91 48 09 	lds	r16, 0x0948	; 0x800948 <followerX>
    3a52:	10 91 49 09 	lds	r17, 0x0949	; 0x800949 <followerX+0x1>
    3a56:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <heroHeight>
    3a5a:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <heroHeight+0x1>
    3a5e:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__data_start>
    3a62:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__data_start+0x1>
    3a66:	60 91 3e 09 	lds	r22, 0x093E	; 0x80093e <heroY>
    3a6a:	70 91 3f 09 	lds	r23, 0x093F	; 0x80093f <heroY+0x1>
    3a6e:	80 91 3c 09 	lds	r24, 0x093C	; 0x80093c <heroX>
    3a72:	90 91 3d 09 	lds	r25, 0x093D	; 0x80093d <heroX+0x1>
    3a76:	0e 94 ac 1f 	call	0x3f58	; 0x3f58 <checkCollision>
    3a7a:	88 23       	and	r24, r24
    3a7c:	61 f1       	breq	.+88     	; 0x3ad6 <update+0x3a6>
			followerY, followerWidth, followerHeight) == true) {
		// write code to add score and reset enemy
		//follower = the x rectangle
		//score = getScore(score, 1);
		health = getHealth(health, -1);
    3a7e:	6f ef       	ldi	r22, 0xFF	; 255
    3a80:	7f ef       	ldi	r23, 0xFF	; 255
    3a82:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <health>
    3a86:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <health+0x1>
    3a8a:	0e 94 1f 1b 	call	0x363e	; 0x363e <getHealth>
    3a8e:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <health+0x1>
    3a92:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <health>
		if(score <= 0 )
    3a96:	80 91 4e 09 	lds	r24, 0x094E	; 0x80094e <score>
    3a9a:	90 91 4f 09 	lds	r25, 0x094F	; 0x80094f <score+0x1>
    3a9e:	18 16       	cp	r1, r24
    3aa0:	19 06       	cpc	r1, r25
    3aa2:	24 f0       	brlt	.+8      	; 0x3aac <update+0x37c>
		{
			score = 0;
    3aa4:	10 92 4f 09 	sts	0x094F, r1	; 0x80094f <score+0x1>
    3aa8:	10 92 4e 09 	sts	0x094E, r1	; 0x80094e <score>
		}
		followerX = rnd(SCREEN_TILES_H - followerWidth);
    3aac:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <followerWidth>
    3ab0:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <followerWidth+0x1>
    3ab4:	c8 e2       	ldi	r28, 0x28	; 40
    3ab6:	d0 e0       	ldi	r29, 0x00	; 0
    3ab8:	c8 1b       	sub	r28, r24
    3aba:	d9 0b       	sbc	r29, r25
		draw();
	}
}

int rnd(int max) {
	int result = rand() % max;
    3abc:	0e 94 73 22 	call	0x44e6	; 0x44e6 <rand>
		health = getHealth(health, -1);
		if(score <= 0 )
		{
			score = 0;
		}
		followerX = rnd(SCREEN_TILES_H - followerWidth);
    3ac0:	be 01       	movw	r22, r28
    3ac2:	0e 94 97 20 	call	0x412e	; 0x412e <__divmodhi4>
    3ac6:	90 93 49 09 	sts	0x0949, r25	; 0x800949 <followerX+0x1>
    3aca:	80 93 48 09 	sts	0x0948, r24	; 0x800948 <followerX>
		followerY = 0;//rnd(SCREEN_TILES_V - wallHeight);
    3ace:	10 92 4b 09 	sts	0x094B, r1	; 0x80094b <followerY+0x1>
    3ad2:	10 92 4a 09 	sts	0x094A, r1	; 0x80094a <followerY>
	}

	if(checkCollision(heroX,heroY,heroWidth,heroHeight,wallX
    3ad6:	a0 90 0a 01 	lds	r10, 0x010A	; 0x80010a <wallHeight>
    3ada:	b0 90 0b 01 	lds	r11, 0x010B	; 0x80010b <wallHeight+0x1>
    3ade:	c0 90 0c 01 	lds	r12, 0x010C	; 0x80010c <wallWidth>
    3ae2:	d0 90 0d 01 	lds	r13, 0x010D	; 0x80010d <wallWidth+0x1>
    3ae6:	e0 90 08 01 	lds	r14, 0x0108	; 0x800108 <wallY>
    3aea:	f0 90 09 01 	lds	r15, 0x0109	; 0x800109 <wallY+0x1>
    3aee:	00 91 46 09 	lds	r16, 0x0946	; 0x800946 <wallX>
    3af2:	10 91 47 09 	lds	r17, 0x0947	; 0x800947 <wallX+0x1>
    3af6:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <heroHeight>
    3afa:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <heroHeight+0x1>
    3afe:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__data_start>
    3b02:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__data_start+0x1>
    3b06:	60 91 3e 09 	lds	r22, 0x093E	; 0x80093e <heroY>
    3b0a:	70 91 3f 09 	lds	r23, 0x093F	; 0x80093f <heroY+0x1>
    3b0e:	80 91 3c 09 	lds	r24, 0x093C	; 0x80093c <heroX>
    3b12:	90 91 3d 09 	lds	r25, 0x093D	; 0x80093d <heroX+0x1>
    3b16:	0e 94 ac 1f 	call	0x3f58	; 0x3f58 <checkCollision>
    3b1a:	88 23       	and	r24, r24
    3b1c:	09 f4       	brne	.+2      	; 0x3b20 <update+0x3f0>
    3b1e:	4c c0       	rjmp	.+152    	; 0x3bb8 <update+0x488>
					,wallY,wallWidth,wallHeight) == true)
		{
			score = getScore(score,1);
    3b20:	61 e0       	ldi	r22, 0x01	; 1
    3b22:	70 e0       	ldi	r23, 0x00	; 0
    3b24:	80 91 4e 09 	lds	r24, 0x094E	; 0x80094e <score>
    3b28:	90 91 4f 09 	lds	r25, 0x094F	; 0x80094f <score+0x1>
    3b2c:	0e 94 22 1b 	call	0x3644	; 0x3644 <getScore>
    3b30:	90 93 4f 09 	sts	0x094F, r25	; 0x80094f <score+0x1>
    3b34:	80 93 4e 09 	sts	0x094E, r24	; 0x80094e <score>
			enemyHealth = getHealthEnemy(enemyHealth, -1);
    3b38:	6f ef       	ldi	r22, 0xFF	; 255
    3b3a:	7f ef       	ldi	r23, 0xFF	; 255
    3b3c:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <enemyHealth>
    3b40:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <enemyHealth+0x1>
    3b44:	0e 94 25 1b 	call	0x364a	; 0x364a <getHealthEnemy>
    3b48:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <enemyHealth+0x1>
    3b4c:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <enemyHealth>
			if(score <= 0)
    3b50:	20 91 4e 09 	lds	r18, 0x094E	; 0x80094e <score>
    3b54:	30 91 4f 09 	lds	r19, 0x094F	; 0x80094f <score+0x1>
    3b58:	12 16       	cp	r1, r18
    3b5a:	13 06       	cpc	r1, r19
    3b5c:	24 f0       	brlt	.+8      	; 0x3b66 <update+0x436>
			{
				score = 0;
    3b5e:	10 92 4f 09 	sts	0x094F, r1	; 0x80094f <score+0x1>
    3b62:	10 92 4e 09 	sts	0x094E, r1	; 0x80094e <score>
			}
			if(enemyHealth <= 0 || enemyHealth >=230)
    3b66:	01 97       	sbiw	r24, 0x01	; 1
    3b68:	85 3e       	cpi	r24, 0xE5	; 229
    3b6a:	91 05       	cpc	r25, r1
    3b6c:	20 f0       	brcs	.+8      	; 0x3b76 <update+0x446>
			{
				enemyHealth = 0;
    3b6e:	10 92 1f 01 	sts	0x011F, r1	; 0x80011f <enemyHealth+0x1>
    3b72:	10 92 1e 01 	sts	0x011E, r1	; 0x80011e <enemyHealth>
			}
			wallX = rnd(SCREEN_TILES_V - wallWidth);
    3b76:	c2 e1       	ldi	r28, 0x12	; 18
    3b78:	d0 e0       	ldi	r29, 0x00	; 0
    3b7a:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <wallWidth>
    3b7e:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <wallWidth+0x1>
    3b82:	8e 01       	movw	r16, r28
    3b84:	08 1b       	sub	r16, r24
    3b86:	19 0b       	sbc	r17, r25
		draw();
	}
}

int rnd(int max) {
	int result = rand() % max;
    3b88:	0e 94 73 22 	call	0x44e6	; 0x44e6 <rand>
			}
			if(enemyHealth <= 0 || enemyHealth >=230)
			{
				enemyHealth = 0;
			}
			wallX = rnd(SCREEN_TILES_V - wallWidth);
    3b8c:	b8 01       	movw	r22, r16
    3b8e:	0e 94 97 20 	call	0x412e	; 0x412e <__divmodhi4>
    3b92:	90 93 47 09 	sts	0x0947, r25	; 0x800947 <wallX+0x1>
    3b96:	80 93 46 09 	sts	0x0946, r24	; 0x800946 <wallX>
			wallY = rnd(SCREEN_TILES_V - wallHeight);
    3b9a:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <wallHeight>
    3b9e:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <wallHeight+0x1>
    3ba2:	c8 1b       	sub	r28, r24
    3ba4:	d9 0b       	sbc	r29, r25
		draw();
	}
}

int rnd(int max) {
	int result = rand() % max;
    3ba6:	0e 94 73 22 	call	0x44e6	; 0x44e6 <rand>
			if(enemyHealth <= 0 || enemyHealth >=230)
			{
				enemyHealth = 0;
			}
			wallX = rnd(SCREEN_TILES_V - wallWidth);
			wallY = rnd(SCREEN_TILES_V - wallHeight);
    3baa:	be 01       	movw	r22, r28
    3bac:	0e 94 97 20 	call	0x412e	; 0x412e <__divmodhi4>
    3bb0:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <wallY+0x1>
    3bb4:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <wallY>
		}

	if(checkCollision(heroX,heroY,heroWidth,heroHeight,moneyX,
    3bb8:	a0 90 14 01 	lds	r10, 0x0114	; 0x800114 <moneyHeight>
    3bbc:	b0 90 15 01 	lds	r11, 0x0115	; 0x800115 <moneyHeight+0x1>
    3bc0:	c0 90 12 01 	lds	r12, 0x0112	; 0x800112 <moneyWidth>
    3bc4:	d0 90 13 01 	lds	r13, 0x0113	; 0x800113 <moneyWidth+0x1>
    3bc8:	e0 90 10 01 	lds	r14, 0x0110	; 0x800110 <moneyY>
    3bcc:	f0 90 11 01 	lds	r15, 0x0111	; 0x800111 <moneyY+0x1>
    3bd0:	00 91 0e 01 	lds	r16, 0x010E	; 0x80010e <moneyX>
    3bd4:	10 91 0f 01 	lds	r17, 0x010F	; 0x80010f <moneyX+0x1>
    3bd8:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <heroHeight>
    3bdc:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <heroHeight+0x1>
    3be0:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__data_start>
    3be4:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__data_start+0x1>
    3be8:	60 91 3e 09 	lds	r22, 0x093E	; 0x80093e <heroY>
    3bec:	70 91 3f 09 	lds	r23, 0x093F	; 0x80093f <heroY+0x1>
    3bf0:	80 91 3c 09 	lds	r24, 0x093C	; 0x80093c <heroX>
    3bf4:	90 91 3d 09 	lds	r25, 0x093D	; 0x80093d <heroX+0x1>
    3bf8:	0e 94 ac 1f 	call	0x3f58	; 0x3f58 <checkCollision>
    3bfc:	88 23       	and	r24, r24
    3bfe:	99 f1       	breq	.+102    	; 0x3c66 <update+0x536>
					moneyY,moneyWidth,moneyHeight) == true)
	{
		moneyValue = getMoney(moneyValue,2);
    3c00:	62 e0       	ldi	r22, 0x02	; 2
    3c02:	70 e0       	ldi	r23, 0x00	; 0
    3c04:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <moneyValue>
    3c08:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <moneyValue+0x1>
    3c0c:	0e 94 28 1b 	call	0x3650	; 0x3650 <getMoney>
		if(moneyValue >= 100)
    3c10:	84 36       	cpi	r24, 0x64	; 100
    3c12:	91 05       	cpc	r25, r1
    3c14:	14 f0       	brlt	.+4      	; 0x3c1a <update+0x4ea>
		{
			moneyValue = 100;
    3c16:	84 e6       	ldi	r24, 0x64	; 100
    3c18:	90 e0       	ldi	r25, 0x00	; 0
    3c1a:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <moneyValue+0x1>
    3c1e:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <moneyValue>
		}
		moneyX = rnd(SCREEN_TILES_V - moneyWidth);
    3c22:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <moneyWidth>
    3c26:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <moneyWidth+0x1>
    3c2a:	c2 e1       	ldi	r28, 0x12	; 18
    3c2c:	d0 e0       	ldi	r29, 0x00	; 0
    3c2e:	c8 1b       	sub	r28, r24
    3c30:	d9 0b       	sbc	r29, r25
		draw();
	}
}

int rnd(int max) {
	int result = rand() % max;
    3c32:	0e 94 73 22 	call	0x44e6	; 0x44e6 <rand>
		moneyValue = getMoney(moneyValue,2);
		if(moneyValue >= 100)
		{
			moneyValue = 100;
		}
		moneyX = rnd(SCREEN_TILES_V - moneyWidth);
    3c36:	be 01       	movw	r22, r28
    3c38:	0e 94 97 20 	call	0x412e	; 0x412e <__divmodhi4>
    3c3c:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <moneyX+0x1>
    3c40:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <moneyX>
		moneyY = rnd(SCREEN_TILES_H - moneyHeight);
    3c44:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <moneyHeight>
    3c48:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <moneyHeight+0x1>
    3c4c:	c8 e2       	ldi	r28, 0x28	; 40
    3c4e:	d0 e0       	ldi	r29, 0x00	; 0
    3c50:	c8 1b       	sub	r28, r24
    3c52:	d9 0b       	sbc	r29, r25
		draw();
	}
}

int rnd(int max) {
	int result = rand() % max;
    3c54:	0e 94 73 22 	call	0x44e6	; 0x44e6 <rand>
		if(moneyValue >= 100)
		{
			moneyValue = 100;
		}
		moneyX = rnd(SCREEN_TILES_V - moneyWidth);
		moneyY = rnd(SCREEN_TILES_H - moneyHeight);
    3c58:	be 01       	movw	r22, r28
    3c5a:	0e 94 97 20 	call	0x412e	; 0x412e <__divmodhi4>
    3c5e:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <moneyY+0x1>
    3c62:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <moneyY>

	
	
		
	
}
    3c66:	df 91       	pop	r29
    3c68:	cf 91       	pop	r28
    3c6a:	1f 91       	pop	r17
    3c6c:	0f 91       	pop	r16
    3c6e:	ff 90       	pop	r15
    3c70:	ef 90       	pop	r14
    3c72:	df 90       	pop	r13
    3c74:	cf 90       	pop	r12
    3c76:	bf 90       	pop	r11
    3c78:	af 90       	pop	r10
    3c7a:	08 95       	ret

00003c7c <draw>:

void draw() 
{
    3c7c:	ef 92       	push	r14
    3c7e:	ff 92       	push	r15
    3c80:	0f 93       	push	r16
    3c82:	cf 93       	push	r28
    3c84:	df 93       	push	r29
	if(health <= 10)
    3c86:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <health>
    3c8a:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <health+0x1>
    3c8e:	0b 97       	sbiw	r24, 0x0b	; 11
    3c90:	0c f0       	brlt	.+2      	; 0x3c94 <draw+0x18>
    3c92:	cb c0       	rjmp	.+406    	; 0x3e2a <draw+0x1ae>
	{

		//Clear the screen (fills Vram with tile zero)
		ClearVram();
    3c94:	0e 94 9f 10 	call	0x213e	; 0x213e <ClearVram>
		Print(1, 0, PSTR("Score"));
    3c98:	44 ea       	ldi	r20, 0xA4	; 164
    3c9a:	5b e1       	ldi	r21, 0x1B	; 27
    3c9c:	60 e0       	ldi	r22, 0x00	; 0
    3c9e:	70 e0       	ldi	r23, 0x00	; 0
    3ca0:	81 e0       	ldi	r24, 0x01	; 1
    3ca2:	90 e0       	ldi	r25, 0x00	; 0
    3ca4:	0e 94 bc 1a 	call	0x3578	; 0x3578 <Print>
		Print(1, 17, PSTR("HEALTH"));
    3ca8:	4a ea       	ldi	r20, 0xAA	; 170
    3caa:	5b e1       	ldi	r21, 0x1B	; 27
    3cac:	61 e1       	ldi	r22, 0x11	; 17
    3cae:	70 e0       	ldi	r23, 0x00	; 0
    3cb0:	81 e0       	ldi	r24, 0x01	; 1
    3cb2:	90 e0       	ldi	r25, 0x00	; 0
    3cb4:	0e 94 bc 1a 	call	0x3578	; 0x3578 <Print>
		Print(18, 17, PSTR("E.HP"));
    3cb8:	41 eb       	ldi	r20, 0xB1	; 177
    3cba:	5b e1       	ldi	r21, 0x1B	; 27
    3cbc:	61 e1       	ldi	r22, 0x11	; 17
    3cbe:	70 e0       	ldi	r23, 0x00	; 0
    3cc0:	82 e1       	ldi	r24, 0x12	; 18
    3cc2:	90 e0       	ldi	r25, 0x00	; 0
    3cc4:	0e 94 bc 1a 	call	0x3578	; 0x3578 <Print>
		Print(1, 16, PSTR("MONEY"));
    3cc8:	46 eb       	ldi	r20, 0xB6	; 182
    3cca:	5b e1       	ldi	r21, 0x1B	; 27
    3ccc:	60 e1       	ldi	r22, 0x10	; 16
    3cce:	70 e0       	ldi	r23, 0x00	; 0
    3cd0:	81 e0       	ldi	r24, 0x01	; 1
    3cd2:	90 e0       	ldi	r25, 0x00	; 0
    3cd4:	0e 94 bc 1a 	call	0x3578	; 0x3578 <Print>
		PrintInt(11,16, moneyValue,false);
    3cd8:	40 91 20 01 	lds	r20, 0x0120	; 0x800120 <moneyValue>
    3cdc:	50 91 21 01 	lds	r21, 0x0121	; 0x800121 <moneyValue+0x1>
    3ce0:	20 e0       	ldi	r18, 0x00	; 0
    3ce2:	60 e1       	ldi	r22, 0x10	; 16
    3ce4:	70 e0       	ldi	r23, 0x00	; 0
    3ce6:	8b e0       	ldi	r24, 0x0B	; 11
    3ce8:	90 e0       	ldi	r25, 0x00	; 0
    3cea:	0e 94 84 1a 	call	0x3508	; 0x3508 <PrintInt>
		PrintInt(10, 0, score, false);
    3cee:	40 91 4e 09 	lds	r20, 0x094E	; 0x80094e <score>
    3cf2:	50 91 4f 09 	lds	r21, 0x094F	; 0x80094f <score+0x1>
    3cf6:	20 e0       	ldi	r18, 0x00	; 0
    3cf8:	60 e0       	ldi	r22, 0x00	; 0
    3cfa:	70 e0       	ldi	r23, 0x00	; 0
    3cfc:	8a e0       	ldi	r24, 0x0A	; 10
    3cfe:	90 e0       	ldi	r25, 0x00	; 0
    3d00:	0e 94 84 1a 	call	0x3508	; 0x3508 <PrintInt>
		PrintInt(17, 0, heroX, false);
    3d04:	40 91 3c 09 	lds	r20, 0x093C	; 0x80093c <heroX>
    3d08:	50 91 3d 09 	lds	r21, 0x093D	; 0x80093d <heroX+0x1>
    3d0c:	20 e0       	ldi	r18, 0x00	; 0
    3d0e:	60 e0       	ldi	r22, 0x00	; 0
    3d10:	70 e0       	ldi	r23, 0x00	; 0
    3d12:	81 e1       	ldi	r24, 0x11	; 17
    3d14:	90 e0       	ldi	r25, 0x00	; 0
    3d16:	0e 94 84 1a 	call	0x3508	; 0x3508 <PrintInt>
		PrintInt(22, 0, heroY, false);
    3d1a:	40 91 3e 09 	lds	r20, 0x093E	; 0x80093e <heroY>
    3d1e:	50 91 3f 09 	lds	r21, 0x093F	; 0x80093f <heroY+0x1>
    3d22:	20 e0       	ldi	r18, 0x00	; 0
    3d24:	60 e0       	ldi	r22, 0x00	; 0
    3d26:	70 e0       	ldi	r23, 0x00	; 0
    3d28:	86 e1       	ldi	r24, 0x16	; 22
    3d2a:	90 e0       	ldi	r25, 0x00	; 0
    3d2c:	0e 94 84 1a 	call	0x3508	; 0x3508 <PrintInt>
		PrintInt(11, 17, health,false);
    3d30:	40 91 1c 01 	lds	r20, 0x011C	; 0x80011c <health>
    3d34:	50 91 1d 01 	lds	r21, 0x011D	; 0x80011d <health+0x1>
    3d38:	20 e0       	ldi	r18, 0x00	; 0
    3d3a:	61 e1       	ldi	r22, 0x11	; 17
    3d3c:	70 e0       	ldi	r23, 0x00	; 0
    3d3e:	8b e0       	ldi	r24, 0x0B	; 11
    3d40:	90 e0       	ldi	r25, 0x00	; 0
    3d42:	0e 94 84 1a 	call	0x3508	; 0x3508 <PrintInt>
		PrintInt(30, 17, enemyHealth,false);
    3d46:	40 91 1e 01 	lds	r20, 0x011E	; 0x80011e <enemyHealth>
    3d4a:	50 91 1f 01 	lds	r21, 0x011F	; 0x80011f <enemyHealth+0x1>
    3d4e:	20 e0       	ldi	r18, 0x00	; 0
    3d50:	61 e1       	ldi	r22, 0x11	; 17
    3d52:	70 e0       	ldi	r23, 0x00	; 0
    3d54:	8e e1       	ldi	r24, 0x1E	; 30
    3d56:	90 e0       	ldi	r25, 0x00	; 0
    3d58:	0e 94 84 1a 	call	0x3508	; 0x3508 <PrintInt>
		drawRectangle(heroX, heroY, heroWidth, heroHeight, '0');
    3d5c:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <heroHeight>
    3d60:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <heroHeight+0x1>
    3d64:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__data_start>
    3d68:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__data_start+0x1>
    3d6c:	60 91 3e 09 	lds	r22, 0x093E	; 0x80093e <heroY>
    3d70:	70 91 3f 09 	lds	r23, 0x093F	; 0x80093f <heroY+0x1>
    3d74:	00 e3       	ldi	r16, 0x30	; 48
    3d76:	80 91 3c 09 	lds	r24, 0x093C	; 0x80093c <heroX>
    3d7a:	90 91 3d 09 	lds	r25, 0x093D	; 0x80093d <heroX+0x1>
    3d7e:	0e 94 19 20 	call	0x4032	; 0x4032 <drawRectangle>
		drawRectangle(enemyX, enemyY, enemyWidth, enemyHeight, '*');
    3d82:	e0 90 06 01 	lds	r14, 0x0106	; 0x800106 <enemyHeight>
    3d86:	f0 90 07 01 	lds	r15, 0x0107	; 0x800107 <enemyHeight+0x1>
    3d8a:	c0 91 04 01 	lds	r28, 0x0104	; 0x800104 <enemyWidth>
    3d8e:	d0 91 05 01 	lds	r29, 0x0105	; 0x800105 <enemyWidth+0x1>
    3d92:	60 91 42 09 	lds	r22, 0x0942	; 0x800942 <enemyY>
    3d96:	70 91 43 09 	lds	r23, 0x0943	; 0x800943 <enemyY+0x1>
    3d9a:	80 91 44 09 	lds	r24, 0x0944	; 0x800944 <enemyY+0x2>
    3d9e:	90 91 45 09 	lds	r25, 0x0945	; 0x800945 <enemyY+0x3>
    3da2:	0e 94 3a 21 	call	0x4274	; 0x4274 <__fixsfsi>
    3da6:	0a e2       	ldi	r16, 0x2A	; 42
    3da8:	97 01       	movw	r18, r14
    3daa:	ae 01       	movw	r20, r28
    3dac:	80 91 40 09 	lds	r24, 0x0940	; 0x800940 <enemyX>
    3db0:	90 91 41 09 	lds	r25, 0x0941	; 0x800941 <enemyX+0x1>
    3db4:	0e 94 19 20 	call	0x4032	; 0x4032 <drawRectangle>
		drawRectangle(followerX, followerY, followerWidth, followerHeight, 'X');
    3db8:	20 91 18 01 	lds	r18, 0x0118	; 0x800118 <followerHeight>
    3dbc:	30 91 19 01 	lds	r19, 0x0119	; 0x800119 <followerHeight+0x1>
    3dc0:	40 91 16 01 	lds	r20, 0x0116	; 0x800116 <followerWidth>
    3dc4:	50 91 17 01 	lds	r21, 0x0117	; 0x800117 <followerWidth+0x1>
    3dc8:	60 91 4a 09 	lds	r22, 0x094A	; 0x80094a <followerY>
    3dcc:	70 91 4b 09 	lds	r23, 0x094B	; 0x80094b <followerY+0x1>
    3dd0:	08 e5       	ldi	r16, 0x58	; 88
    3dd2:	80 91 48 09 	lds	r24, 0x0948	; 0x800948 <followerX>
    3dd6:	90 91 49 09 	lds	r25, 0x0949	; 0x800949 <followerX+0x1>
    3dda:	0e 94 19 20 	call	0x4032	; 0x4032 <drawRectangle>
		drawRectangle(wallX,wallY,wallWidth,wallHeight, '?');
    3dde:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <wallHeight>
    3de2:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <wallHeight+0x1>
    3de6:	40 91 0c 01 	lds	r20, 0x010C	; 0x80010c <wallWidth>
    3dea:	50 91 0d 01 	lds	r21, 0x010D	; 0x80010d <wallWidth+0x1>
    3dee:	60 91 08 01 	lds	r22, 0x0108	; 0x800108 <wallY>
    3df2:	70 91 09 01 	lds	r23, 0x0109	; 0x800109 <wallY+0x1>
    3df6:	0f e3       	ldi	r16, 0x3F	; 63
    3df8:	80 91 46 09 	lds	r24, 0x0946	; 0x800946 <wallX>
    3dfc:	90 91 47 09 	lds	r25, 0x0947	; 0x800947 <wallX+0x1>
    3e00:	0e 94 19 20 	call	0x4032	; 0x4032 <drawRectangle>
		drawRectangle(moneyX,moneyY,moneyWidth,moneyHeight,'$');
    3e04:	20 91 14 01 	lds	r18, 0x0114	; 0x800114 <moneyHeight>
    3e08:	30 91 15 01 	lds	r19, 0x0115	; 0x800115 <moneyHeight+0x1>
    3e0c:	40 91 12 01 	lds	r20, 0x0112	; 0x800112 <moneyWidth>
    3e10:	50 91 13 01 	lds	r21, 0x0113	; 0x800113 <moneyWidth+0x1>
    3e14:	60 91 10 01 	lds	r22, 0x0110	; 0x800110 <moneyY>
    3e18:	70 91 11 01 	lds	r23, 0x0111	; 0x800111 <moneyY+0x1>
    3e1c:	04 e2       	ldi	r16, 0x24	; 36
    3e1e:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <moneyX>
    3e22:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <moneyX+0x1>
    3e26:	0e 94 19 20 	call	0x4032	; 0x4032 <drawRectangle>
	}

	if(health == 0 || health >=235)
    3e2a:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <health>
    3e2e:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <health+0x1>
    3e32:	00 97       	sbiw	r24, 0x00	; 0
    3e34:	21 f0       	breq	.+8      	; 0x3e3e <draw+0x1c2>
    3e36:	8b 3e       	cpi	r24, 0xEB	; 235
    3e38:	91 05       	cpc	r25, r1
    3e3a:	0c f4       	brge	.+2      	; 0x3e3e <draw+0x1c2>
    3e3c:	40 c0       	rjmp	.+128    	; 0x3ebe <draw+0x242>
	{
		ClearVram();
    3e3e:	0e 94 9f 10 	call	0x213e	; 0x213e <ClearVram>
		PrintChar(16,10,'Y');
    3e42:	49 e5       	ldi	r20, 0x59	; 89
    3e44:	6a e0       	ldi	r22, 0x0A	; 10
    3e46:	70 e0       	ldi	r23, 0x00	; 0
    3e48:	80 e1       	ldi	r24, 0x10	; 16
    3e4a:	90 e0       	ldi	r25, 0x00	; 0
    3e4c:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <PrintChar>
		PrintChar(17,10,'O');
    3e50:	4f e4       	ldi	r20, 0x4F	; 79
    3e52:	6a e0       	ldi	r22, 0x0A	; 10
    3e54:	70 e0       	ldi	r23, 0x00	; 0
    3e56:	81 e1       	ldi	r24, 0x11	; 17
    3e58:	90 e0       	ldi	r25, 0x00	; 0
    3e5a:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <PrintChar>
		PrintChar(18,10,'U');
    3e5e:	45 e5       	ldi	r20, 0x55	; 85
    3e60:	6a e0       	ldi	r22, 0x0A	; 10
    3e62:	70 e0       	ldi	r23, 0x00	; 0
    3e64:	82 e1       	ldi	r24, 0x12	; 18
    3e66:	90 e0       	ldi	r25, 0x00	; 0
    3e68:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <PrintChar>
		PrintChar(19,10,' ');
    3e6c:	40 e2       	ldi	r20, 0x20	; 32
    3e6e:	6a e0       	ldi	r22, 0x0A	; 10
    3e70:	70 e0       	ldi	r23, 0x00	; 0
    3e72:	83 e1       	ldi	r24, 0x13	; 19
    3e74:	90 e0       	ldi	r25, 0x00	; 0
    3e76:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <PrintChar>
    	PrintChar(20,10,'L');
    3e7a:	4c e4       	ldi	r20, 0x4C	; 76
    3e7c:	6a e0       	ldi	r22, 0x0A	; 10
    3e7e:	70 e0       	ldi	r23, 0x00	; 0
    3e80:	84 e1       	ldi	r24, 0x14	; 20
    3e82:	90 e0       	ldi	r25, 0x00	; 0
    3e84:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <PrintChar>
   		PrintChar(21,10,'O');
    3e88:	4f e4       	ldi	r20, 0x4F	; 79
    3e8a:	6a e0       	ldi	r22, 0x0A	; 10
    3e8c:	70 e0       	ldi	r23, 0x00	; 0
    3e8e:	85 e1       	ldi	r24, 0x15	; 21
    3e90:	90 e0       	ldi	r25, 0x00	; 0
    3e92:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <PrintChar>
		PrintChar(22,10,'S');
    3e96:	43 e5       	ldi	r20, 0x53	; 83
    3e98:	6a e0       	ldi	r22, 0x0A	; 10
    3e9a:	70 e0       	ldi	r23, 0x00	; 0
    3e9c:	86 e1       	ldi	r24, 0x16	; 22
    3e9e:	90 e0       	ldi	r25, 0x00	; 0
    3ea0:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <PrintChar>
		PrintChar(23,10,'E');
    3ea4:	45 e4       	ldi	r20, 0x45	; 69
    3ea6:	6a e0       	ldi	r22, 0x0A	; 10
    3ea8:	70 e0       	ldi	r23, 0x00	; 0
    3eaa:	87 e1       	ldi	r24, 0x17	; 23
    3eac:	90 e0       	ldi	r25, 0x00	; 0
    3eae:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <PrintChar>
		health = 240;
    3eb2:	80 ef       	ldi	r24, 0xF0	; 240
    3eb4:	90 e0       	ldi	r25, 0x00	; 0
    3eb6:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <health+0x1>
    3eba:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <health>
	}

	if(score >= 8 && enemyHealth <=0)
    3ebe:	80 91 4e 09 	lds	r24, 0x094E	; 0x80094e <score>
    3ec2:	90 91 4f 09 	lds	r25, 0x094F	; 0x80094f <score+0x1>
    3ec6:	08 97       	sbiw	r24, 0x08	; 8
    3ec8:	0c f4       	brge	.+2      	; 0x3ecc <draw+0x250>
    3eca:	40 c0       	rjmp	.+128    	; 0x3f4c <draw+0x2d0>
    3ecc:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <enemyHealth>
    3ed0:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <enemyHealth+0x1>
    3ed4:	18 16       	cp	r1, r24
    3ed6:	19 06       	cpc	r1, r25
    3ed8:	cc f1       	brlt	.+114    	; 0x3f4c <draw+0x2d0>
	{
		ClearVram();
    3eda:	0e 94 9f 10 	call	0x213e	; 0x213e <ClearVram>
		PrintChar(16,10,'Y');
    3ede:	49 e5       	ldi	r20, 0x59	; 89
    3ee0:	6a e0       	ldi	r22, 0x0A	; 10
    3ee2:	70 e0       	ldi	r23, 0x00	; 0
    3ee4:	80 e1       	ldi	r24, 0x10	; 16
    3ee6:	90 e0       	ldi	r25, 0x00	; 0
    3ee8:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <PrintChar>
		PrintChar(17,10,'O');
    3eec:	4f e4       	ldi	r20, 0x4F	; 79
    3eee:	6a e0       	ldi	r22, 0x0A	; 10
    3ef0:	70 e0       	ldi	r23, 0x00	; 0
    3ef2:	81 e1       	ldi	r24, 0x11	; 17
    3ef4:	90 e0       	ldi	r25, 0x00	; 0
    3ef6:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <PrintChar>
		PrintChar(18,10,'U');
    3efa:	45 e5       	ldi	r20, 0x55	; 85
    3efc:	6a e0       	ldi	r22, 0x0A	; 10
    3efe:	70 e0       	ldi	r23, 0x00	; 0
    3f00:	82 e1       	ldi	r24, 0x12	; 18
    3f02:	90 e0       	ldi	r25, 0x00	; 0
    3f04:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <PrintChar>
		PrintChar(19,10,' ');
    3f08:	40 e2       	ldi	r20, 0x20	; 32
    3f0a:	6a e0       	ldi	r22, 0x0A	; 10
    3f0c:	70 e0       	ldi	r23, 0x00	; 0
    3f0e:	83 e1       	ldi	r24, 0x13	; 19
    3f10:	90 e0       	ldi	r25, 0x00	; 0
    3f12:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <PrintChar>
    	PrintChar(20,10,'W');
    3f16:	47 e5       	ldi	r20, 0x57	; 87
    3f18:	6a e0       	ldi	r22, 0x0A	; 10
    3f1a:	70 e0       	ldi	r23, 0x00	; 0
    3f1c:	84 e1       	ldi	r24, 0x14	; 20
    3f1e:	90 e0       	ldi	r25, 0x00	; 0
    3f20:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <PrintChar>
   		PrintChar(21,10,'I');
    3f24:	49 e4       	ldi	r20, 0x49	; 73
    3f26:	6a e0       	ldi	r22, 0x0A	; 10
    3f28:	70 e0       	ldi	r23, 0x00	; 0
    3f2a:	85 e1       	ldi	r24, 0x15	; 21
    3f2c:	90 e0       	ldi	r25, 0x00	; 0
    3f2e:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <PrintChar>
		PrintChar(22,10,'N');
    3f32:	4e e4       	ldi	r20, 0x4E	; 78
    3f34:	6a e0       	ldi	r22, 0x0A	; 10
    3f36:	70 e0       	ldi	r23, 0x00	; 0
    3f38:	86 e1       	ldi	r24, 0x16	; 22
    3f3a:	90 e0       	ldi	r25, 0x00	; 0
    3f3c:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <PrintChar>
		score = 230;
    3f40:	86 ee       	ldi	r24, 0xE6	; 230
    3f42:	90 e0       	ldi	r25, 0x00	; 0
    3f44:	90 93 4f 09 	sts	0x094F, r25	; 0x80094f <score+0x1>
    3f48:	80 93 4e 09 	sts	0x094E, r24	; 0x80094e <score>
	}
	
	
	
}
    3f4c:	df 91       	pop	r29
    3f4e:	cf 91       	pop	r28
    3f50:	0f 91       	pop	r16
    3f52:	ff 90       	pop	r15
    3f54:	ef 90       	pop	r14
    3f56:	08 95       	ret

00003f58 <checkCollision>:

bool checkCollision(int x1, int y1, int width1, int height1, int x2, int y2,
		int width2, int height2) {
    3f58:	af 92       	push	r10
    3f5a:	bf 92       	push	r11
    3f5c:	cf 92       	push	r12
    3f5e:	df 92       	push	r13
    3f60:	ef 92       	push	r14
    3f62:	ff 92       	push	r15
    3f64:	0f 93       	push	r16
    3f66:	1f 93       	push	r17
	// write the code to return true if collided.
	if (x1 + width1 < x2 || y1 + height1 < y2 || x1 > x2 + width2
    3f68:	48 0f       	add	r20, r24
    3f6a:	59 1f       	adc	r21, r25
    3f6c:	40 17       	cp	r20, r16
    3f6e:	51 07       	cpc	r21, r17
    3f70:	84 f0       	brlt	.+32     	; 0x3f92 <checkCollision+0x3a>
    3f72:	26 0f       	add	r18, r22
    3f74:	37 1f       	adc	r19, r23
    3f76:	2e 15       	cp	r18, r14
    3f78:	3f 05       	cpc	r19, r15
    3f7a:	5c f0       	brlt	.+22     	; 0x3f92 <checkCollision+0x3a>
    3f7c:	c0 0e       	add	r12, r16
    3f7e:	d1 1e       	adc	r13, r17
    3f80:	c8 16       	cp	r12, r24
    3f82:	d9 06       	cpc	r13, r25
    3f84:	34 f0       	brlt	.+12     	; 0x3f92 <checkCollision+0x3a>
			|| y1 > y2 + height2) {
    3f86:	ae 0c       	add	r10, r14
    3f88:	bf 1c       	adc	r11, r15
    3f8a:	81 e0       	ldi	r24, 0x01	; 1
    3f8c:	a6 16       	cp	r10, r22
    3f8e:	b7 06       	cpc	r11, r23
    3f90:	0c f4       	brge	.+2      	; 0x3f94 <checkCollision+0x3c>
		return false;
    3f92:	80 e0       	ldi	r24, 0x00	; 0
	} else {
		return true;
	}
}
    3f94:	1f 91       	pop	r17
    3f96:	0f 91       	pop	r16
    3f98:	ff 90       	pop	r15
    3f9a:	ef 90       	pop	r14
    3f9c:	df 90       	pop	r13
    3f9e:	cf 90       	pop	r12
    3fa0:	bf 90       	pop	r11
    3fa2:	af 90       	pop	r10
    3fa4:	08 95       	ret

00003fa6 <MoveHero>:

void MoveHero(int x, int y) {
    3fa6:	ef 92       	push	r14
    3fa8:	ff 92       	push	r15
    3faa:	0f 93       	push	r16
    3fac:	1f 93       	push	r17
    3fae:	cf 93       	push	r28
    3fb0:	df 93       	push	r29
	// write code to move hero
	heroX = heroX + x;
    3fb2:	00 91 3c 09 	lds	r16, 0x093C	; 0x80093c <heroX>
    3fb6:	10 91 3d 09 	lds	r17, 0x093D	; 0x80093d <heroX+0x1>
    3fba:	f8 01       	movw	r30, r16
    3fbc:	e8 0f       	add	r30, r24
    3fbe:	f9 1f       	adc	r31, r25
    3fc0:	f0 93 3d 09 	sts	0x093D, r31	; 0x80093d <heroX+0x1>
    3fc4:	e0 93 3c 09 	sts	0x093C, r30	; 0x80093c <heroX>
	heroY = heroY + y;
    3fc8:	c0 91 3e 09 	lds	r28, 0x093E	; 0x80093e <heroY>
    3fcc:	d0 91 3f 09 	lds	r29, 0x093F	; 0x80093f <heroY+0x1>
    3fd0:	9e 01       	movw	r18, r28
    3fd2:	26 0f       	add	r18, r22
    3fd4:	37 1f       	adc	r19, r23
    3fd6:	30 93 3f 09 	sts	0x093F, r19	; 0x80093f <heroY+0x1>
    3fda:	20 93 3e 09 	sts	0x093E, r18	; 0x80093e <heroY>

	// write code to check if the hero is inside the window
	if (heroX < 0 || heroX + (TILE_WIDTH / heroWidth) >= SCREEN_TILES_H || heroY < 0
    3fde:	f7 fd       	sbrc	r31, 7
    3fe0:	19 c0       	rjmp	.+50     	; 0x4014 <MoveHero+0x6e>
    3fe2:	e0 90 00 01 	lds	r14, 0x0100	; 0x800100 <__data_start>
    3fe6:	f0 90 01 01 	lds	r15, 0x0101	; 0x800101 <__data_start+0x1>
    3fea:	86 e0       	ldi	r24, 0x06	; 6
    3fec:	90 e0       	ldi	r25, 0x00	; 0
    3fee:	b7 01       	movw	r22, r14
    3ff0:	0e 94 97 20 	call	0x412e	; 0x412e <__divmodhi4>
    3ff4:	e6 0f       	add	r30, r22
    3ff6:	f7 1f       	adc	r31, r23
    3ff8:	b8 97       	sbiw	r30, 0x28	; 40
    3ffa:	64 f4       	brge	.+24     	; 0x4014 <MoveHero+0x6e>
    3ffc:	37 fd       	sbrc	r19, 7
    3ffe:	0a c0       	rjmp	.+20     	; 0x4014 <MoveHero+0x6e>
			|| heroY + (TILE_HEIGHT / heroWidth) >= SCREEN_TILES_V ) {
    4000:	8c e0       	ldi	r24, 0x0C	; 12
    4002:	90 e0       	ldi	r25, 0x00	; 0
    4004:	b7 01       	movw	r22, r14
    4006:	0e 94 97 20 	call	0x412e	; 0x412e <__divmodhi4>
    400a:	26 0f       	add	r18, r22
    400c:	37 1f       	adc	r19, r23
    400e:	22 31       	cpi	r18, 0x12	; 18
    4010:	31 05       	cpc	r19, r1
    4012:	44 f0       	brlt	.+16     	; 0x4024 <MoveHero+0x7e>
		heroX = heroX - x;
    4014:	10 93 3d 09 	sts	0x093D, r17	; 0x80093d <heroX+0x1>
    4018:	00 93 3c 09 	sts	0x093C, r16	; 0x80093c <heroX>
		heroY = heroY - y;
    401c:	d0 93 3f 09 	sts	0x093F, r29	; 0x80093f <heroY+0x1>
    4020:	c0 93 3e 09 	sts	0x093E, r28	; 0x80093e <heroY>
	}
}
    4024:	df 91       	pop	r29
    4026:	cf 91       	pop	r28
    4028:	1f 91       	pop	r17
    402a:	0f 91       	pop	r16
    402c:	ff 90       	pop	r15
    402e:	ef 90       	pop	r14
    4030:	08 95       	ret

00004032 <drawRectangle>:

void drawRectangle(int x, int y, int width, int height, char c) {
    4032:	5f 92       	push	r5
    4034:	6f 92       	push	r6
    4036:	7f 92       	push	r7
    4038:	8f 92       	push	r8
    403a:	9f 92       	push	r9
    403c:	af 92       	push	r10
    403e:	bf 92       	push	r11
    4040:	cf 92       	push	r12
    4042:	df 92       	push	r13
    4044:	ef 92       	push	r14
    4046:	ff 92       	push	r15
    4048:	0f 93       	push	r16
    404a:	1f 93       	push	r17
    404c:	cf 93       	push	r28
    404e:	df 93       	push	r29
	if (x < SCREEN_TILES_H && y < SCREEN_TILES_V) {
    4050:	88 32       	cpi	r24, 0x28	; 40
    4052:	91 05       	cpc	r25, r1
    4054:	0c f0       	brlt	.+2      	; 0x4058 <drawRectangle+0x26>
    4056:	47 c0       	rjmp	.+142    	; 0x40e6 <drawRectangle+0xb4>
    4058:	62 31       	cpi	r22, 0x12	; 18
    405a:	71 05       	cpc	r23, r1
    405c:	0c f0       	brlt	.+2      	; 0x4060 <drawRectangle+0x2e>
    405e:	43 c0       	rjmp	.+134    	; 0x40e6 <drawRectangle+0xb4>
    4060:	50 2e       	mov	r5, r16
    4062:	49 01       	movw	r8, r18
    4064:	ea 01       	movw	r28, r20
    4066:	7b 01       	movw	r14, r22
    4068:	8c 01       	movw	r16, r24
    406a:	3c 01       	movw	r6, r24

		for (int i = 0; i < width; i++) {
			if (x + i < SCREEN_TILES_H && y < SCREEN_TILES_V) {
				PrintChar(x + i, y, c);
			}
			if (y + height - 1 < SCREEN_TILES_V) {
    406c:	6b 01       	movw	r12, r22
    406e:	c2 0e       	add	r12, r18
    4070:	d3 1e       	adc	r13, r19
				PrintChar(x + i, y + height - 1, c);
    4072:	56 01       	movw	r10, r12
    4074:	81 e0       	ldi	r24, 0x01	; 1
    4076:	a8 1a       	sub	r10, r24
    4078:	b1 08       	sbc	r11, r1
}

void drawRectangle(int x, int y, int width, int height, char c) {
	if (x < SCREEN_TILES_H && y < SCREEN_TILES_V) {

		for (int i = 0; i < width; i++) {
    407a:	c3 01       	movw	r24, r6
    407c:	80 1b       	sub	r24, r16
    407e:	91 0b       	sbc	r25, r17
    4080:	8c 17       	cp	r24, r28
    4082:	9d 07       	cpc	r25, r29
    4084:	b4 f4       	brge	.+44     	; 0x40b2 <drawRectangle+0x80>
			if (x + i < SCREEN_TILES_H && y < SCREEN_TILES_V) {
    4086:	88 e2       	ldi	r24, 0x28	; 40
    4088:	68 16       	cp	r6, r24
    408a:	71 04       	cpc	r7, r1
    408c:	2c f4       	brge	.+10     	; 0x4098 <drawRectangle+0x66>
				PrintChar(x + i, y, c);
    408e:	45 2d       	mov	r20, r5
    4090:	b7 01       	movw	r22, r14
    4092:	c3 01       	movw	r24, r6
    4094:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <PrintChar>
			}
			if (y + height - 1 < SCREEN_TILES_V) {
    4098:	83 e1       	ldi	r24, 0x13	; 19
    409a:	c8 16       	cp	r12, r24
    409c:	d1 04       	cpc	r13, r1
    409e:	2c f4       	brge	.+10     	; 0x40aa <drawRectangle+0x78>
				PrintChar(x + i, y + height - 1, c);
    40a0:	45 2d       	mov	r20, r5
    40a2:	b5 01       	movw	r22, r10
    40a4:	c3 01       	movw	r24, r6
    40a6:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <PrintChar>
    40aa:	8f ef       	ldi	r24, 0xFF	; 255
    40ac:	68 1a       	sub	r6, r24
    40ae:	78 0a       	sbc	r7, r24
    40b0:	e4 cf       	rjmp	.-56     	; 0x407a <drawRectangle+0x48>
}

void drawRectangle(int x, int y, int width, int height, char c) {
	if (x < SCREEN_TILES_H && y < SCREEN_TILES_V) {

		for (int i = 0; i < width; i++) {
    40b2:	cc 24       	eor	r12, r12
    40b4:	c3 94       	inc	r12
    40b6:	d1 2c       	mov	r13, r1
				PrintChar(x + i, y + height - 1, c);
			}
		}
		for (int i = 1; i < height; i++) {
			PrintChar(x, y + i, c);
			PrintChar(x + width - 1, y + i, c);
    40b8:	c0 0f       	add	r28, r16
    40ba:	d1 1f       	adc	r29, r17
    40bc:	21 97       	sbiw	r28, 0x01	; 1
			}
			if (y + height - 1 < SCREEN_TILES_V) {
				PrintChar(x + i, y + height - 1, c);
			}
		}
		for (int i = 1; i < height; i++) {
    40be:	c8 14       	cp	r12, r8
    40c0:	d9 04       	cpc	r13, r9
    40c2:	8c f4       	brge	.+34     	; 0x40e6 <drawRectangle+0xb4>
    40c4:	57 01       	movw	r10, r14
    40c6:	ac 0c       	add	r10, r12
    40c8:	bd 1c       	adc	r11, r13
			PrintChar(x, y + i, c);
    40ca:	45 2d       	mov	r20, r5
    40cc:	b5 01       	movw	r22, r10
    40ce:	c8 01       	movw	r24, r16
    40d0:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <PrintChar>
			PrintChar(x + width - 1, y + i, c);
    40d4:	45 2d       	mov	r20, r5
    40d6:	b5 01       	movw	r22, r10
    40d8:	ce 01       	movw	r24, r28
    40da:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <PrintChar>
			}
			if (y + height - 1 < SCREEN_TILES_V) {
				PrintChar(x + i, y + height - 1, c);
			}
		}
		for (int i = 1; i < height; i++) {
    40de:	8f ef       	ldi	r24, 0xFF	; 255
    40e0:	c8 1a       	sub	r12, r24
    40e2:	d8 0a       	sbc	r13, r24
    40e4:	ec cf       	rjmp	.-40     	; 0x40be <drawRectangle+0x8c>
			PrintChar(x, y + i, c);
			PrintChar(x + width - 1, y + i, c);
		}
	}
}
    40e6:	df 91       	pop	r29
    40e8:	cf 91       	pop	r28
    40ea:	1f 91       	pop	r17
    40ec:	0f 91       	pop	r16
    40ee:	ff 90       	pop	r15
    40f0:	ef 90       	pop	r14
    40f2:	df 90       	pop	r13
    40f4:	cf 90       	pop	r12
    40f6:	bf 90       	pop	r11
    40f8:	af 90       	pop	r10
    40fa:	9f 90       	pop	r9
    40fc:	8f 90       	pop	r8
    40fe:	7f 90       	pop	r7
    4100:	6f 90       	pop	r6
    4102:	5f 90       	pop	r5
    4104:	08 95       	ret

00004106 <__udivmodhi4>:
    4106:	aa 1b       	sub	r26, r26
    4108:	bb 1b       	sub	r27, r27
    410a:	51 e1       	ldi	r21, 0x11	; 17
    410c:	07 c0       	rjmp	.+14     	; 0x411c <__udivmodhi4_ep>

0000410e <__udivmodhi4_loop>:
    410e:	aa 1f       	adc	r26, r26
    4110:	bb 1f       	adc	r27, r27
    4112:	a6 17       	cp	r26, r22
    4114:	b7 07       	cpc	r27, r23
    4116:	10 f0       	brcs	.+4      	; 0x411c <__udivmodhi4_ep>
    4118:	a6 1b       	sub	r26, r22
    411a:	b7 0b       	sbc	r27, r23

0000411c <__udivmodhi4_ep>:
    411c:	88 1f       	adc	r24, r24
    411e:	99 1f       	adc	r25, r25
    4120:	5a 95       	dec	r21
    4122:	a9 f7       	brne	.-22     	; 0x410e <__udivmodhi4_loop>
    4124:	80 95       	com	r24
    4126:	90 95       	com	r25
    4128:	bc 01       	movw	r22, r24
    412a:	cd 01       	movw	r24, r26
    412c:	08 95       	ret

0000412e <__divmodhi4>:
    412e:	97 fb       	bst	r25, 7
    4130:	07 2e       	mov	r0, r23
    4132:	16 f4       	brtc	.+4      	; 0x4138 <__divmodhi4+0xa>
    4134:	00 94       	com	r0
    4136:	07 d0       	rcall	.+14     	; 0x4146 <__divmodhi4_neg1>
    4138:	77 fd       	sbrc	r23, 7
    413a:	09 d0       	rcall	.+18     	; 0x414e <__divmodhi4_neg2>
    413c:	0e 94 83 20 	call	0x4106	; 0x4106 <__udivmodhi4>
    4140:	07 fc       	sbrc	r0, 7
    4142:	05 d0       	rcall	.+10     	; 0x414e <__divmodhi4_neg2>
    4144:	3e f4       	brtc	.+14     	; 0x4154 <__divmodhi4_exit>

00004146 <__divmodhi4_neg1>:
    4146:	90 95       	com	r25
    4148:	81 95       	neg	r24
    414a:	9f 4f       	sbci	r25, 0xFF	; 255
    414c:	08 95       	ret

0000414e <__divmodhi4_neg2>:
    414e:	70 95       	com	r23
    4150:	61 95       	neg	r22
    4152:	7f 4f       	sbci	r23, 0xFF	; 255

00004154 <__divmodhi4_exit>:
    4154:	08 95       	ret

00004156 <__udivmodsi4>:
    4156:	a1 e2       	ldi	r26, 0x21	; 33
    4158:	1a 2e       	mov	r1, r26
    415a:	aa 1b       	sub	r26, r26
    415c:	bb 1b       	sub	r27, r27
    415e:	fd 01       	movw	r30, r26
    4160:	0d c0       	rjmp	.+26     	; 0x417c <__udivmodsi4_ep>

00004162 <__udivmodsi4_loop>:
    4162:	aa 1f       	adc	r26, r26
    4164:	bb 1f       	adc	r27, r27
    4166:	ee 1f       	adc	r30, r30
    4168:	ff 1f       	adc	r31, r31
    416a:	a2 17       	cp	r26, r18
    416c:	b3 07       	cpc	r27, r19
    416e:	e4 07       	cpc	r30, r20
    4170:	f5 07       	cpc	r31, r21
    4172:	20 f0       	brcs	.+8      	; 0x417c <__udivmodsi4_ep>
    4174:	a2 1b       	sub	r26, r18
    4176:	b3 0b       	sbc	r27, r19
    4178:	e4 0b       	sbc	r30, r20
    417a:	f5 0b       	sbc	r31, r21

0000417c <__udivmodsi4_ep>:
    417c:	66 1f       	adc	r22, r22
    417e:	77 1f       	adc	r23, r23
    4180:	88 1f       	adc	r24, r24
    4182:	99 1f       	adc	r25, r25
    4184:	1a 94       	dec	r1
    4186:	69 f7       	brne	.-38     	; 0x4162 <__udivmodsi4_loop>
    4188:	60 95       	com	r22
    418a:	70 95       	com	r23
    418c:	80 95       	com	r24
    418e:	90 95       	com	r25
    4190:	9b 01       	movw	r18, r22
    4192:	ac 01       	movw	r20, r24
    4194:	bd 01       	movw	r22, r26
    4196:	cf 01       	movw	r24, r30
    4198:	08 95       	ret

0000419a <__subsf3>:
    419a:	50 58       	subi	r21, 0x80	; 128

0000419c <__addsf3>:
    419c:	bb 27       	eor	r27, r27
    419e:	aa 27       	eor	r26, r26
    41a0:	0e 94 e5 20 	call	0x41ca	; 0x41ca <__addsf3x>
    41a4:	0c 94 c4 21 	jmp	0x4388	; 0x4388 <__fp_round>
    41a8:	0e 94 b6 21 	call	0x436c	; 0x436c <__fp_pscA>
    41ac:	38 f0       	brcs	.+14     	; 0x41bc <__addsf3+0x20>
    41ae:	0e 94 bd 21 	call	0x437a	; 0x437a <__fp_pscB>
    41b2:	20 f0       	brcs	.+8      	; 0x41bc <__addsf3+0x20>
    41b4:	39 f4       	brne	.+14     	; 0x41c4 <__addsf3+0x28>
    41b6:	9f 3f       	cpi	r25, 0xFF	; 255
    41b8:	19 f4       	brne	.+6      	; 0x41c0 <__addsf3+0x24>
    41ba:	26 f4       	brtc	.+8      	; 0x41c4 <__addsf3+0x28>
    41bc:	0c 94 b3 21 	jmp	0x4366	; 0x4366 <__fp_nan>
    41c0:	0e f4       	brtc	.+2      	; 0x41c4 <__addsf3+0x28>
    41c2:	e0 95       	com	r30
    41c4:	e7 fb       	bst	r30, 7
    41c6:	0c 94 ad 21 	jmp	0x435a	; 0x435a <__fp_inf>

000041ca <__addsf3x>:
    41ca:	e9 2f       	mov	r30, r25
    41cc:	0e 94 d5 21 	call	0x43aa	; 0x43aa <__fp_split3>
    41d0:	58 f3       	brcs	.-42     	; 0x41a8 <__addsf3+0xc>
    41d2:	ba 17       	cp	r27, r26
    41d4:	62 07       	cpc	r22, r18
    41d6:	73 07       	cpc	r23, r19
    41d8:	84 07       	cpc	r24, r20
    41da:	95 07       	cpc	r25, r21
    41dc:	20 f0       	brcs	.+8      	; 0x41e6 <__addsf3x+0x1c>
    41de:	79 f4       	brne	.+30     	; 0x41fe <__addsf3x+0x34>
    41e0:	a6 f5       	brtc	.+104    	; 0x424a <__addsf3x+0x80>
    41e2:	0c 94 f7 21 	jmp	0x43ee	; 0x43ee <__fp_zero>
    41e6:	0e f4       	brtc	.+2      	; 0x41ea <__addsf3x+0x20>
    41e8:	e0 95       	com	r30
    41ea:	0b 2e       	mov	r0, r27
    41ec:	ba 2f       	mov	r27, r26
    41ee:	a0 2d       	mov	r26, r0
    41f0:	0b 01       	movw	r0, r22
    41f2:	b9 01       	movw	r22, r18
    41f4:	90 01       	movw	r18, r0
    41f6:	0c 01       	movw	r0, r24
    41f8:	ca 01       	movw	r24, r20
    41fa:	a0 01       	movw	r20, r0
    41fc:	11 24       	eor	r1, r1
    41fe:	ff 27       	eor	r31, r31
    4200:	59 1b       	sub	r21, r25
    4202:	99 f0       	breq	.+38     	; 0x422a <__addsf3x+0x60>
    4204:	59 3f       	cpi	r21, 0xF9	; 249
    4206:	50 f4       	brcc	.+20     	; 0x421c <__addsf3x+0x52>
    4208:	50 3e       	cpi	r21, 0xE0	; 224
    420a:	68 f1       	brcs	.+90     	; 0x4266 <__addsf3x+0x9c>
    420c:	1a 16       	cp	r1, r26
    420e:	f0 40       	sbci	r31, 0x00	; 0
    4210:	a2 2f       	mov	r26, r18
    4212:	23 2f       	mov	r18, r19
    4214:	34 2f       	mov	r19, r20
    4216:	44 27       	eor	r20, r20
    4218:	58 5f       	subi	r21, 0xF8	; 248
    421a:	f3 cf       	rjmp	.-26     	; 0x4202 <__addsf3x+0x38>
    421c:	46 95       	lsr	r20
    421e:	37 95       	ror	r19
    4220:	27 95       	ror	r18
    4222:	a7 95       	ror	r26
    4224:	f0 40       	sbci	r31, 0x00	; 0
    4226:	53 95       	inc	r21
    4228:	c9 f7       	brne	.-14     	; 0x421c <__addsf3x+0x52>
    422a:	7e f4       	brtc	.+30     	; 0x424a <__addsf3x+0x80>
    422c:	1f 16       	cp	r1, r31
    422e:	ba 0b       	sbc	r27, r26
    4230:	62 0b       	sbc	r22, r18
    4232:	73 0b       	sbc	r23, r19
    4234:	84 0b       	sbc	r24, r20
    4236:	ba f0       	brmi	.+46     	; 0x4266 <__addsf3x+0x9c>
    4238:	91 50       	subi	r25, 0x01	; 1
    423a:	a1 f0       	breq	.+40     	; 0x4264 <__addsf3x+0x9a>
    423c:	ff 0f       	add	r31, r31
    423e:	bb 1f       	adc	r27, r27
    4240:	66 1f       	adc	r22, r22
    4242:	77 1f       	adc	r23, r23
    4244:	88 1f       	adc	r24, r24
    4246:	c2 f7       	brpl	.-16     	; 0x4238 <__addsf3x+0x6e>
    4248:	0e c0       	rjmp	.+28     	; 0x4266 <__addsf3x+0x9c>
    424a:	ba 0f       	add	r27, r26
    424c:	62 1f       	adc	r22, r18
    424e:	73 1f       	adc	r23, r19
    4250:	84 1f       	adc	r24, r20
    4252:	48 f4       	brcc	.+18     	; 0x4266 <__addsf3x+0x9c>
    4254:	87 95       	ror	r24
    4256:	77 95       	ror	r23
    4258:	67 95       	ror	r22
    425a:	b7 95       	ror	r27
    425c:	f7 95       	ror	r31
    425e:	9e 3f       	cpi	r25, 0xFE	; 254
    4260:	08 f0       	brcs	.+2      	; 0x4264 <__addsf3x+0x9a>
    4262:	b0 cf       	rjmp	.-160    	; 0x41c4 <__addsf3+0x28>
    4264:	93 95       	inc	r25
    4266:	88 0f       	add	r24, r24
    4268:	08 f0       	brcs	.+2      	; 0x426c <__addsf3x+0xa2>
    426a:	99 27       	eor	r25, r25
    426c:	ee 0f       	add	r30, r30
    426e:	97 95       	ror	r25
    4270:	87 95       	ror	r24
    4272:	08 95       	ret

00004274 <__fixsfsi>:
    4274:	0e 94 41 21 	call	0x4282	; 0x4282 <__fixunssfsi>
    4278:	68 94       	set
    427a:	b1 11       	cpse	r27, r1
    427c:	0c 94 f8 21 	jmp	0x43f0	; 0x43f0 <__fp_szero>
    4280:	08 95       	ret

00004282 <__fixunssfsi>:
    4282:	0e 94 dd 21 	call	0x43ba	; 0x43ba <__fp_splitA>
    4286:	88 f0       	brcs	.+34     	; 0x42aa <__fixunssfsi+0x28>
    4288:	9f 57       	subi	r25, 0x7F	; 127
    428a:	98 f0       	brcs	.+38     	; 0x42b2 <__fixunssfsi+0x30>
    428c:	b9 2f       	mov	r27, r25
    428e:	99 27       	eor	r25, r25
    4290:	b7 51       	subi	r27, 0x17	; 23
    4292:	b0 f0       	brcs	.+44     	; 0x42c0 <__fixunssfsi+0x3e>
    4294:	e1 f0       	breq	.+56     	; 0x42ce <__fixunssfsi+0x4c>
    4296:	66 0f       	add	r22, r22
    4298:	77 1f       	adc	r23, r23
    429a:	88 1f       	adc	r24, r24
    429c:	99 1f       	adc	r25, r25
    429e:	1a f0       	brmi	.+6      	; 0x42a6 <__fixunssfsi+0x24>
    42a0:	ba 95       	dec	r27
    42a2:	c9 f7       	brne	.-14     	; 0x4296 <__fixunssfsi+0x14>
    42a4:	14 c0       	rjmp	.+40     	; 0x42ce <__fixunssfsi+0x4c>
    42a6:	b1 30       	cpi	r27, 0x01	; 1
    42a8:	91 f0       	breq	.+36     	; 0x42ce <__fixunssfsi+0x4c>
    42aa:	0e 94 f7 21 	call	0x43ee	; 0x43ee <__fp_zero>
    42ae:	b1 e0       	ldi	r27, 0x01	; 1
    42b0:	08 95       	ret
    42b2:	0c 94 f7 21 	jmp	0x43ee	; 0x43ee <__fp_zero>
    42b6:	67 2f       	mov	r22, r23
    42b8:	78 2f       	mov	r23, r24
    42ba:	88 27       	eor	r24, r24
    42bc:	b8 5f       	subi	r27, 0xF8	; 248
    42be:	39 f0       	breq	.+14     	; 0x42ce <__fixunssfsi+0x4c>
    42c0:	b9 3f       	cpi	r27, 0xF9	; 249
    42c2:	cc f3       	brlt	.-14     	; 0x42b6 <__fixunssfsi+0x34>
    42c4:	86 95       	lsr	r24
    42c6:	77 95       	ror	r23
    42c8:	67 95       	ror	r22
    42ca:	b3 95       	inc	r27
    42cc:	d9 f7       	brne	.-10     	; 0x42c4 <__fixunssfsi+0x42>
    42ce:	3e f4       	brtc	.+14     	; 0x42de <__fixunssfsi+0x5c>
    42d0:	90 95       	com	r25
    42d2:	80 95       	com	r24
    42d4:	70 95       	com	r23
    42d6:	61 95       	neg	r22
    42d8:	7f 4f       	sbci	r23, 0xFF	; 255
    42da:	8f 4f       	sbci	r24, 0xFF	; 255
    42dc:	9f 4f       	sbci	r25, 0xFF	; 255
    42de:	08 95       	ret

000042e0 <__floatunsisf>:
    42e0:	e8 94       	clt
    42e2:	09 c0       	rjmp	.+18     	; 0x42f6 <__floatsisf+0x12>

000042e4 <__floatsisf>:
    42e4:	97 fb       	bst	r25, 7
    42e6:	3e f4       	brtc	.+14     	; 0x42f6 <__floatsisf+0x12>
    42e8:	90 95       	com	r25
    42ea:	80 95       	com	r24
    42ec:	70 95       	com	r23
    42ee:	61 95       	neg	r22
    42f0:	7f 4f       	sbci	r23, 0xFF	; 255
    42f2:	8f 4f       	sbci	r24, 0xFF	; 255
    42f4:	9f 4f       	sbci	r25, 0xFF	; 255
    42f6:	99 23       	and	r25, r25
    42f8:	a9 f0       	breq	.+42     	; 0x4324 <__floatsisf+0x40>
    42fa:	f9 2f       	mov	r31, r25
    42fc:	96 e9       	ldi	r25, 0x96	; 150
    42fe:	bb 27       	eor	r27, r27
    4300:	93 95       	inc	r25
    4302:	f6 95       	lsr	r31
    4304:	87 95       	ror	r24
    4306:	77 95       	ror	r23
    4308:	67 95       	ror	r22
    430a:	b7 95       	ror	r27
    430c:	f1 11       	cpse	r31, r1
    430e:	f8 cf       	rjmp	.-16     	; 0x4300 <__floatsisf+0x1c>
    4310:	fa f4       	brpl	.+62     	; 0x4350 <__floatsisf+0x6c>
    4312:	bb 0f       	add	r27, r27
    4314:	11 f4       	brne	.+4      	; 0x431a <__floatsisf+0x36>
    4316:	60 ff       	sbrs	r22, 0
    4318:	1b c0       	rjmp	.+54     	; 0x4350 <__floatsisf+0x6c>
    431a:	6f 5f       	subi	r22, 0xFF	; 255
    431c:	7f 4f       	sbci	r23, 0xFF	; 255
    431e:	8f 4f       	sbci	r24, 0xFF	; 255
    4320:	9f 4f       	sbci	r25, 0xFF	; 255
    4322:	16 c0       	rjmp	.+44     	; 0x4350 <__floatsisf+0x6c>
    4324:	88 23       	and	r24, r24
    4326:	11 f0       	breq	.+4      	; 0x432c <__floatsisf+0x48>
    4328:	96 e9       	ldi	r25, 0x96	; 150
    432a:	11 c0       	rjmp	.+34     	; 0x434e <__floatsisf+0x6a>
    432c:	77 23       	and	r23, r23
    432e:	21 f0       	breq	.+8      	; 0x4338 <__floatsisf+0x54>
    4330:	9e e8       	ldi	r25, 0x8E	; 142
    4332:	87 2f       	mov	r24, r23
    4334:	76 2f       	mov	r23, r22
    4336:	05 c0       	rjmp	.+10     	; 0x4342 <__floatsisf+0x5e>
    4338:	66 23       	and	r22, r22
    433a:	71 f0       	breq	.+28     	; 0x4358 <__floatsisf+0x74>
    433c:	96 e8       	ldi	r25, 0x86	; 134
    433e:	86 2f       	mov	r24, r22
    4340:	70 e0       	ldi	r23, 0x00	; 0
    4342:	60 e0       	ldi	r22, 0x00	; 0
    4344:	2a f0       	brmi	.+10     	; 0x4350 <__floatsisf+0x6c>
    4346:	9a 95       	dec	r25
    4348:	66 0f       	add	r22, r22
    434a:	77 1f       	adc	r23, r23
    434c:	88 1f       	adc	r24, r24
    434e:	da f7       	brpl	.-10     	; 0x4346 <__floatsisf+0x62>
    4350:	88 0f       	add	r24, r24
    4352:	96 95       	lsr	r25
    4354:	87 95       	ror	r24
    4356:	97 f9       	bld	r25, 7
    4358:	08 95       	ret

0000435a <__fp_inf>:
    435a:	97 f9       	bld	r25, 7
    435c:	9f 67       	ori	r25, 0x7F	; 127
    435e:	80 e8       	ldi	r24, 0x80	; 128
    4360:	70 e0       	ldi	r23, 0x00	; 0
    4362:	60 e0       	ldi	r22, 0x00	; 0
    4364:	08 95       	ret

00004366 <__fp_nan>:
    4366:	9f ef       	ldi	r25, 0xFF	; 255
    4368:	80 ec       	ldi	r24, 0xC0	; 192
    436a:	08 95       	ret

0000436c <__fp_pscA>:
    436c:	00 24       	eor	r0, r0
    436e:	0a 94       	dec	r0
    4370:	16 16       	cp	r1, r22
    4372:	17 06       	cpc	r1, r23
    4374:	18 06       	cpc	r1, r24
    4376:	09 06       	cpc	r0, r25
    4378:	08 95       	ret

0000437a <__fp_pscB>:
    437a:	00 24       	eor	r0, r0
    437c:	0a 94       	dec	r0
    437e:	12 16       	cp	r1, r18
    4380:	13 06       	cpc	r1, r19
    4382:	14 06       	cpc	r1, r20
    4384:	05 06       	cpc	r0, r21
    4386:	08 95       	ret

00004388 <__fp_round>:
    4388:	09 2e       	mov	r0, r25
    438a:	03 94       	inc	r0
    438c:	00 0c       	add	r0, r0
    438e:	11 f4       	brne	.+4      	; 0x4394 <__fp_round+0xc>
    4390:	88 23       	and	r24, r24
    4392:	52 f0       	brmi	.+20     	; 0x43a8 <__fp_round+0x20>
    4394:	bb 0f       	add	r27, r27
    4396:	40 f4       	brcc	.+16     	; 0x43a8 <__fp_round+0x20>
    4398:	bf 2b       	or	r27, r31
    439a:	11 f4       	brne	.+4      	; 0x43a0 <__fp_round+0x18>
    439c:	60 ff       	sbrs	r22, 0
    439e:	04 c0       	rjmp	.+8      	; 0x43a8 <__fp_round+0x20>
    43a0:	6f 5f       	subi	r22, 0xFF	; 255
    43a2:	7f 4f       	sbci	r23, 0xFF	; 255
    43a4:	8f 4f       	sbci	r24, 0xFF	; 255
    43a6:	9f 4f       	sbci	r25, 0xFF	; 255
    43a8:	08 95       	ret

000043aa <__fp_split3>:
    43aa:	57 fd       	sbrc	r21, 7
    43ac:	90 58       	subi	r25, 0x80	; 128
    43ae:	44 0f       	add	r20, r20
    43b0:	55 1f       	adc	r21, r21
    43b2:	59 f0       	breq	.+22     	; 0x43ca <__fp_splitA+0x10>
    43b4:	5f 3f       	cpi	r21, 0xFF	; 255
    43b6:	71 f0       	breq	.+28     	; 0x43d4 <__fp_splitA+0x1a>
    43b8:	47 95       	ror	r20

000043ba <__fp_splitA>:
    43ba:	88 0f       	add	r24, r24
    43bc:	97 fb       	bst	r25, 7
    43be:	99 1f       	adc	r25, r25
    43c0:	61 f0       	breq	.+24     	; 0x43da <__fp_splitA+0x20>
    43c2:	9f 3f       	cpi	r25, 0xFF	; 255
    43c4:	79 f0       	breq	.+30     	; 0x43e4 <__fp_splitA+0x2a>
    43c6:	87 95       	ror	r24
    43c8:	08 95       	ret
    43ca:	12 16       	cp	r1, r18
    43cc:	13 06       	cpc	r1, r19
    43ce:	14 06       	cpc	r1, r20
    43d0:	55 1f       	adc	r21, r21
    43d2:	f2 cf       	rjmp	.-28     	; 0x43b8 <__fp_split3+0xe>
    43d4:	46 95       	lsr	r20
    43d6:	f1 df       	rcall	.-30     	; 0x43ba <__fp_splitA>
    43d8:	08 c0       	rjmp	.+16     	; 0x43ea <__fp_splitA+0x30>
    43da:	16 16       	cp	r1, r22
    43dc:	17 06       	cpc	r1, r23
    43de:	18 06       	cpc	r1, r24
    43e0:	99 1f       	adc	r25, r25
    43e2:	f1 cf       	rjmp	.-30     	; 0x43c6 <__fp_splitA+0xc>
    43e4:	86 95       	lsr	r24
    43e6:	71 05       	cpc	r23, r1
    43e8:	61 05       	cpc	r22, r1
    43ea:	08 94       	sec
    43ec:	08 95       	ret

000043ee <__fp_zero>:
    43ee:	e8 94       	clt

000043f0 <__fp_szero>:
    43f0:	bb 27       	eor	r27, r27
    43f2:	66 27       	eor	r22, r22
    43f4:	77 27       	eor	r23, r23
    43f6:	cb 01       	movw	r24, r22
    43f8:	97 f9       	bld	r25, 7
    43fa:	08 95       	ret

000043fc <__gesf2>:
    43fc:	0e 94 03 22 	call	0x4406	; 0x4406 <__fp_cmp>
    4400:	08 f4       	brcc	.+2      	; 0x4404 <__gesf2+0x8>
    4402:	8f ef       	ldi	r24, 0xFF	; 255
    4404:	08 95       	ret

00004406 <__fp_cmp>:
    4406:	99 0f       	add	r25, r25
    4408:	00 08       	sbc	r0, r0
    440a:	55 0f       	add	r21, r21
    440c:	aa 0b       	sbc	r26, r26
    440e:	e0 e8       	ldi	r30, 0x80	; 128
    4410:	fe ef       	ldi	r31, 0xFE	; 254
    4412:	16 16       	cp	r1, r22
    4414:	17 06       	cpc	r1, r23
    4416:	e8 07       	cpc	r30, r24
    4418:	f9 07       	cpc	r31, r25
    441a:	c0 f0       	brcs	.+48     	; 0x444c <__fp_cmp+0x46>
    441c:	12 16       	cp	r1, r18
    441e:	13 06       	cpc	r1, r19
    4420:	e4 07       	cpc	r30, r20
    4422:	f5 07       	cpc	r31, r21
    4424:	98 f0       	brcs	.+38     	; 0x444c <__fp_cmp+0x46>
    4426:	62 1b       	sub	r22, r18
    4428:	73 0b       	sbc	r23, r19
    442a:	84 0b       	sbc	r24, r20
    442c:	95 0b       	sbc	r25, r21
    442e:	39 f4       	brne	.+14     	; 0x443e <__fp_cmp+0x38>
    4430:	0a 26       	eor	r0, r26
    4432:	61 f0       	breq	.+24     	; 0x444c <__fp_cmp+0x46>
    4434:	23 2b       	or	r18, r19
    4436:	24 2b       	or	r18, r20
    4438:	25 2b       	or	r18, r21
    443a:	21 f4       	brne	.+8      	; 0x4444 <__fp_cmp+0x3e>
    443c:	08 95       	ret
    443e:	0a 26       	eor	r0, r26
    4440:	09 f4       	brne	.+2      	; 0x4444 <__fp_cmp+0x3e>
    4442:	a1 40       	sbci	r26, 0x01	; 1
    4444:	a6 95       	lsr	r26
    4446:	8f ef       	ldi	r24, 0xFF	; 255
    4448:	81 1d       	adc	r24, r1
    444a:	81 1d       	adc	r24, r1
    444c:	08 95       	ret

0000444e <do_rand>:
    444e:	8f 92       	push	r8
    4450:	9f 92       	push	r9
    4452:	af 92       	push	r10
    4454:	bf 92       	push	r11
    4456:	cf 92       	push	r12
    4458:	df 92       	push	r13
    445a:	ef 92       	push	r14
    445c:	ff 92       	push	r15
    445e:	cf 93       	push	r28
    4460:	df 93       	push	r29
    4462:	ec 01       	movw	r28, r24
    4464:	68 81       	ld	r22, Y
    4466:	79 81       	ldd	r23, Y+1	; 0x01
    4468:	8a 81       	ldd	r24, Y+2	; 0x02
    446a:	9b 81       	ldd	r25, Y+3	; 0x03
    446c:	61 15       	cp	r22, r1
    446e:	71 05       	cpc	r23, r1
    4470:	81 05       	cpc	r24, r1
    4472:	91 05       	cpc	r25, r1
    4474:	21 f4       	brne	.+8      	; 0x447e <do_rand+0x30>
    4476:	64 e2       	ldi	r22, 0x24	; 36
    4478:	79 ed       	ldi	r23, 0xD9	; 217
    447a:	8b e5       	ldi	r24, 0x5B	; 91
    447c:	97 e0       	ldi	r25, 0x07	; 7
    447e:	2d e1       	ldi	r18, 0x1D	; 29
    4480:	33 ef       	ldi	r19, 0xF3	; 243
    4482:	41 e0       	ldi	r20, 0x01	; 1
    4484:	50 e0       	ldi	r21, 0x00	; 0
    4486:	0e 94 83 22 	call	0x4506	; 0x4506 <__divmodsi4>
    448a:	49 01       	movw	r8, r18
    448c:	5a 01       	movw	r10, r20
    448e:	9b 01       	movw	r18, r22
    4490:	ac 01       	movw	r20, r24
    4492:	a7 ea       	ldi	r26, 0xA7	; 167
    4494:	b1 e4       	ldi	r27, 0x41	; 65
    4496:	0e 94 a2 22 	call	0x4544	; 0x4544 <__muluhisi3>
    449a:	6b 01       	movw	r12, r22
    449c:	7c 01       	movw	r14, r24
    449e:	ac ee       	ldi	r26, 0xEC	; 236
    44a0:	b4 ef       	ldi	r27, 0xF4	; 244
    44a2:	a5 01       	movw	r20, r10
    44a4:	94 01       	movw	r18, r8
    44a6:	0e 94 b0 22 	call	0x4560	; 0x4560 <__mulohisi3>
    44aa:	dc 01       	movw	r26, r24
    44ac:	cb 01       	movw	r24, r22
    44ae:	8c 0d       	add	r24, r12
    44b0:	9d 1d       	adc	r25, r13
    44b2:	ae 1d       	adc	r26, r14
    44b4:	bf 1d       	adc	r27, r15
    44b6:	b7 ff       	sbrs	r27, 7
    44b8:	03 c0       	rjmp	.+6      	; 0x44c0 <do_rand+0x72>
    44ba:	01 97       	sbiw	r24, 0x01	; 1
    44bc:	a1 09       	sbc	r26, r1
    44be:	b0 48       	sbci	r27, 0x80	; 128
    44c0:	88 83       	st	Y, r24
    44c2:	99 83       	std	Y+1, r25	; 0x01
    44c4:	aa 83       	std	Y+2, r26	; 0x02
    44c6:	bb 83       	std	Y+3, r27	; 0x03
    44c8:	9f 77       	andi	r25, 0x7F	; 127
    44ca:	df 91       	pop	r29
    44cc:	cf 91       	pop	r28
    44ce:	ff 90       	pop	r15
    44d0:	ef 90       	pop	r14
    44d2:	df 90       	pop	r13
    44d4:	cf 90       	pop	r12
    44d6:	bf 90       	pop	r11
    44d8:	af 90       	pop	r10
    44da:	9f 90       	pop	r9
    44dc:	8f 90       	pop	r8
    44de:	08 95       	ret

000044e0 <rand_r>:
    44e0:	0e 94 27 22 	call	0x444e	; 0x444e <do_rand>
    44e4:	08 95       	ret

000044e6 <rand>:
    44e6:	82 e2       	ldi	r24, 0x22	; 34
    44e8:	91 e0       	ldi	r25, 0x01	; 1
    44ea:	0e 94 27 22 	call	0x444e	; 0x444e <do_rand>
    44ee:	08 95       	ret

000044f0 <srand>:
    44f0:	a0 e0       	ldi	r26, 0x00	; 0
    44f2:	b0 e0       	ldi	r27, 0x00	; 0
    44f4:	80 93 22 01 	sts	0x0122, r24	; 0x800122 <next>
    44f8:	90 93 23 01 	sts	0x0123, r25	; 0x800123 <next+0x1>
    44fc:	a0 93 24 01 	sts	0x0124, r26	; 0x800124 <next+0x2>
    4500:	b0 93 25 01 	sts	0x0125, r27	; 0x800125 <next+0x3>
    4504:	08 95       	ret

00004506 <__divmodsi4>:
    4506:	05 2e       	mov	r0, r21
    4508:	97 fb       	bst	r25, 7
    450a:	1e f4       	brtc	.+6      	; 0x4512 <__divmodsi4+0xc>
    450c:	00 94       	com	r0
    450e:	0e 94 9a 22 	call	0x4534	; 0x4534 <__negsi2>
    4512:	57 fd       	sbrc	r21, 7
    4514:	07 d0       	rcall	.+14     	; 0x4524 <__divmodsi4_neg2>
    4516:	0e 94 ab 20 	call	0x4156	; 0x4156 <__udivmodsi4>
    451a:	07 fc       	sbrc	r0, 7
    451c:	03 d0       	rcall	.+6      	; 0x4524 <__divmodsi4_neg2>
    451e:	4e f4       	brtc	.+18     	; 0x4532 <__divmodsi4_exit>
    4520:	0c 94 9a 22 	jmp	0x4534	; 0x4534 <__negsi2>

00004524 <__divmodsi4_neg2>:
    4524:	50 95       	com	r21
    4526:	40 95       	com	r20
    4528:	30 95       	com	r19
    452a:	21 95       	neg	r18
    452c:	3f 4f       	sbci	r19, 0xFF	; 255
    452e:	4f 4f       	sbci	r20, 0xFF	; 255
    4530:	5f 4f       	sbci	r21, 0xFF	; 255

00004532 <__divmodsi4_exit>:
    4532:	08 95       	ret

00004534 <__negsi2>:
    4534:	90 95       	com	r25
    4536:	80 95       	com	r24
    4538:	70 95       	com	r23
    453a:	61 95       	neg	r22
    453c:	7f 4f       	sbci	r23, 0xFF	; 255
    453e:	8f 4f       	sbci	r24, 0xFF	; 255
    4540:	9f 4f       	sbci	r25, 0xFF	; 255
    4542:	08 95       	ret

00004544 <__muluhisi3>:
    4544:	0e 94 b5 22 	call	0x456a	; 0x456a <__umulhisi3>
    4548:	a5 9f       	mul	r26, r21
    454a:	90 0d       	add	r25, r0
    454c:	b4 9f       	mul	r27, r20
    454e:	90 0d       	add	r25, r0
    4550:	a4 9f       	mul	r26, r20
    4552:	80 0d       	add	r24, r0
    4554:	91 1d       	adc	r25, r1
    4556:	11 24       	eor	r1, r1
    4558:	08 95       	ret

0000455a <__mulshisi3>:
    455a:	b7 ff       	sbrs	r27, 7
    455c:	0c 94 a2 22 	jmp	0x4544	; 0x4544 <__muluhisi3>

00004560 <__mulohisi3>:
    4560:	0e 94 a2 22 	call	0x4544	; 0x4544 <__muluhisi3>
    4564:	82 1b       	sub	r24, r18
    4566:	93 0b       	sbc	r25, r19
    4568:	08 95       	ret

0000456a <__umulhisi3>:
    456a:	a2 9f       	mul	r26, r18
    456c:	b0 01       	movw	r22, r0
    456e:	b3 9f       	mul	r27, r19
    4570:	c0 01       	movw	r24, r0
    4572:	a3 9f       	mul	r26, r19
    4574:	70 0d       	add	r23, r0
    4576:	81 1d       	adc	r24, r1
    4578:	11 24       	eor	r1, r1
    457a:	91 1d       	adc	r25, r1
    457c:	b2 9f       	mul	r27, r18
    457e:	70 0d       	add	r23, r0
    4580:	81 1d       	adc	r24, r1
    4582:	11 24       	eor	r1, r1
    4584:	91 1d       	adc	r25, r1
    4586:	08 95       	ret

00004588 <_exit>:
    4588:	f8 94       	cli

0000458a <__stop_program>:
    458a:	ff cf       	rjmp	.-2      	; 0x458a <__stop_program>
